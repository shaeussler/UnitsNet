//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using UnitsNet.Units;

// ReSharper disable RedundantCommaInArrayInitializer
// ReSharper disable once CheckNamespace

namespace UnitsNet
{
    public sealed partial class UnitConverter
    {
        /// <summary>
        /// Registers the default conversion functions in the given <see cref="UnitConverter"/> instance.
        /// </summary>
        /// <param name="unitConverter">The <see cref="UnitConverter"/> to register the default conversion functions in.</param>
        public static void RegisterDefaultConversions(UnitConverter unitConverter)
        {
            unitConverter.SetConversionFunction<Acceleration>(Acceleration.BaseUnit, AccelerationUnit.CentimeterPerSecondSquared, q => q.ToUnit(AccelerationUnit.CentimeterPerSecondSquared));
            unitConverter.SetConversionFunction<Acceleration>(AccelerationUnit.CentimeterPerSecondSquared, Acceleration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Acceleration>(Acceleration.BaseUnit, AccelerationUnit.DecimeterPerSecondSquared, q => q.ToUnit(AccelerationUnit.DecimeterPerSecondSquared));
            unitConverter.SetConversionFunction<Acceleration>(AccelerationUnit.DecimeterPerSecondSquared, Acceleration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Acceleration>(Acceleration.BaseUnit, AccelerationUnit.FootPerSecondSquared, q => q.ToUnit(AccelerationUnit.FootPerSecondSquared));
            unitConverter.SetConversionFunction<Acceleration>(AccelerationUnit.FootPerSecondSquared, Acceleration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Acceleration>(Acceleration.BaseUnit, AccelerationUnit.InchPerSecondSquared, q => q.ToUnit(AccelerationUnit.InchPerSecondSquared));
            unitConverter.SetConversionFunction<Acceleration>(AccelerationUnit.InchPerSecondSquared, Acceleration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Acceleration>(Acceleration.BaseUnit, AccelerationUnit.KilometerPerSecondSquared, q => q.ToUnit(AccelerationUnit.KilometerPerSecondSquared));
            unitConverter.SetConversionFunction<Acceleration>(AccelerationUnit.KilometerPerSecondSquared, Acceleration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Acceleration>(Acceleration.BaseUnit, AccelerationUnit.KnotPerHour, q => q.ToUnit(AccelerationUnit.KnotPerHour));
            unitConverter.SetConversionFunction<Acceleration>(AccelerationUnit.KnotPerHour, Acceleration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Acceleration>(Acceleration.BaseUnit, AccelerationUnit.KnotPerMinute, q => q.ToUnit(AccelerationUnit.KnotPerMinute));
            unitConverter.SetConversionFunction<Acceleration>(AccelerationUnit.KnotPerMinute, Acceleration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Acceleration>(Acceleration.BaseUnit, AccelerationUnit.KnotPerSecond, q => q.ToUnit(AccelerationUnit.KnotPerSecond));
            unitConverter.SetConversionFunction<Acceleration>(AccelerationUnit.KnotPerSecond, Acceleration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Acceleration>(Acceleration.BaseUnit, Acceleration.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Acceleration>(Acceleration.BaseUnit, AccelerationUnit.MicrometerPerSecondSquared, q => q.ToUnit(AccelerationUnit.MicrometerPerSecondSquared));
            unitConverter.SetConversionFunction<Acceleration>(AccelerationUnit.MicrometerPerSecondSquared, Acceleration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Acceleration>(Acceleration.BaseUnit, AccelerationUnit.MillimeterPerSecondSquared, q => q.ToUnit(AccelerationUnit.MillimeterPerSecondSquared));
            unitConverter.SetConversionFunction<Acceleration>(AccelerationUnit.MillimeterPerSecondSquared, Acceleration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Acceleration>(Acceleration.BaseUnit, AccelerationUnit.NanometerPerSecondSquared, q => q.ToUnit(AccelerationUnit.NanometerPerSecondSquared));
            unitConverter.SetConversionFunction<Acceleration>(AccelerationUnit.NanometerPerSecondSquared, Acceleration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Acceleration>(Acceleration.BaseUnit, AccelerationUnit.StandardGravity, q => q.ToUnit(AccelerationUnit.StandardGravity));
            unitConverter.SetConversionFunction<Acceleration>(AccelerationUnit.StandardGravity, Acceleration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstance.BaseUnit, AmountOfSubstanceUnit.Centimole, q => q.ToUnit(AmountOfSubstanceUnit.Centimole));
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstanceUnit.Centimole, AmountOfSubstance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstance.BaseUnit, AmountOfSubstanceUnit.CentipoundMole, q => q.ToUnit(AmountOfSubstanceUnit.CentipoundMole));
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstanceUnit.CentipoundMole, AmountOfSubstance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstance.BaseUnit, AmountOfSubstanceUnit.Decimole, q => q.ToUnit(AmountOfSubstanceUnit.Decimole));
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstanceUnit.Decimole, AmountOfSubstance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstance.BaseUnit, AmountOfSubstanceUnit.DecipoundMole, q => q.ToUnit(AmountOfSubstanceUnit.DecipoundMole));
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstanceUnit.DecipoundMole, AmountOfSubstance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstance.BaseUnit, AmountOfSubstanceUnit.Kilomole, q => q.ToUnit(AmountOfSubstanceUnit.Kilomole));
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstanceUnit.Kilomole, AmountOfSubstance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstance.BaseUnit, AmountOfSubstanceUnit.KilopoundMole, q => q.ToUnit(AmountOfSubstanceUnit.KilopoundMole));
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstanceUnit.KilopoundMole, AmountOfSubstance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstance.BaseUnit, AmountOfSubstanceUnit.Megamole, q => q.ToUnit(AmountOfSubstanceUnit.Megamole));
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstanceUnit.Megamole, AmountOfSubstance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstance.BaseUnit, AmountOfSubstanceUnit.Micromole, q => q.ToUnit(AmountOfSubstanceUnit.Micromole));
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstanceUnit.Micromole, AmountOfSubstance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstance.BaseUnit, AmountOfSubstanceUnit.MicropoundMole, q => q.ToUnit(AmountOfSubstanceUnit.MicropoundMole));
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstanceUnit.MicropoundMole, AmountOfSubstance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstance.BaseUnit, AmountOfSubstanceUnit.Millimole, q => q.ToUnit(AmountOfSubstanceUnit.Millimole));
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstanceUnit.Millimole, AmountOfSubstance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstance.BaseUnit, AmountOfSubstanceUnit.MillipoundMole, q => q.ToUnit(AmountOfSubstanceUnit.MillipoundMole));
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstanceUnit.MillipoundMole, AmountOfSubstance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstance.BaseUnit, AmountOfSubstance.BaseUnit, q => q);
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstance.BaseUnit, AmountOfSubstanceUnit.Nanomole, q => q.ToUnit(AmountOfSubstanceUnit.Nanomole));
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstanceUnit.Nanomole, AmountOfSubstance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstance.BaseUnit, AmountOfSubstanceUnit.NanopoundMole, q => q.ToUnit(AmountOfSubstanceUnit.NanopoundMole));
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstanceUnit.NanopoundMole, AmountOfSubstance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstance.BaseUnit, AmountOfSubstanceUnit.PoundMole, q => q.ToUnit(AmountOfSubstanceUnit.PoundMole));
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstanceUnit.PoundMole, AmountOfSubstance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AmplitudeRatio>(AmplitudeRatio.BaseUnit, AmplitudeRatioUnit.DecibelMicrovolt, q => q.ToUnit(AmplitudeRatioUnit.DecibelMicrovolt));
            unitConverter.SetConversionFunction<AmplitudeRatio>(AmplitudeRatioUnit.DecibelMicrovolt, AmplitudeRatio.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AmplitudeRatio>(AmplitudeRatio.BaseUnit, AmplitudeRatioUnit.DecibelMillivolt, q => q.ToUnit(AmplitudeRatioUnit.DecibelMillivolt));
            unitConverter.SetConversionFunction<AmplitudeRatio>(AmplitudeRatioUnit.DecibelMillivolt, AmplitudeRatio.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AmplitudeRatio>(AmplitudeRatio.BaseUnit, AmplitudeRatioUnit.DecibelUnloaded, q => q.ToUnit(AmplitudeRatioUnit.DecibelUnloaded));
            unitConverter.SetConversionFunction<AmplitudeRatio>(AmplitudeRatioUnit.DecibelUnloaded, AmplitudeRatio.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AmplitudeRatio>(AmplitudeRatio.BaseUnit, AmplitudeRatio.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Angle>(Angle.BaseUnit, AngleUnit.Arcminute, q => q.ToUnit(AngleUnit.Arcminute));
            unitConverter.SetConversionFunction<Angle>(AngleUnit.Arcminute, Angle.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Angle>(Angle.BaseUnit, AngleUnit.Arcsecond, q => q.ToUnit(AngleUnit.Arcsecond));
            unitConverter.SetConversionFunction<Angle>(AngleUnit.Arcsecond, Angle.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Angle>(Angle.BaseUnit, AngleUnit.Centiradian, q => q.ToUnit(AngleUnit.Centiradian));
            unitConverter.SetConversionFunction<Angle>(AngleUnit.Centiradian, Angle.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Angle>(Angle.BaseUnit, AngleUnit.Deciradian, q => q.ToUnit(AngleUnit.Deciradian));
            unitConverter.SetConversionFunction<Angle>(AngleUnit.Deciradian, Angle.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Angle>(Angle.BaseUnit, Angle.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Angle>(Angle.BaseUnit, AngleUnit.Gradian, q => q.ToUnit(AngleUnit.Gradian));
            unitConverter.SetConversionFunction<Angle>(AngleUnit.Gradian, Angle.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Angle>(Angle.BaseUnit, AngleUnit.Microdegree, q => q.ToUnit(AngleUnit.Microdegree));
            unitConverter.SetConversionFunction<Angle>(AngleUnit.Microdegree, Angle.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Angle>(Angle.BaseUnit, AngleUnit.Microradian, q => q.ToUnit(AngleUnit.Microradian));
            unitConverter.SetConversionFunction<Angle>(AngleUnit.Microradian, Angle.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Angle>(Angle.BaseUnit, AngleUnit.Millidegree, q => q.ToUnit(AngleUnit.Millidegree));
            unitConverter.SetConversionFunction<Angle>(AngleUnit.Millidegree, Angle.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Angle>(Angle.BaseUnit, AngleUnit.Milliradian, q => q.ToUnit(AngleUnit.Milliradian));
            unitConverter.SetConversionFunction<Angle>(AngleUnit.Milliradian, Angle.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Angle>(Angle.BaseUnit, AngleUnit.Nanodegree, q => q.ToUnit(AngleUnit.Nanodegree));
            unitConverter.SetConversionFunction<Angle>(AngleUnit.Nanodegree, Angle.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Angle>(Angle.BaseUnit, AngleUnit.Nanoradian, q => q.ToUnit(AngleUnit.Nanoradian));
            unitConverter.SetConversionFunction<Angle>(AngleUnit.Nanoradian, Angle.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Angle>(Angle.BaseUnit, AngleUnit.Radian, q => q.ToUnit(AngleUnit.Radian));
            unitConverter.SetConversionFunction<Angle>(AngleUnit.Radian, Angle.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Angle>(Angle.BaseUnit, AngleUnit.Revolution, q => q.ToUnit(AngleUnit.Revolution));
            unitConverter.SetConversionFunction<Angle>(AngleUnit.Revolution, Angle.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ApparentEnergy>(ApparentEnergy.BaseUnit, ApparentEnergyUnit.KilovoltampereHour, q => q.ToUnit(ApparentEnergyUnit.KilovoltampereHour));
            unitConverter.SetConversionFunction<ApparentEnergy>(ApparentEnergyUnit.KilovoltampereHour, ApparentEnergy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ApparentEnergy>(ApparentEnergy.BaseUnit, ApparentEnergyUnit.MegavoltampereHour, q => q.ToUnit(ApparentEnergyUnit.MegavoltampereHour));
            unitConverter.SetConversionFunction<ApparentEnergy>(ApparentEnergyUnit.MegavoltampereHour, ApparentEnergy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ApparentEnergy>(ApparentEnergy.BaseUnit, ApparentEnergy.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ApparentPower>(ApparentPower.BaseUnit, ApparentPowerUnit.Gigavoltampere, q => q.ToUnit(ApparentPowerUnit.Gigavoltampere));
            unitConverter.SetConversionFunction<ApparentPower>(ApparentPowerUnit.Gigavoltampere, ApparentPower.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ApparentPower>(ApparentPower.BaseUnit, ApparentPowerUnit.Kilovoltampere, q => q.ToUnit(ApparentPowerUnit.Kilovoltampere));
            unitConverter.SetConversionFunction<ApparentPower>(ApparentPowerUnit.Kilovoltampere, ApparentPower.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ApparentPower>(ApparentPower.BaseUnit, ApparentPowerUnit.Megavoltampere, q => q.ToUnit(ApparentPowerUnit.Megavoltampere));
            unitConverter.SetConversionFunction<ApparentPower>(ApparentPowerUnit.Megavoltampere, ApparentPower.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ApparentPower>(ApparentPower.BaseUnit, ApparentPower.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Area>(Area.BaseUnit, AreaUnit.Acre, q => q.ToUnit(AreaUnit.Acre));
            unitConverter.SetConversionFunction<Area>(AreaUnit.Acre, Area.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Area>(Area.BaseUnit, AreaUnit.Hectare, q => q.ToUnit(AreaUnit.Hectare));
            unitConverter.SetConversionFunction<Area>(AreaUnit.Hectare, Area.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Area>(Area.BaseUnit, AreaUnit.SquareCentimeter, q => q.ToUnit(AreaUnit.SquareCentimeter));
            unitConverter.SetConversionFunction<Area>(AreaUnit.SquareCentimeter, Area.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Area>(Area.BaseUnit, AreaUnit.SquareDecimeter, q => q.ToUnit(AreaUnit.SquareDecimeter));
            unitConverter.SetConversionFunction<Area>(AreaUnit.SquareDecimeter, Area.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Area>(Area.BaseUnit, AreaUnit.SquareFoot, q => q.ToUnit(AreaUnit.SquareFoot));
            unitConverter.SetConversionFunction<Area>(AreaUnit.SquareFoot, Area.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Area>(Area.BaseUnit, AreaUnit.SquareInch, q => q.ToUnit(AreaUnit.SquareInch));
            unitConverter.SetConversionFunction<Area>(AreaUnit.SquareInch, Area.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Area>(Area.BaseUnit, AreaUnit.SquareKilometer, q => q.ToUnit(AreaUnit.SquareKilometer));
            unitConverter.SetConversionFunction<Area>(AreaUnit.SquareKilometer, Area.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Area>(Area.BaseUnit, Area.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Area>(Area.BaseUnit, AreaUnit.SquareMicrometer, q => q.ToUnit(AreaUnit.SquareMicrometer));
            unitConverter.SetConversionFunction<Area>(AreaUnit.SquareMicrometer, Area.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Area>(Area.BaseUnit, AreaUnit.SquareMile, q => q.ToUnit(AreaUnit.SquareMile));
            unitConverter.SetConversionFunction<Area>(AreaUnit.SquareMile, Area.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Area>(Area.BaseUnit, AreaUnit.SquareMillimeter, q => q.ToUnit(AreaUnit.SquareMillimeter));
            unitConverter.SetConversionFunction<Area>(AreaUnit.SquareMillimeter, Area.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Area>(Area.BaseUnit, AreaUnit.SquareNauticalMile, q => q.ToUnit(AreaUnit.SquareNauticalMile));
            unitConverter.SetConversionFunction<Area>(AreaUnit.SquareNauticalMile, Area.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Area>(Area.BaseUnit, AreaUnit.SquareYard, q => q.ToUnit(AreaUnit.SquareYard));
            unitConverter.SetConversionFunction<Area>(AreaUnit.SquareYard, Area.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Area>(Area.BaseUnit, AreaUnit.UsSurveySquareFoot, q => q.ToUnit(AreaUnit.UsSurveySquareFoot));
            unitConverter.SetConversionFunction<Area>(AreaUnit.UsSurveySquareFoot, Area.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AreaDensity>(AreaDensity.BaseUnit, AreaDensity.BaseUnit, q => q);
            unitConverter.SetConversionFunction<AreaMomentOfInertia>(AreaMomentOfInertia.BaseUnit, AreaMomentOfInertiaUnit.CentimeterToTheFourth, q => q.ToUnit(AreaMomentOfInertiaUnit.CentimeterToTheFourth));
            unitConverter.SetConversionFunction<AreaMomentOfInertia>(AreaMomentOfInertiaUnit.CentimeterToTheFourth, AreaMomentOfInertia.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AreaMomentOfInertia>(AreaMomentOfInertia.BaseUnit, AreaMomentOfInertiaUnit.DecimeterToTheFourth, q => q.ToUnit(AreaMomentOfInertiaUnit.DecimeterToTheFourth));
            unitConverter.SetConversionFunction<AreaMomentOfInertia>(AreaMomentOfInertiaUnit.DecimeterToTheFourth, AreaMomentOfInertia.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AreaMomentOfInertia>(AreaMomentOfInertia.BaseUnit, AreaMomentOfInertiaUnit.FootToTheFourth, q => q.ToUnit(AreaMomentOfInertiaUnit.FootToTheFourth));
            unitConverter.SetConversionFunction<AreaMomentOfInertia>(AreaMomentOfInertiaUnit.FootToTheFourth, AreaMomentOfInertia.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AreaMomentOfInertia>(AreaMomentOfInertia.BaseUnit, AreaMomentOfInertiaUnit.InchToTheFourth, q => q.ToUnit(AreaMomentOfInertiaUnit.InchToTheFourth));
            unitConverter.SetConversionFunction<AreaMomentOfInertia>(AreaMomentOfInertiaUnit.InchToTheFourth, AreaMomentOfInertia.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AreaMomentOfInertia>(AreaMomentOfInertia.BaseUnit, AreaMomentOfInertia.BaseUnit, q => q);
            unitConverter.SetConversionFunction<AreaMomentOfInertia>(AreaMomentOfInertia.BaseUnit, AreaMomentOfInertiaUnit.MillimeterToTheFourth, q => q.ToUnit(AreaMomentOfInertiaUnit.MillimeterToTheFourth));
            unitConverter.SetConversionFunction<AreaMomentOfInertia>(AreaMomentOfInertiaUnit.MillimeterToTheFourth, AreaMomentOfInertia.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRate.BaseUnit, q => q);
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.BytePerSecond, q => q.ToUnit(BitRateUnit.BytePerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.BytePerSecond, BitRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.ExabitPerSecond, q => q.ToUnit(BitRateUnit.ExabitPerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.ExabitPerSecond, BitRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.ExabytePerSecond, q => q.ToUnit(BitRateUnit.ExabytePerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.ExabytePerSecond, BitRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.ExbibitPerSecond, q => q.ToUnit(BitRateUnit.ExbibitPerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.ExbibitPerSecond, BitRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.ExbibytePerSecond, q => q.ToUnit(BitRateUnit.ExbibytePerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.ExbibytePerSecond, BitRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.GibibitPerSecond, q => q.ToUnit(BitRateUnit.GibibitPerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.GibibitPerSecond, BitRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.GibibytePerSecond, q => q.ToUnit(BitRateUnit.GibibytePerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.GibibytePerSecond, BitRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.GigabitPerSecond, q => q.ToUnit(BitRateUnit.GigabitPerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.GigabitPerSecond, BitRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.GigabytePerSecond, q => q.ToUnit(BitRateUnit.GigabytePerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.GigabytePerSecond, BitRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.KibibitPerSecond, q => q.ToUnit(BitRateUnit.KibibitPerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.KibibitPerSecond, BitRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.KibibytePerSecond, q => q.ToUnit(BitRateUnit.KibibytePerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.KibibytePerSecond, BitRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.KilobitPerSecond, q => q.ToUnit(BitRateUnit.KilobitPerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.KilobitPerSecond, BitRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.KilobytePerSecond, q => q.ToUnit(BitRateUnit.KilobytePerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.KilobytePerSecond, BitRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.MebibitPerSecond, q => q.ToUnit(BitRateUnit.MebibitPerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.MebibitPerSecond, BitRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.MebibytePerSecond, q => q.ToUnit(BitRateUnit.MebibytePerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.MebibytePerSecond, BitRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.MegabitPerSecond, q => q.ToUnit(BitRateUnit.MegabitPerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.MegabitPerSecond, BitRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.MegabytePerSecond, q => q.ToUnit(BitRateUnit.MegabytePerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.MegabytePerSecond, BitRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.PebibitPerSecond, q => q.ToUnit(BitRateUnit.PebibitPerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.PebibitPerSecond, BitRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.PebibytePerSecond, q => q.ToUnit(BitRateUnit.PebibytePerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.PebibytePerSecond, BitRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.PetabitPerSecond, q => q.ToUnit(BitRateUnit.PetabitPerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.PetabitPerSecond, BitRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.PetabytePerSecond, q => q.ToUnit(BitRateUnit.PetabytePerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.PetabytePerSecond, BitRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.TebibitPerSecond, q => q.ToUnit(BitRateUnit.TebibitPerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.TebibitPerSecond, BitRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.TebibytePerSecond, q => q.ToUnit(BitRateUnit.TebibytePerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.TebibytePerSecond, BitRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.TerabitPerSecond, q => q.ToUnit(BitRateUnit.TerabitPerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.TerabitPerSecond, BitRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.TerabytePerSecond, q => q.ToUnit(BitRateUnit.TerabytePerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.TerabytePerSecond, BitRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BrakeSpecificFuelConsumption>(BrakeSpecificFuelConsumption.BaseUnit, BrakeSpecificFuelConsumptionUnit.GramPerKiloWattHour, q => q.ToUnit(BrakeSpecificFuelConsumptionUnit.GramPerKiloWattHour));
            unitConverter.SetConversionFunction<BrakeSpecificFuelConsumption>(BrakeSpecificFuelConsumptionUnit.GramPerKiloWattHour, BrakeSpecificFuelConsumption.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BrakeSpecificFuelConsumption>(BrakeSpecificFuelConsumption.BaseUnit, BrakeSpecificFuelConsumption.BaseUnit, q => q);
            unitConverter.SetConversionFunction<BrakeSpecificFuelConsumption>(BrakeSpecificFuelConsumption.BaseUnit, BrakeSpecificFuelConsumptionUnit.PoundPerMechanicalHorsepowerHour, q => q.ToUnit(BrakeSpecificFuelConsumptionUnit.PoundPerMechanicalHorsepowerHour));
            unitConverter.SetConversionFunction<BrakeSpecificFuelConsumption>(BrakeSpecificFuelConsumptionUnit.PoundPerMechanicalHorsepowerHour, BrakeSpecificFuelConsumption.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Capacitance>(Capacitance.BaseUnit, Capacitance.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Capacitance>(Capacitance.BaseUnit, CapacitanceUnit.Kilofarad, q => q.ToUnit(CapacitanceUnit.Kilofarad));
            unitConverter.SetConversionFunction<Capacitance>(CapacitanceUnit.Kilofarad, Capacitance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Capacitance>(Capacitance.BaseUnit, CapacitanceUnit.Megafarad, q => q.ToUnit(CapacitanceUnit.Megafarad));
            unitConverter.SetConversionFunction<Capacitance>(CapacitanceUnit.Megafarad, Capacitance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Capacitance>(Capacitance.BaseUnit, CapacitanceUnit.Microfarad, q => q.ToUnit(CapacitanceUnit.Microfarad));
            unitConverter.SetConversionFunction<Capacitance>(CapacitanceUnit.Microfarad, Capacitance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Capacitance>(Capacitance.BaseUnit, CapacitanceUnit.Millifarad, q => q.ToUnit(CapacitanceUnit.Millifarad));
            unitConverter.SetConversionFunction<Capacitance>(CapacitanceUnit.Millifarad, Capacitance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Capacitance>(Capacitance.BaseUnit, CapacitanceUnit.Nanofarad, q => q.ToUnit(CapacitanceUnit.Nanofarad));
            unitConverter.SetConversionFunction<Capacitance>(CapacitanceUnit.Nanofarad, Capacitance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Capacitance>(Capacitance.BaseUnit, CapacitanceUnit.Picofarad, q => q.ToUnit(CapacitanceUnit.Picofarad));
            unitConverter.SetConversionFunction<Capacitance>(CapacitanceUnit.Picofarad, Capacitance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<CoefficientOfThermalExpansion>(CoefficientOfThermalExpansion.BaseUnit, CoefficientOfThermalExpansionUnit.InverseDegreeCelsius, q => q.ToUnit(CoefficientOfThermalExpansionUnit.InverseDegreeCelsius));
            unitConverter.SetConversionFunction<CoefficientOfThermalExpansion>(CoefficientOfThermalExpansionUnit.InverseDegreeCelsius, CoefficientOfThermalExpansion.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<CoefficientOfThermalExpansion>(CoefficientOfThermalExpansion.BaseUnit, CoefficientOfThermalExpansionUnit.InverseDegreeFahrenheit, q => q.ToUnit(CoefficientOfThermalExpansionUnit.InverseDegreeFahrenheit));
            unitConverter.SetConversionFunction<CoefficientOfThermalExpansion>(CoefficientOfThermalExpansionUnit.InverseDegreeFahrenheit, CoefficientOfThermalExpansion.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<CoefficientOfThermalExpansion>(CoefficientOfThermalExpansion.BaseUnit, CoefficientOfThermalExpansion.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.CentigramPerDeciliter, q => q.ToUnit(DensityUnit.CentigramPerDeciliter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.CentigramPerDeciliter, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.CentigramPerLiter, q => q.ToUnit(DensityUnit.CentigramPerLiter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.CentigramPerLiter, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.CentigramPerMilliliter, q => q.ToUnit(DensityUnit.CentigramPerMilliliter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.CentigramPerMilliliter, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.DecigramPerDeciliter, q => q.ToUnit(DensityUnit.DecigramPerDeciliter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.DecigramPerDeciliter, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.DecigramPerLiter, q => q.ToUnit(DensityUnit.DecigramPerLiter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.DecigramPerLiter, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.DecigramPerMilliliter, q => q.ToUnit(DensityUnit.DecigramPerMilliliter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.DecigramPerMilliliter, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.GramPerCubicCentimeter, q => q.ToUnit(DensityUnit.GramPerCubicCentimeter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.GramPerCubicCentimeter, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.GramPerCubicMeter, q => q.ToUnit(DensityUnit.GramPerCubicMeter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.GramPerCubicMeter, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.GramPerCubicMillimeter, q => q.ToUnit(DensityUnit.GramPerCubicMillimeter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.GramPerCubicMillimeter, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.GramPerDeciliter, q => q.ToUnit(DensityUnit.GramPerDeciliter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.GramPerDeciliter, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.GramPerLiter, q => q.ToUnit(DensityUnit.GramPerLiter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.GramPerLiter, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.GramPerMilliliter, q => q.ToUnit(DensityUnit.GramPerMilliliter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.GramPerMilliliter, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.KilogramPerCubicCentimeter, q => q.ToUnit(DensityUnit.KilogramPerCubicCentimeter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.KilogramPerCubicCentimeter, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, Density.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.KilogramPerCubicMillimeter, q => q.ToUnit(DensityUnit.KilogramPerCubicMillimeter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.KilogramPerCubicMillimeter, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.KilogramPerLiter, q => q.ToUnit(DensityUnit.KilogramPerLiter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.KilogramPerLiter, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.KilopoundPerCubicFoot, q => q.ToUnit(DensityUnit.KilopoundPerCubicFoot));
            unitConverter.SetConversionFunction<Density>(DensityUnit.KilopoundPerCubicFoot, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.KilopoundPerCubicInch, q => q.ToUnit(DensityUnit.KilopoundPerCubicInch));
            unitConverter.SetConversionFunction<Density>(DensityUnit.KilopoundPerCubicInch, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.MicrogramPerCubicMeter, q => q.ToUnit(DensityUnit.MicrogramPerCubicMeter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.MicrogramPerCubicMeter, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.MicrogramPerDeciliter, q => q.ToUnit(DensityUnit.MicrogramPerDeciliter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.MicrogramPerDeciliter, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.MicrogramPerLiter, q => q.ToUnit(DensityUnit.MicrogramPerLiter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.MicrogramPerLiter, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.MicrogramPerMilliliter, q => q.ToUnit(DensityUnit.MicrogramPerMilliliter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.MicrogramPerMilliliter, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.MilligramPerCubicMeter, q => q.ToUnit(DensityUnit.MilligramPerCubicMeter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.MilligramPerCubicMeter, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.MilligramPerDeciliter, q => q.ToUnit(DensityUnit.MilligramPerDeciliter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.MilligramPerDeciliter, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.MilligramPerLiter, q => q.ToUnit(DensityUnit.MilligramPerLiter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.MilligramPerLiter, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.MilligramPerMilliliter, q => q.ToUnit(DensityUnit.MilligramPerMilliliter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.MilligramPerMilliliter, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.NanogramPerDeciliter, q => q.ToUnit(DensityUnit.NanogramPerDeciliter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.NanogramPerDeciliter, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.NanogramPerLiter, q => q.ToUnit(DensityUnit.NanogramPerLiter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.NanogramPerLiter, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.NanogramPerMilliliter, q => q.ToUnit(DensityUnit.NanogramPerMilliliter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.NanogramPerMilliliter, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.PicogramPerDeciliter, q => q.ToUnit(DensityUnit.PicogramPerDeciliter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.PicogramPerDeciliter, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.PicogramPerLiter, q => q.ToUnit(DensityUnit.PicogramPerLiter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.PicogramPerLiter, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.PicogramPerMilliliter, q => q.ToUnit(DensityUnit.PicogramPerMilliliter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.PicogramPerMilliliter, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.PoundPerCubicFoot, q => q.ToUnit(DensityUnit.PoundPerCubicFoot));
            unitConverter.SetConversionFunction<Density>(DensityUnit.PoundPerCubicFoot, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.PoundPerCubicInch, q => q.ToUnit(DensityUnit.PoundPerCubicInch));
            unitConverter.SetConversionFunction<Density>(DensityUnit.PoundPerCubicInch, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.PoundPerImperialGallon, q => q.ToUnit(DensityUnit.PoundPerImperialGallon));
            unitConverter.SetConversionFunction<Density>(DensityUnit.PoundPerImperialGallon, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.PoundPerUSGallon, q => q.ToUnit(DensityUnit.PoundPerUSGallon));
            unitConverter.SetConversionFunction<Density>(DensityUnit.PoundPerUSGallon, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.SlugPerCubicFoot, q => q.ToUnit(DensityUnit.SlugPerCubicFoot));
            unitConverter.SetConversionFunction<Density>(DensityUnit.SlugPerCubicFoot, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.TonnePerCubicCentimeter, q => q.ToUnit(DensityUnit.TonnePerCubicCentimeter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.TonnePerCubicCentimeter, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.TonnePerCubicMeter, q => q.ToUnit(DensityUnit.TonnePerCubicMeter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.TonnePerCubicMeter, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.TonnePerCubicMillimeter, q => q.ToUnit(DensityUnit.TonnePerCubicMillimeter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.TonnePerCubicMillimeter, Density.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Duration>(Duration.BaseUnit, DurationUnit.Day, q => q.ToUnit(DurationUnit.Day));
            unitConverter.SetConversionFunction<Duration>(DurationUnit.Day, Duration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Duration>(Duration.BaseUnit, DurationUnit.Hour, q => q.ToUnit(DurationUnit.Hour));
            unitConverter.SetConversionFunction<Duration>(DurationUnit.Hour, Duration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Duration>(Duration.BaseUnit, DurationUnit.Microsecond, q => q.ToUnit(DurationUnit.Microsecond));
            unitConverter.SetConversionFunction<Duration>(DurationUnit.Microsecond, Duration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Duration>(Duration.BaseUnit, DurationUnit.Millisecond, q => q.ToUnit(DurationUnit.Millisecond));
            unitConverter.SetConversionFunction<Duration>(DurationUnit.Millisecond, Duration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Duration>(Duration.BaseUnit, DurationUnit.Minute, q => q.ToUnit(DurationUnit.Minute));
            unitConverter.SetConversionFunction<Duration>(DurationUnit.Minute, Duration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Duration>(Duration.BaseUnit, DurationUnit.Month30, q => q.ToUnit(DurationUnit.Month30));
            unitConverter.SetConversionFunction<Duration>(DurationUnit.Month30, Duration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Duration>(Duration.BaseUnit, DurationUnit.Nanosecond, q => q.ToUnit(DurationUnit.Nanosecond));
            unitConverter.SetConversionFunction<Duration>(DurationUnit.Nanosecond, Duration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Duration>(Duration.BaseUnit, Duration.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Duration>(Duration.BaseUnit, DurationUnit.Week, q => q.ToUnit(DurationUnit.Week));
            unitConverter.SetConversionFunction<Duration>(DurationUnit.Week, Duration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Duration>(Duration.BaseUnit, DurationUnit.Year365, q => q.ToUnit(DurationUnit.Year365));
            unitConverter.SetConversionFunction<Duration>(DurationUnit.Year365, Duration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<DynamicViscosity>(DynamicViscosity.BaseUnit, DynamicViscosityUnit.Centipoise, q => q.ToUnit(DynamicViscosityUnit.Centipoise));
            unitConverter.SetConversionFunction<DynamicViscosity>(DynamicViscosityUnit.Centipoise, DynamicViscosity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<DynamicViscosity>(DynamicViscosity.BaseUnit, DynamicViscosityUnit.MicropascalSecond, q => q.ToUnit(DynamicViscosityUnit.MicropascalSecond));
            unitConverter.SetConversionFunction<DynamicViscosity>(DynamicViscosityUnit.MicropascalSecond, DynamicViscosity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<DynamicViscosity>(DynamicViscosity.BaseUnit, DynamicViscosityUnit.MillipascalSecond, q => q.ToUnit(DynamicViscosityUnit.MillipascalSecond));
            unitConverter.SetConversionFunction<DynamicViscosity>(DynamicViscosityUnit.MillipascalSecond, DynamicViscosity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<DynamicViscosity>(DynamicViscosity.BaseUnit, DynamicViscosity.BaseUnit, q => q);
            unitConverter.SetConversionFunction<DynamicViscosity>(DynamicViscosity.BaseUnit, DynamicViscosityUnit.PascalSecond, q => q.ToUnit(DynamicViscosityUnit.PascalSecond));
            unitConverter.SetConversionFunction<DynamicViscosity>(DynamicViscosityUnit.PascalSecond, DynamicViscosity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<DynamicViscosity>(DynamicViscosity.BaseUnit, DynamicViscosityUnit.Poise, q => q.ToUnit(DynamicViscosityUnit.Poise));
            unitConverter.SetConversionFunction<DynamicViscosity>(DynamicViscosityUnit.Poise, DynamicViscosity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<DynamicViscosity>(DynamicViscosity.BaseUnit, DynamicViscosityUnit.PoundForceSecondPerSquareFoot, q => q.ToUnit(DynamicViscosityUnit.PoundForceSecondPerSquareFoot));
            unitConverter.SetConversionFunction<DynamicViscosity>(DynamicViscosityUnit.PoundForceSecondPerSquareFoot, DynamicViscosity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<DynamicViscosity>(DynamicViscosity.BaseUnit, DynamicViscosityUnit.PoundForceSecondPerSquareInch, q => q.ToUnit(DynamicViscosityUnit.PoundForceSecondPerSquareInch));
            unitConverter.SetConversionFunction<DynamicViscosity>(DynamicViscosityUnit.PoundForceSecondPerSquareInch, DynamicViscosity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<DynamicViscosity>(DynamicViscosity.BaseUnit, DynamicViscosityUnit.Reyn, q => q.ToUnit(DynamicViscosityUnit.Reyn));
            unitConverter.SetConversionFunction<DynamicViscosity>(DynamicViscosityUnit.Reyn, DynamicViscosity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricAdmittance>(ElectricAdmittance.BaseUnit, ElectricAdmittanceUnit.Microsiemens, q => q.ToUnit(ElectricAdmittanceUnit.Microsiemens));
            unitConverter.SetConversionFunction<ElectricAdmittance>(ElectricAdmittanceUnit.Microsiemens, ElectricAdmittance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricAdmittance>(ElectricAdmittance.BaseUnit, ElectricAdmittanceUnit.Millisiemens, q => q.ToUnit(ElectricAdmittanceUnit.Millisiemens));
            unitConverter.SetConversionFunction<ElectricAdmittance>(ElectricAdmittanceUnit.Millisiemens, ElectricAdmittance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricAdmittance>(ElectricAdmittance.BaseUnit, ElectricAdmittanceUnit.Nanosiemens, q => q.ToUnit(ElectricAdmittanceUnit.Nanosiemens));
            unitConverter.SetConversionFunction<ElectricAdmittance>(ElectricAdmittanceUnit.Nanosiemens, ElectricAdmittance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricAdmittance>(ElectricAdmittance.BaseUnit, ElectricAdmittance.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ElectricCharge>(ElectricCharge.BaseUnit, ElectricChargeUnit.AmpereHour, q => q.ToUnit(ElectricChargeUnit.AmpereHour));
            unitConverter.SetConversionFunction<ElectricCharge>(ElectricChargeUnit.AmpereHour, ElectricCharge.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricCharge>(ElectricCharge.BaseUnit, ElectricCharge.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ElectricCharge>(ElectricCharge.BaseUnit, ElectricChargeUnit.KiloampereHour, q => q.ToUnit(ElectricChargeUnit.KiloampereHour));
            unitConverter.SetConversionFunction<ElectricCharge>(ElectricChargeUnit.KiloampereHour, ElectricCharge.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricCharge>(ElectricCharge.BaseUnit, ElectricChargeUnit.MegaampereHour, q => q.ToUnit(ElectricChargeUnit.MegaampereHour));
            unitConverter.SetConversionFunction<ElectricCharge>(ElectricChargeUnit.MegaampereHour, ElectricCharge.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricCharge>(ElectricCharge.BaseUnit, ElectricChargeUnit.MilliampereHour, q => q.ToUnit(ElectricChargeUnit.MilliampereHour));
            unitConverter.SetConversionFunction<ElectricCharge>(ElectricChargeUnit.MilliampereHour, ElectricCharge.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricChargeDensity>(ElectricChargeDensity.BaseUnit, ElectricChargeDensity.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ElectricConductance>(ElectricConductance.BaseUnit, ElectricConductanceUnit.Microsiemens, q => q.ToUnit(ElectricConductanceUnit.Microsiemens));
            unitConverter.SetConversionFunction<ElectricConductance>(ElectricConductanceUnit.Microsiemens, ElectricConductance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricConductance>(ElectricConductance.BaseUnit, ElectricConductanceUnit.Millisiemens, q => q.ToUnit(ElectricConductanceUnit.Millisiemens));
            unitConverter.SetConversionFunction<ElectricConductance>(ElectricConductanceUnit.Millisiemens, ElectricConductance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricConductance>(ElectricConductance.BaseUnit, ElectricConductance.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ElectricConductivity>(ElectricConductivity.BaseUnit, ElectricConductivityUnit.SiemensPerFoot, q => q.ToUnit(ElectricConductivityUnit.SiemensPerFoot));
            unitConverter.SetConversionFunction<ElectricConductivity>(ElectricConductivityUnit.SiemensPerFoot, ElectricConductivity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricConductivity>(ElectricConductivity.BaseUnit, ElectricConductivityUnit.SiemensPerInch, q => q.ToUnit(ElectricConductivityUnit.SiemensPerInch));
            unitConverter.SetConversionFunction<ElectricConductivity>(ElectricConductivityUnit.SiemensPerInch, ElectricConductivity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricConductivity>(ElectricConductivity.BaseUnit, ElectricConductivity.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ElectricCurrent>(ElectricCurrent.BaseUnit, ElectricCurrent.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ElectricCurrent>(ElectricCurrent.BaseUnit, ElectricCurrentUnit.Centiampere, q => q.ToUnit(ElectricCurrentUnit.Centiampere));
            unitConverter.SetConversionFunction<ElectricCurrent>(ElectricCurrentUnit.Centiampere, ElectricCurrent.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricCurrent>(ElectricCurrent.BaseUnit, ElectricCurrentUnit.Kiloampere, q => q.ToUnit(ElectricCurrentUnit.Kiloampere));
            unitConverter.SetConversionFunction<ElectricCurrent>(ElectricCurrentUnit.Kiloampere, ElectricCurrent.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricCurrent>(ElectricCurrent.BaseUnit, ElectricCurrentUnit.Megaampere, q => q.ToUnit(ElectricCurrentUnit.Megaampere));
            unitConverter.SetConversionFunction<ElectricCurrent>(ElectricCurrentUnit.Megaampere, ElectricCurrent.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricCurrent>(ElectricCurrent.BaseUnit, ElectricCurrentUnit.Microampere, q => q.ToUnit(ElectricCurrentUnit.Microampere));
            unitConverter.SetConversionFunction<ElectricCurrent>(ElectricCurrentUnit.Microampere, ElectricCurrent.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricCurrent>(ElectricCurrent.BaseUnit, ElectricCurrentUnit.Milliampere, q => q.ToUnit(ElectricCurrentUnit.Milliampere));
            unitConverter.SetConversionFunction<ElectricCurrent>(ElectricCurrentUnit.Milliampere, ElectricCurrent.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricCurrent>(ElectricCurrent.BaseUnit, ElectricCurrentUnit.Nanoampere, q => q.ToUnit(ElectricCurrentUnit.Nanoampere));
            unitConverter.SetConversionFunction<ElectricCurrent>(ElectricCurrentUnit.Nanoampere, ElectricCurrent.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricCurrent>(ElectricCurrent.BaseUnit, ElectricCurrentUnit.Picoampere, q => q.ToUnit(ElectricCurrentUnit.Picoampere));
            unitConverter.SetConversionFunction<ElectricCurrent>(ElectricCurrentUnit.Picoampere, ElectricCurrent.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricCurrentDensity>(ElectricCurrentDensity.BaseUnit, ElectricCurrentDensityUnit.AmperePerSquareFoot, q => q.ToUnit(ElectricCurrentDensityUnit.AmperePerSquareFoot));
            unitConverter.SetConversionFunction<ElectricCurrentDensity>(ElectricCurrentDensityUnit.AmperePerSquareFoot, ElectricCurrentDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricCurrentDensity>(ElectricCurrentDensity.BaseUnit, ElectricCurrentDensityUnit.AmperePerSquareInch, q => q.ToUnit(ElectricCurrentDensityUnit.AmperePerSquareInch));
            unitConverter.SetConversionFunction<ElectricCurrentDensity>(ElectricCurrentDensityUnit.AmperePerSquareInch, ElectricCurrentDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricCurrentDensity>(ElectricCurrentDensity.BaseUnit, ElectricCurrentDensity.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ElectricCurrentGradient>(ElectricCurrentGradient.BaseUnit, ElectricCurrentGradient.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ElectricField>(ElectricField.BaseUnit, ElectricField.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ElectricInductance>(ElectricInductance.BaseUnit, ElectricInductance.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ElectricInductance>(ElectricInductance.BaseUnit, ElectricInductanceUnit.Microhenry, q => q.ToUnit(ElectricInductanceUnit.Microhenry));
            unitConverter.SetConversionFunction<ElectricInductance>(ElectricInductanceUnit.Microhenry, ElectricInductance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricInductance>(ElectricInductance.BaseUnit, ElectricInductanceUnit.Millihenry, q => q.ToUnit(ElectricInductanceUnit.Millihenry));
            unitConverter.SetConversionFunction<ElectricInductance>(ElectricInductanceUnit.Millihenry, ElectricInductance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricInductance>(ElectricInductance.BaseUnit, ElectricInductanceUnit.Nanohenry, q => q.ToUnit(ElectricInductanceUnit.Nanohenry));
            unitConverter.SetConversionFunction<ElectricInductance>(ElectricInductanceUnit.Nanohenry, ElectricInductance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotential>(ElectricPotential.BaseUnit, ElectricPotentialUnit.Kilovolt, q => q.ToUnit(ElectricPotentialUnit.Kilovolt));
            unitConverter.SetConversionFunction<ElectricPotential>(ElectricPotentialUnit.Kilovolt, ElectricPotential.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotential>(ElectricPotential.BaseUnit, ElectricPotentialUnit.Megavolt, q => q.ToUnit(ElectricPotentialUnit.Megavolt));
            unitConverter.SetConversionFunction<ElectricPotential>(ElectricPotentialUnit.Megavolt, ElectricPotential.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotential>(ElectricPotential.BaseUnit, ElectricPotentialUnit.Microvolt, q => q.ToUnit(ElectricPotentialUnit.Microvolt));
            unitConverter.SetConversionFunction<ElectricPotential>(ElectricPotentialUnit.Microvolt, ElectricPotential.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotential>(ElectricPotential.BaseUnit, ElectricPotentialUnit.Millivolt, q => q.ToUnit(ElectricPotentialUnit.Millivolt));
            unitConverter.SetConversionFunction<ElectricPotential>(ElectricPotentialUnit.Millivolt, ElectricPotential.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotential>(ElectricPotential.BaseUnit, ElectricPotential.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ElectricPotentialAc>(ElectricPotentialAc.BaseUnit, ElectricPotentialAcUnit.KilovoltAc, q => q.ToUnit(ElectricPotentialAcUnit.KilovoltAc));
            unitConverter.SetConversionFunction<ElectricPotentialAc>(ElectricPotentialAcUnit.KilovoltAc, ElectricPotentialAc.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialAc>(ElectricPotentialAc.BaseUnit, ElectricPotentialAcUnit.MegavoltAc, q => q.ToUnit(ElectricPotentialAcUnit.MegavoltAc));
            unitConverter.SetConversionFunction<ElectricPotentialAc>(ElectricPotentialAcUnit.MegavoltAc, ElectricPotentialAc.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialAc>(ElectricPotentialAc.BaseUnit, ElectricPotentialAcUnit.MicrovoltAc, q => q.ToUnit(ElectricPotentialAcUnit.MicrovoltAc));
            unitConverter.SetConversionFunction<ElectricPotentialAc>(ElectricPotentialAcUnit.MicrovoltAc, ElectricPotentialAc.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialAc>(ElectricPotentialAc.BaseUnit, ElectricPotentialAcUnit.MillivoltAc, q => q.ToUnit(ElectricPotentialAcUnit.MillivoltAc));
            unitConverter.SetConversionFunction<ElectricPotentialAc>(ElectricPotentialAcUnit.MillivoltAc, ElectricPotentialAc.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialAc>(ElectricPotentialAc.BaseUnit, ElectricPotentialAc.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ElectricPotentialDc>(ElectricPotentialDc.BaseUnit, ElectricPotentialDcUnit.KilovoltDc, q => q.ToUnit(ElectricPotentialDcUnit.KilovoltDc));
            unitConverter.SetConversionFunction<ElectricPotentialDc>(ElectricPotentialDcUnit.KilovoltDc, ElectricPotentialDc.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialDc>(ElectricPotentialDc.BaseUnit, ElectricPotentialDcUnit.MegavoltDc, q => q.ToUnit(ElectricPotentialDcUnit.MegavoltDc));
            unitConverter.SetConversionFunction<ElectricPotentialDc>(ElectricPotentialDcUnit.MegavoltDc, ElectricPotentialDc.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialDc>(ElectricPotentialDc.BaseUnit, ElectricPotentialDcUnit.MicrovoltDc, q => q.ToUnit(ElectricPotentialDcUnit.MicrovoltDc));
            unitConverter.SetConversionFunction<ElectricPotentialDc>(ElectricPotentialDcUnit.MicrovoltDc, ElectricPotentialDc.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialDc>(ElectricPotentialDc.BaseUnit, ElectricPotentialDcUnit.MillivoltDc, q => q.ToUnit(ElectricPotentialDcUnit.MillivoltDc));
            unitConverter.SetConversionFunction<ElectricPotentialDc>(ElectricPotentialDcUnit.MillivoltDc, ElectricPotentialDc.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialDc>(ElectricPotentialDc.BaseUnit, ElectricPotentialDc.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ElectricResistance>(ElectricResistance.BaseUnit, ElectricResistanceUnit.Gigaohm, q => q.ToUnit(ElectricResistanceUnit.Gigaohm));
            unitConverter.SetConversionFunction<ElectricResistance>(ElectricResistanceUnit.Gigaohm, ElectricResistance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistance>(ElectricResistance.BaseUnit, ElectricResistanceUnit.Kiloohm, q => q.ToUnit(ElectricResistanceUnit.Kiloohm));
            unitConverter.SetConversionFunction<ElectricResistance>(ElectricResistanceUnit.Kiloohm, ElectricResistance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistance>(ElectricResistance.BaseUnit, ElectricResistanceUnit.Megaohm, q => q.ToUnit(ElectricResistanceUnit.Megaohm));
            unitConverter.SetConversionFunction<ElectricResistance>(ElectricResistanceUnit.Megaohm, ElectricResistance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistance>(ElectricResistance.BaseUnit, ElectricResistanceUnit.Milliohm, q => q.ToUnit(ElectricResistanceUnit.Milliohm));
            unitConverter.SetConversionFunction<ElectricResistance>(ElectricResistanceUnit.Milliohm, ElectricResistance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistance>(ElectricResistance.BaseUnit, ElectricResistance.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivity.BaseUnit, ElectricResistivityUnit.KiloohmCentimeter, q => q.ToUnit(ElectricResistivityUnit.KiloohmCentimeter));
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivityUnit.KiloohmCentimeter, ElectricResistivity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivity.BaseUnit, ElectricResistivityUnit.KiloohmMeter, q => q.ToUnit(ElectricResistivityUnit.KiloohmMeter));
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivityUnit.KiloohmMeter, ElectricResistivity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivity.BaseUnit, ElectricResistivityUnit.MegaohmCentimeter, q => q.ToUnit(ElectricResistivityUnit.MegaohmCentimeter));
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivityUnit.MegaohmCentimeter, ElectricResistivity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivity.BaseUnit, ElectricResistivityUnit.MegaohmMeter, q => q.ToUnit(ElectricResistivityUnit.MegaohmMeter));
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivityUnit.MegaohmMeter, ElectricResistivity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivity.BaseUnit, ElectricResistivityUnit.MicroohmCentimeter, q => q.ToUnit(ElectricResistivityUnit.MicroohmCentimeter));
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivityUnit.MicroohmCentimeter, ElectricResistivity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivity.BaseUnit, ElectricResistivityUnit.MicroohmMeter, q => q.ToUnit(ElectricResistivityUnit.MicroohmMeter));
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivityUnit.MicroohmMeter, ElectricResistivity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivity.BaseUnit, ElectricResistivityUnit.MilliohmCentimeter, q => q.ToUnit(ElectricResistivityUnit.MilliohmCentimeter));
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivityUnit.MilliohmCentimeter, ElectricResistivity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivity.BaseUnit, ElectricResistivityUnit.MilliohmMeter, q => q.ToUnit(ElectricResistivityUnit.MilliohmMeter));
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivityUnit.MilliohmMeter, ElectricResistivity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivity.BaseUnit, ElectricResistivityUnit.NanoohmCentimeter, q => q.ToUnit(ElectricResistivityUnit.NanoohmCentimeter));
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivityUnit.NanoohmCentimeter, ElectricResistivity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivity.BaseUnit, ElectricResistivityUnit.NanoohmMeter, q => q.ToUnit(ElectricResistivityUnit.NanoohmMeter));
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivityUnit.NanoohmMeter, ElectricResistivity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivity.BaseUnit, ElectricResistivityUnit.OhmCentimeter, q => q.ToUnit(ElectricResistivityUnit.OhmCentimeter));
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivityUnit.OhmCentimeter, ElectricResistivity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivity.BaseUnit, ElectricResistivity.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivity.BaseUnit, ElectricResistivityUnit.PicoohmCentimeter, q => q.ToUnit(ElectricResistivityUnit.PicoohmCentimeter));
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivityUnit.PicoohmCentimeter, ElectricResistivity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivity.BaseUnit, ElectricResistivityUnit.PicoohmMeter, q => q.ToUnit(ElectricResistivityUnit.PicoohmMeter));
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivityUnit.PicoohmMeter, ElectricResistivity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricSurfaceChargeDensity>(ElectricSurfaceChargeDensity.BaseUnit, ElectricSurfaceChargeDensityUnit.CoulombPerSquareCentimeter, q => q.ToUnit(ElectricSurfaceChargeDensityUnit.CoulombPerSquareCentimeter));
            unitConverter.SetConversionFunction<ElectricSurfaceChargeDensity>(ElectricSurfaceChargeDensityUnit.CoulombPerSquareCentimeter, ElectricSurfaceChargeDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricSurfaceChargeDensity>(ElectricSurfaceChargeDensity.BaseUnit, ElectricSurfaceChargeDensityUnit.CoulombPerSquareInch, q => q.ToUnit(ElectricSurfaceChargeDensityUnit.CoulombPerSquareInch));
            unitConverter.SetConversionFunction<ElectricSurfaceChargeDensity>(ElectricSurfaceChargeDensityUnit.CoulombPerSquareInch, ElectricSurfaceChargeDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricSurfaceChargeDensity>(ElectricSurfaceChargeDensity.BaseUnit, ElectricSurfaceChargeDensity.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.BritishThermalUnit, q => q.ToUnit(EnergyUnit.BritishThermalUnit));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.BritishThermalUnit, Energy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.Calorie, q => q.ToUnit(EnergyUnit.Calorie));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.Calorie, Energy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.DecathermEc, q => q.ToUnit(EnergyUnit.DecathermEc));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.DecathermEc, Energy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.DecathermImperial, q => q.ToUnit(EnergyUnit.DecathermImperial));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.DecathermImperial, Energy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.DecathermUs, q => q.ToUnit(EnergyUnit.DecathermUs));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.DecathermUs, Energy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.ElectronVolt, q => q.ToUnit(EnergyUnit.ElectronVolt));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.ElectronVolt, Energy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.Erg, q => q.ToUnit(EnergyUnit.Erg));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.Erg, Energy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.FootPound, q => q.ToUnit(EnergyUnit.FootPound));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.FootPound, Energy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.GigabritishThermalUnit, q => q.ToUnit(EnergyUnit.GigabritishThermalUnit));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.GigabritishThermalUnit, Energy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.Gigajoule, q => q.ToUnit(EnergyUnit.Gigajoule));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.Gigajoule, Energy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.GigawattHour, q => q.ToUnit(EnergyUnit.GigawattHour));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.GigawattHour, Energy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, Energy.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.KilobritishThermalUnit, q => q.ToUnit(EnergyUnit.KilobritishThermalUnit));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.KilobritishThermalUnit, Energy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.Kilocalorie, q => q.ToUnit(EnergyUnit.Kilocalorie));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.Kilocalorie, Energy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.Kilojoule, q => q.ToUnit(EnergyUnit.Kilojoule));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.Kilojoule, Energy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.KilowattHour, q => q.ToUnit(EnergyUnit.KilowattHour));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.KilowattHour, Energy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.MegabritishThermalUnit, q => q.ToUnit(EnergyUnit.MegabritishThermalUnit));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.MegabritishThermalUnit, Energy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.Megacalorie, q => q.ToUnit(EnergyUnit.Megacalorie));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.Megacalorie, Energy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.Megajoule, q => q.ToUnit(EnergyUnit.Megajoule));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.Megajoule, Energy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.MegawattHour, q => q.ToUnit(EnergyUnit.MegawattHour));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.MegawattHour, Energy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.Millijoule, q => q.ToUnit(EnergyUnit.Millijoule));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.Millijoule, Energy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.TerawattHour, q => q.ToUnit(EnergyUnit.TerawattHour));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.TerawattHour, Energy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.ThermEc, q => q.ToUnit(EnergyUnit.ThermEc));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.ThermEc, Energy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.ThermImperial, q => q.ToUnit(EnergyUnit.ThermImperial));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.ThermImperial, Energy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.ThermUs, q => q.ToUnit(EnergyUnit.ThermUs));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.ThermUs, Energy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.WattHour, q => q.ToUnit(EnergyUnit.WattHour));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.WattHour, Energy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Entropy>(Entropy.BaseUnit, EntropyUnit.CaloriePerKelvin, q => q.ToUnit(EntropyUnit.CaloriePerKelvin));
            unitConverter.SetConversionFunction<Entropy>(EntropyUnit.CaloriePerKelvin, Entropy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Entropy>(Entropy.BaseUnit, EntropyUnit.JoulePerDegreeCelsius, q => q.ToUnit(EntropyUnit.JoulePerDegreeCelsius));
            unitConverter.SetConversionFunction<Entropy>(EntropyUnit.JoulePerDegreeCelsius, Entropy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Entropy>(Entropy.BaseUnit, Entropy.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Entropy>(Entropy.BaseUnit, EntropyUnit.KilocaloriePerKelvin, q => q.ToUnit(EntropyUnit.KilocaloriePerKelvin));
            unitConverter.SetConversionFunction<Entropy>(EntropyUnit.KilocaloriePerKelvin, Entropy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Entropy>(Entropy.BaseUnit, EntropyUnit.KilojoulePerDegreeCelsius, q => q.ToUnit(EntropyUnit.KilojoulePerDegreeCelsius));
            unitConverter.SetConversionFunction<Entropy>(EntropyUnit.KilojoulePerDegreeCelsius, Entropy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Entropy>(Entropy.BaseUnit, EntropyUnit.KilojoulePerKelvin, q => q.ToUnit(EntropyUnit.KilojoulePerKelvin));
            unitConverter.SetConversionFunction<Entropy>(EntropyUnit.KilojoulePerKelvin, Entropy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Entropy>(Entropy.BaseUnit, EntropyUnit.MegajoulePerKelvin, q => q.ToUnit(EntropyUnit.MegajoulePerKelvin));
            unitConverter.SetConversionFunction<Entropy>(EntropyUnit.MegajoulePerKelvin, Entropy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Force>(Force.BaseUnit, ForceUnit.Decanewton, q => q.ToUnit(ForceUnit.Decanewton));
            unitConverter.SetConversionFunction<Force>(ForceUnit.Decanewton, Force.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Force>(Force.BaseUnit, ForceUnit.Dyn, q => q.ToUnit(ForceUnit.Dyn));
            unitConverter.SetConversionFunction<Force>(ForceUnit.Dyn, Force.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Force>(Force.BaseUnit, ForceUnit.KilogramForce, q => q.ToUnit(ForceUnit.KilogramForce));
            unitConverter.SetConversionFunction<Force>(ForceUnit.KilogramForce, Force.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Force>(Force.BaseUnit, ForceUnit.Kilonewton, q => q.ToUnit(ForceUnit.Kilonewton));
            unitConverter.SetConversionFunction<Force>(ForceUnit.Kilonewton, Force.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Force>(Force.BaseUnit, ForceUnit.KiloPond, q => q.ToUnit(ForceUnit.KiloPond));
            unitConverter.SetConversionFunction<Force>(ForceUnit.KiloPond, Force.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Force>(Force.BaseUnit, ForceUnit.Meganewton, q => q.ToUnit(ForceUnit.Meganewton));
            unitConverter.SetConversionFunction<Force>(ForceUnit.Meganewton, Force.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Force>(Force.BaseUnit, ForceUnit.Micronewton, q => q.ToUnit(ForceUnit.Micronewton));
            unitConverter.SetConversionFunction<Force>(ForceUnit.Micronewton, Force.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Force>(Force.BaseUnit, ForceUnit.Millinewton, q => q.ToUnit(ForceUnit.Millinewton));
            unitConverter.SetConversionFunction<Force>(ForceUnit.Millinewton, Force.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Force>(Force.BaseUnit, Force.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Force>(Force.BaseUnit, ForceUnit.OunceForce, q => q.ToUnit(ForceUnit.OunceForce));
            unitConverter.SetConversionFunction<Force>(ForceUnit.OunceForce, Force.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Force>(Force.BaseUnit, ForceUnit.Poundal, q => q.ToUnit(ForceUnit.Poundal));
            unitConverter.SetConversionFunction<Force>(ForceUnit.Poundal, Force.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Force>(Force.BaseUnit, ForceUnit.PoundForce, q => q.ToUnit(ForceUnit.PoundForce));
            unitConverter.SetConversionFunction<Force>(ForceUnit.PoundForce, Force.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Force>(Force.BaseUnit, ForceUnit.TonneForce, q => q.ToUnit(ForceUnit.TonneForce));
            unitConverter.SetConversionFunction<Force>(ForceUnit.TonneForce, Force.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRate.BaseUnit, ForceChangeRateUnit.CentinewtonPerSecond, q => q.ToUnit(ForceChangeRateUnit.CentinewtonPerSecond));
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRateUnit.CentinewtonPerSecond, ForceChangeRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRate.BaseUnit, ForceChangeRateUnit.DecanewtonPerMinute, q => q.ToUnit(ForceChangeRateUnit.DecanewtonPerMinute));
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRateUnit.DecanewtonPerMinute, ForceChangeRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRate.BaseUnit, ForceChangeRateUnit.DecanewtonPerSecond, q => q.ToUnit(ForceChangeRateUnit.DecanewtonPerSecond));
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRateUnit.DecanewtonPerSecond, ForceChangeRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRate.BaseUnit, ForceChangeRateUnit.DecinewtonPerSecond, q => q.ToUnit(ForceChangeRateUnit.DecinewtonPerSecond));
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRateUnit.DecinewtonPerSecond, ForceChangeRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRate.BaseUnit, ForceChangeRateUnit.KilonewtonPerMinute, q => q.ToUnit(ForceChangeRateUnit.KilonewtonPerMinute));
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRateUnit.KilonewtonPerMinute, ForceChangeRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRate.BaseUnit, ForceChangeRateUnit.KilonewtonPerSecond, q => q.ToUnit(ForceChangeRateUnit.KilonewtonPerSecond));
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRateUnit.KilonewtonPerSecond, ForceChangeRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRate.BaseUnit, ForceChangeRateUnit.MicronewtonPerSecond, q => q.ToUnit(ForceChangeRateUnit.MicronewtonPerSecond));
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRateUnit.MicronewtonPerSecond, ForceChangeRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRate.BaseUnit, ForceChangeRateUnit.MillinewtonPerSecond, q => q.ToUnit(ForceChangeRateUnit.MillinewtonPerSecond));
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRateUnit.MillinewtonPerSecond, ForceChangeRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRate.BaseUnit, ForceChangeRateUnit.NanonewtonPerSecond, q => q.ToUnit(ForceChangeRateUnit.NanonewtonPerSecond));
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRateUnit.NanonewtonPerSecond, ForceChangeRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRate.BaseUnit, ForceChangeRateUnit.NewtonPerMinute, q => q.ToUnit(ForceChangeRateUnit.NewtonPerMinute));
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRateUnit.NewtonPerMinute, ForceChangeRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRate.BaseUnit, ForceChangeRate.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLength.BaseUnit, ForcePerLengthUnit.CentinewtonPerMeter, q => q.ToUnit(ForcePerLengthUnit.CentinewtonPerMeter));
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLengthUnit.CentinewtonPerMeter, ForcePerLength.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLength.BaseUnit, ForcePerLengthUnit.DecinewtonPerMeter, q => q.ToUnit(ForcePerLengthUnit.DecinewtonPerMeter));
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLengthUnit.DecinewtonPerMeter, ForcePerLength.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLength.BaseUnit, ForcePerLengthUnit.KilogramForcePerMeter, q => q.ToUnit(ForcePerLengthUnit.KilogramForcePerMeter));
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLengthUnit.KilogramForcePerMeter, ForcePerLength.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLength.BaseUnit, ForcePerLengthUnit.KilonewtonPerMeter, q => q.ToUnit(ForcePerLengthUnit.KilonewtonPerMeter));
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLengthUnit.KilonewtonPerMeter, ForcePerLength.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLength.BaseUnit, ForcePerLengthUnit.MeganewtonPerMeter, q => q.ToUnit(ForcePerLengthUnit.MeganewtonPerMeter));
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLengthUnit.MeganewtonPerMeter, ForcePerLength.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLength.BaseUnit, ForcePerLengthUnit.MicronewtonPerMeter, q => q.ToUnit(ForcePerLengthUnit.MicronewtonPerMeter));
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLengthUnit.MicronewtonPerMeter, ForcePerLength.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLength.BaseUnit, ForcePerLengthUnit.MillinewtonPerMeter, q => q.ToUnit(ForcePerLengthUnit.MillinewtonPerMeter));
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLengthUnit.MillinewtonPerMeter, ForcePerLength.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLength.BaseUnit, ForcePerLengthUnit.NanonewtonPerMeter, q => q.ToUnit(ForcePerLengthUnit.NanonewtonPerMeter));
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLengthUnit.NanonewtonPerMeter, ForcePerLength.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLength.BaseUnit, ForcePerLength.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLength.BaseUnit, ForcePerLengthUnit.PoundForcePerFoot, q => q.ToUnit(ForcePerLengthUnit.PoundForcePerFoot));
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLengthUnit.PoundForcePerFoot, ForcePerLength.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLength.BaseUnit, ForcePerLengthUnit.PoundForcePerInch, q => q.ToUnit(ForcePerLengthUnit.PoundForcePerInch));
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLengthUnit.PoundForcePerInch, ForcePerLength.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLength.BaseUnit, ForcePerLengthUnit.PoundForcePerYard, q => q.ToUnit(ForcePerLengthUnit.PoundForcePerYard));
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLengthUnit.PoundForcePerYard, ForcePerLength.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Frequency>(Frequency.BaseUnit, FrequencyUnit.BeatPerMinute, q => q.ToUnit(FrequencyUnit.BeatPerMinute));
            unitConverter.SetConversionFunction<Frequency>(FrequencyUnit.BeatPerMinute, Frequency.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Frequency>(Frequency.BaseUnit, FrequencyUnit.CyclePerHour, q => q.ToUnit(FrequencyUnit.CyclePerHour));
            unitConverter.SetConversionFunction<Frequency>(FrequencyUnit.CyclePerHour, Frequency.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Frequency>(Frequency.BaseUnit, FrequencyUnit.CyclePerMinute, q => q.ToUnit(FrequencyUnit.CyclePerMinute));
            unitConverter.SetConversionFunction<Frequency>(FrequencyUnit.CyclePerMinute, Frequency.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Frequency>(Frequency.BaseUnit, FrequencyUnit.Gigahertz, q => q.ToUnit(FrequencyUnit.Gigahertz));
            unitConverter.SetConversionFunction<Frequency>(FrequencyUnit.Gigahertz, Frequency.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Frequency>(Frequency.BaseUnit, Frequency.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Frequency>(Frequency.BaseUnit, FrequencyUnit.Kilohertz, q => q.ToUnit(FrequencyUnit.Kilohertz));
            unitConverter.SetConversionFunction<Frequency>(FrequencyUnit.Kilohertz, Frequency.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Frequency>(Frequency.BaseUnit, FrequencyUnit.Megahertz, q => q.ToUnit(FrequencyUnit.Megahertz));
            unitConverter.SetConversionFunction<Frequency>(FrequencyUnit.Megahertz, Frequency.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Frequency>(Frequency.BaseUnit, FrequencyUnit.RadianPerSecond, q => q.ToUnit(FrequencyUnit.RadianPerSecond));
            unitConverter.SetConversionFunction<Frequency>(FrequencyUnit.RadianPerSecond, Frequency.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Frequency>(Frequency.BaseUnit, FrequencyUnit.Terahertz, q => q.ToUnit(FrequencyUnit.Terahertz));
            unitConverter.SetConversionFunction<Frequency>(FrequencyUnit.Terahertz, Frequency.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<FuelEfficiency>(FuelEfficiency.BaseUnit, FuelEfficiencyUnit.KilometerPerLiter, q => q.ToUnit(FuelEfficiencyUnit.KilometerPerLiter));
            unitConverter.SetConversionFunction<FuelEfficiency>(FuelEfficiencyUnit.KilometerPerLiter, FuelEfficiency.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<FuelEfficiency>(FuelEfficiency.BaseUnit, FuelEfficiency.BaseUnit, q => q);
            unitConverter.SetConversionFunction<FuelEfficiency>(FuelEfficiency.BaseUnit, FuelEfficiencyUnit.MilePerUkGallon, q => q.ToUnit(FuelEfficiencyUnit.MilePerUkGallon));
            unitConverter.SetConversionFunction<FuelEfficiency>(FuelEfficiencyUnit.MilePerUkGallon, FuelEfficiency.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<FuelEfficiency>(FuelEfficiency.BaseUnit, FuelEfficiencyUnit.MilePerUsGallon, q => q.ToUnit(FuelEfficiencyUnit.MilePerUsGallon));
            unitConverter.SetConversionFunction<FuelEfficiency>(FuelEfficiencyUnit.MilePerUsGallon, FuelEfficiency.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux>(HeatFlux.BaseUnit, HeatFluxUnit.BtuPerHourSquareFoot, q => q.ToUnit(HeatFluxUnit.BtuPerHourSquareFoot));
            unitConverter.SetConversionFunction<HeatFlux>(HeatFluxUnit.BtuPerHourSquareFoot, HeatFlux.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux>(HeatFlux.BaseUnit, HeatFluxUnit.BtuPerMinuteSquareFoot, q => q.ToUnit(HeatFluxUnit.BtuPerMinuteSquareFoot));
            unitConverter.SetConversionFunction<HeatFlux>(HeatFluxUnit.BtuPerMinuteSquareFoot, HeatFlux.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux>(HeatFlux.BaseUnit, HeatFluxUnit.BtuPerSecondSquareFoot, q => q.ToUnit(HeatFluxUnit.BtuPerSecondSquareFoot));
            unitConverter.SetConversionFunction<HeatFlux>(HeatFluxUnit.BtuPerSecondSquareFoot, HeatFlux.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux>(HeatFlux.BaseUnit, HeatFluxUnit.BtuPerSecondSquareInch, q => q.ToUnit(HeatFluxUnit.BtuPerSecondSquareInch));
            unitConverter.SetConversionFunction<HeatFlux>(HeatFluxUnit.BtuPerSecondSquareInch, HeatFlux.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux>(HeatFlux.BaseUnit, HeatFluxUnit.CaloriePerSecondSquareCentimeter, q => q.ToUnit(HeatFluxUnit.CaloriePerSecondSquareCentimeter));
            unitConverter.SetConversionFunction<HeatFlux>(HeatFluxUnit.CaloriePerSecondSquareCentimeter, HeatFlux.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux>(HeatFlux.BaseUnit, HeatFluxUnit.CentiwattPerSquareMeter, q => q.ToUnit(HeatFluxUnit.CentiwattPerSquareMeter));
            unitConverter.SetConversionFunction<HeatFlux>(HeatFluxUnit.CentiwattPerSquareMeter, HeatFlux.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux>(HeatFlux.BaseUnit, HeatFluxUnit.DeciwattPerSquareMeter, q => q.ToUnit(HeatFluxUnit.DeciwattPerSquareMeter));
            unitConverter.SetConversionFunction<HeatFlux>(HeatFluxUnit.DeciwattPerSquareMeter, HeatFlux.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux>(HeatFlux.BaseUnit, HeatFluxUnit.KilocaloriePerHourSquareMeter, q => q.ToUnit(HeatFluxUnit.KilocaloriePerHourSquareMeter));
            unitConverter.SetConversionFunction<HeatFlux>(HeatFluxUnit.KilocaloriePerHourSquareMeter, HeatFlux.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux>(HeatFlux.BaseUnit, HeatFluxUnit.KilocaloriePerSecondSquareCentimeter, q => q.ToUnit(HeatFluxUnit.KilocaloriePerSecondSquareCentimeter));
            unitConverter.SetConversionFunction<HeatFlux>(HeatFluxUnit.KilocaloriePerSecondSquareCentimeter, HeatFlux.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux>(HeatFlux.BaseUnit, HeatFluxUnit.KilowattPerSquareMeter, q => q.ToUnit(HeatFluxUnit.KilowattPerSquareMeter));
            unitConverter.SetConversionFunction<HeatFlux>(HeatFluxUnit.KilowattPerSquareMeter, HeatFlux.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux>(HeatFlux.BaseUnit, HeatFluxUnit.MicrowattPerSquareMeter, q => q.ToUnit(HeatFluxUnit.MicrowattPerSquareMeter));
            unitConverter.SetConversionFunction<HeatFlux>(HeatFluxUnit.MicrowattPerSquareMeter, HeatFlux.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux>(HeatFlux.BaseUnit, HeatFluxUnit.MilliwattPerSquareMeter, q => q.ToUnit(HeatFluxUnit.MilliwattPerSquareMeter));
            unitConverter.SetConversionFunction<HeatFlux>(HeatFluxUnit.MilliwattPerSquareMeter, HeatFlux.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux>(HeatFlux.BaseUnit, HeatFluxUnit.NanowattPerSquareMeter, q => q.ToUnit(HeatFluxUnit.NanowattPerSquareMeter));
            unitConverter.SetConversionFunction<HeatFlux>(HeatFluxUnit.NanowattPerSquareMeter, HeatFlux.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux>(HeatFlux.BaseUnit, HeatFluxUnit.PoundForcePerFootSecond, q => q.ToUnit(HeatFluxUnit.PoundForcePerFootSecond));
            unitConverter.SetConversionFunction<HeatFlux>(HeatFluxUnit.PoundForcePerFootSecond, HeatFlux.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux>(HeatFlux.BaseUnit, HeatFluxUnit.PoundPerSecondCubed, q => q.ToUnit(HeatFluxUnit.PoundPerSecondCubed));
            unitConverter.SetConversionFunction<HeatFlux>(HeatFluxUnit.PoundPerSecondCubed, HeatFlux.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux>(HeatFlux.BaseUnit, HeatFluxUnit.WattPerSquareFoot, q => q.ToUnit(HeatFluxUnit.WattPerSquareFoot));
            unitConverter.SetConversionFunction<HeatFlux>(HeatFluxUnit.WattPerSquareFoot, HeatFlux.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux>(HeatFlux.BaseUnit, HeatFluxUnit.WattPerSquareInch, q => q.ToUnit(HeatFluxUnit.WattPerSquareInch));
            unitConverter.SetConversionFunction<HeatFlux>(HeatFluxUnit.WattPerSquareInch, HeatFlux.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux>(HeatFlux.BaseUnit, HeatFlux.BaseUnit, q => q);
            unitConverter.SetConversionFunction<HeatTransferCoefficient>(HeatTransferCoefficient.BaseUnit, HeatTransferCoefficientUnit.BtuPerSquareFootDegreeFahrenheit, q => q.ToUnit(HeatTransferCoefficientUnit.BtuPerSquareFootDegreeFahrenheit));
            unitConverter.SetConversionFunction<HeatTransferCoefficient>(HeatTransferCoefficientUnit.BtuPerSquareFootDegreeFahrenheit, HeatTransferCoefficient.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatTransferCoefficient>(HeatTransferCoefficient.BaseUnit, HeatTransferCoefficientUnit.WattPerSquareMeterCelsius, q => q.ToUnit(HeatTransferCoefficientUnit.WattPerSquareMeterCelsius));
            unitConverter.SetConversionFunction<HeatTransferCoefficient>(HeatTransferCoefficientUnit.WattPerSquareMeterCelsius, HeatTransferCoefficient.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatTransferCoefficient>(HeatTransferCoefficient.BaseUnit, HeatTransferCoefficient.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Illuminance>(Illuminance.BaseUnit, IlluminanceUnit.Kilolux, q => q.ToUnit(IlluminanceUnit.Kilolux));
            unitConverter.SetConversionFunction<Illuminance>(IlluminanceUnit.Kilolux, Illuminance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Illuminance>(Illuminance.BaseUnit, Illuminance.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Illuminance>(Illuminance.BaseUnit, IlluminanceUnit.Megalux, q => q.ToUnit(IlluminanceUnit.Megalux));
            unitConverter.SetConversionFunction<Illuminance>(IlluminanceUnit.Megalux, Illuminance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Illuminance>(Illuminance.BaseUnit, IlluminanceUnit.Millilux, q => q.ToUnit(IlluminanceUnit.Millilux));
            unitConverter.SetConversionFunction<Illuminance>(IlluminanceUnit.Millilux, Illuminance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, Information.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Byte, q => q.ToUnit(InformationUnit.Byte));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Byte, Information.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Exabit, q => q.ToUnit(InformationUnit.Exabit));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Exabit, Information.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Exabyte, q => q.ToUnit(InformationUnit.Exabyte));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Exabyte, Information.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Exbibit, q => q.ToUnit(InformationUnit.Exbibit));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Exbibit, Information.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Exbibyte, q => q.ToUnit(InformationUnit.Exbibyte));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Exbibyte, Information.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Gibibit, q => q.ToUnit(InformationUnit.Gibibit));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Gibibit, Information.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Gibibyte, q => q.ToUnit(InformationUnit.Gibibyte));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Gibibyte, Information.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Gigabit, q => q.ToUnit(InformationUnit.Gigabit));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Gigabit, Information.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Gigabyte, q => q.ToUnit(InformationUnit.Gigabyte));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Gigabyte, Information.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Kibibit, q => q.ToUnit(InformationUnit.Kibibit));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Kibibit, Information.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Kibibyte, q => q.ToUnit(InformationUnit.Kibibyte));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Kibibyte, Information.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Kilobit, q => q.ToUnit(InformationUnit.Kilobit));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Kilobit, Information.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Kilobyte, q => q.ToUnit(InformationUnit.Kilobyte));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Kilobyte, Information.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Mebibit, q => q.ToUnit(InformationUnit.Mebibit));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Mebibit, Information.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Mebibyte, q => q.ToUnit(InformationUnit.Mebibyte));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Mebibyte, Information.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Megabit, q => q.ToUnit(InformationUnit.Megabit));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Megabit, Information.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Megabyte, q => q.ToUnit(InformationUnit.Megabyte));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Megabyte, Information.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Pebibit, q => q.ToUnit(InformationUnit.Pebibit));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Pebibit, Information.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Pebibyte, q => q.ToUnit(InformationUnit.Pebibyte));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Pebibyte, Information.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Petabit, q => q.ToUnit(InformationUnit.Petabit));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Petabit, Information.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Petabyte, q => q.ToUnit(InformationUnit.Petabyte));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Petabyte, Information.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Tebibit, q => q.ToUnit(InformationUnit.Tebibit));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Tebibit, Information.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Tebibyte, q => q.ToUnit(InformationUnit.Tebibyte));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Tebibyte, Information.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Terabit, q => q.ToUnit(InformationUnit.Terabit));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Terabit, Information.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Terabyte, q => q.ToUnit(InformationUnit.Terabyte));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Terabyte, Information.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance>(Irradiance.BaseUnit, IrradianceUnit.KilowattPerSquareCentimeter, q => q.ToUnit(IrradianceUnit.KilowattPerSquareCentimeter));
            unitConverter.SetConversionFunction<Irradiance>(IrradianceUnit.KilowattPerSquareCentimeter, Irradiance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance>(Irradiance.BaseUnit, IrradianceUnit.KilowattPerSquareMeter, q => q.ToUnit(IrradianceUnit.KilowattPerSquareMeter));
            unitConverter.SetConversionFunction<Irradiance>(IrradianceUnit.KilowattPerSquareMeter, Irradiance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance>(Irradiance.BaseUnit, IrradianceUnit.MegawattPerSquareCentimeter, q => q.ToUnit(IrradianceUnit.MegawattPerSquareCentimeter));
            unitConverter.SetConversionFunction<Irradiance>(IrradianceUnit.MegawattPerSquareCentimeter, Irradiance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance>(Irradiance.BaseUnit, IrradianceUnit.MegawattPerSquareMeter, q => q.ToUnit(IrradianceUnit.MegawattPerSquareMeter));
            unitConverter.SetConversionFunction<Irradiance>(IrradianceUnit.MegawattPerSquareMeter, Irradiance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance>(Irradiance.BaseUnit, IrradianceUnit.MicrowattPerSquareCentimeter, q => q.ToUnit(IrradianceUnit.MicrowattPerSquareCentimeter));
            unitConverter.SetConversionFunction<Irradiance>(IrradianceUnit.MicrowattPerSquareCentimeter, Irradiance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance>(Irradiance.BaseUnit, IrradianceUnit.MicrowattPerSquareMeter, q => q.ToUnit(IrradianceUnit.MicrowattPerSquareMeter));
            unitConverter.SetConversionFunction<Irradiance>(IrradianceUnit.MicrowattPerSquareMeter, Irradiance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance>(Irradiance.BaseUnit, IrradianceUnit.MilliwattPerSquareCentimeter, q => q.ToUnit(IrradianceUnit.MilliwattPerSquareCentimeter));
            unitConverter.SetConversionFunction<Irradiance>(IrradianceUnit.MilliwattPerSquareCentimeter, Irradiance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance>(Irradiance.BaseUnit, IrradianceUnit.MilliwattPerSquareMeter, q => q.ToUnit(IrradianceUnit.MilliwattPerSquareMeter));
            unitConverter.SetConversionFunction<Irradiance>(IrradianceUnit.MilliwattPerSquareMeter, Irradiance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance>(Irradiance.BaseUnit, IrradianceUnit.NanowattPerSquareCentimeter, q => q.ToUnit(IrradianceUnit.NanowattPerSquareCentimeter));
            unitConverter.SetConversionFunction<Irradiance>(IrradianceUnit.NanowattPerSquareCentimeter, Irradiance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance>(Irradiance.BaseUnit, IrradianceUnit.NanowattPerSquareMeter, q => q.ToUnit(IrradianceUnit.NanowattPerSquareMeter));
            unitConverter.SetConversionFunction<Irradiance>(IrradianceUnit.NanowattPerSquareMeter, Irradiance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance>(Irradiance.BaseUnit, IrradianceUnit.PicowattPerSquareCentimeter, q => q.ToUnit(IrradianceUnit.PicowattPerSquareCentimeter));
            unitConverter.SetConversionFunction<Irradiance>(IrradianceUnit.PicowattPerSquareCentimeter, Irradiance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance>(Irradiance.BaseUnit, IrradianceUnit.PicowattPerSquareMeter, q => q.ToUnit(IrradianceUnit.PicowattPerSquareMeter));
            unitConverter.SetConversionFunction<Irradiance>(IrradianceUnit.PicowattPerSquareMeter, Irradiance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance>(Irradiance.BaseUnit, IrradianceUnit.WattPerSquareCentimeter, q => q.ToUnit(IrradianceUnit.WattPerSquareCentimeter));
            unitConverter.SetConversionFunction<Irradiance>(IrradianceUnit.WattPerSquareCentimeter, Irradiance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance>(Irradiance.BaseUnit, Irradiance.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Irradiation>(Irradiation.BaseUnit, IrradiationUnit.JoulePerSquareCentimeter, q => q.ToUnit(IrradiationUnit.JoulePerSquareCentimeter));
            unitConverter.SetConversionFunction<Irradiation>(IrradiationUnit.JoulePerSquareCentimeter, Irradiation.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiation>(Irradiation.BaseUnit, Irradiation.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Irradiation>(Irradiation.BaseUnit, IrradiationUnit.JoulePerSquareMillimeter, q => q.ToUnit(IrradiationUnit.JoulePerSquareMillimeter));
            unitConverter.SetConversionFunction<Irradiation>(IrradiationUnit.JoulePerSquareMillimeter, Irradiation.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiation>(Irradiation.BaseUnit, IrradiationUnit.KilojoulePerSquareMeter, q => q.ToUnit(IrradiationUnit.KilojoulePerSquareMeter));
            unitConverter.SetConversionFunction<Irradiation>(IrradiationUnit.KilojoulePerSquareMeter, Irradiation.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiation>(Irradiation.BaseUnit, IrradiationUnit.KilowattHourPerSquareMeter, q => q.ToUnit(IrradiationUnit.KilowattHourPerSquareMeter));
            unitConverter.SetConversionFunction<Irradiation>(IrradiationUnit.KilowattHourPerSquareMeter, Irradiation.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiation>(Irradiation.BaseUnit, IrradiationUnit.MillijoulePerSquareCentimeter, q => q.ToUnit(IrradiationUnit.MillijoulePerSquareCentimeter));
            unitConverter.SetConversionFunction<Irradiation>(IrradiationUnit.MillijoulePerSquareCentimeter, Irradiation.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiation>(Irradiation.BaseUnit, IrradiationUnit.WattHourPerSquareMeter, q => q.ToUnit(IrradiationUnit.WattHourPerSquareMeter));
            unitConverter.SetConversionFunction<Irradiation>(IrradiationUnit.WattHourPerSquareMeter, Irradiation.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<IrradiationDose>(IrradiationDose.BaseUnit, IrradiationDose.BaseUnit, q => q);
            unitConverter.SetConversionFunction<IrradiationDose>(IrradiationDose.BaseUnit, IrradiationDoseUnit.Milligray, q => q.ToUnit(IrradiationDoseUnit.Milligray));
            unitConverter.SetConversionFunction<IrradiationDose>(IrradiationDoseUnit.Milligray, IrradiationDose.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<KinematicViscosity>(KinematicViscosity.BaseUnit, KinematicViscosityUnit.Centistokes, q => q.ToUnit(KinematicViscosityUnit.Centistokes));
            unitConverter.SetConversionFunction<KinematicViscosity>(KinematicViscosityUnit.Centistokes, KinematicViscosity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<KinematicViscosity>(KinematicViscosity.BaseUnit, KinematicViscosityUnit.Decistokes, q => q.ToUnit(KinematicViscosityUnit.Decistokes));
            unitConverter.SetConversionFunction<KinematicViscosity>(KinematicViscosityUnit.Decistokes, KinematicViscosity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<KinematicViscosity>(KinematicViscosity.BaseUnit, KinematicViscosityUnit.Kilostokes, q => q.ToUnit(KinematicViscosityUnit.Kilostokes));
            unitConverter.SetConversionFunction<KinematicViscosity>(KinematicViscosityUnit.Kilostokes, KinematicViscosity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<KinematicViscosity>(KinematicViscosity.BaseUnit, KinematicViscosityUnit.Microstokes, q => q.ToUnit(KinematicViscosityUnit.Microstokes));
            unitConverter.SetConversionFunction<KinematicViscosity>(KinematicViscosityUnit.Microstokes, KinematicViscosity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<KinematicViscosity>(KinematicViscosity.BaseUnit, KinematicViscosityUnit.Millistokes, q => q.ToUnit(KinematicViscosityUnit.Millistokes));
            unitConverter.SetConversionFunction<KinematicViscosity>(KinematicViscosityUnit.Millistokes, KinematicViscosity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<KinematicViscosity>(KinematicViscosity.BaseUnit, KinematicViscosityUnit.Nanostokes, q => q.ToUnit(KinematicViscosityUnit.Nanostokes));
            unitConverter.SetConversionFunction<KinematicViscosity>(KinematicViscosityUnit.Nanostokes, KinematicViscosity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<KinematicViscosity>(KinematicViscosity.BaseUnit, KinematicViscosity.BaseUnit, q => q);
            unitConverter.SetConversionFunction<KinematicViscosity>(KinematicViscosity.BaseUnit, KinematicViscosityUnit.Stokes, q => q.ToUnit(KinematicViscosityUnit.Stokes));
            unitConverter.SetConversionFunction<KinematicViscosity>(KinematicViscosityUnit.Stokes, KinematicViscosity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LapseRate>(LapseRate.BaseUnit, LapseRate.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.AstronomicalUnit, q => q.ToUnit(LengthUnit.AstronomicalUnit));
            unitConverter.SetConversionFunction<Length>(LengthUnit.AstronomicalUnit, Length.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.Centimeter, q => q.ToUnit(LengthUnit.Centimeter));
            unitConverter.SetConversionFunction<Length>(LengthUnit.Centimeter, Length.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.Decimeter, q => q.ToUnit(LengthUnit.Decimeter));
            unitConverter.SetConversionFunction<Length>(LengthUnit.Decimeter, Length.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.DtpPica, q => q.ToUnit(LengthUnit.DtpPica));
            unitConverter.SetConversionFunction<Length>(LengthUnit.DtpPica, Length.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.DtpPoint, q => q.ToUnit(LengthUnit.DtpPoint));
            unitConverter.SetConversionFunction<Length>(LengthUnit.DtpPoint, Length.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.Fathom, q => q.ToUnit(LengthUnit.Fathom));
            unitConverter.SetConversionFunction<Length>(LengthUnit.Fathom, Length.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.Foot, q => q.ToUnit(LengthUnit.Foot));
            unitConverter.SetConversionFunction<Length>(LengthUnit.Foot, Length.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.Hand, q => q.ToUnit(LengthUnit.Hand));
            unitConverter.SetConversionFunction<Length>(LengthUnit.Hand, Length.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.Hectometer, q => q.ToUnit(LengthUnit.Hectometer));
            unitConverter.SetConversionFunction<Length>(LengthUnit.Hectometer, Length.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.Inch, q => q.ToUnit(LengthUnit.Inch));
            unitConverter.SetConversionFunction<Length>(LengthUnit.Inch, Length.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.KilolightYear, q => q.ToUnit(LengthUnit.KilolightYear));
            unitConverter.SetConversionFunction<Length>(LengthUnit.KilolightYear, Length.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.Kilometer, q => q.ToUnit(LengthUnit.Kilometer));
            unitConverter.SetConversionFunction<Length>(LengthUnit.Kilometer, Length.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.Kiloparsec, q => q.ToUnit(LengthUnit.Kiloparsec));
            unitConverter.SetConversionFunction<Length>(LengthUnit.Kiloparsec, Length.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.LightYear, q => q.ToUnit(LengthUnit.LightYear));
            unitConverter.SetConversionFunction<Length>(LengthUnit.LightYear, Length.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.MegalightYear, q => q.ToUnit(LengthUnit.MegalightYear));
            unitConverter.SetConversionFunction<Length>(LengthUnit.MegalightYear, Length.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.Megaparsec, q => q.ToUnit(LengthUnit.Megaparsec));
            unitConverter.SetConversionFunction<Length>(LengthUnit.Megaparsec, Length.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, Length.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.Microinch, q => q.ToUnit(LengthUnit.Microinch));
            unitConverter.SetConversionFunction<Length>(LengthUnit.Microinch, Length.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.Micrometer, q => q.ToUnit(LengthUnit.Micrometer));
            unitConverter.SetConversionFunction<Length>(LengthUnit.Micrometer, Length.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.Mil, q => q.ToUnit(LengthUnit.Mil));
            unitConverter.SetConversionFunction<Length>(LengthUnit.Mil, Length.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.Mile, q => q.ToUnit(LengthUnit.Mile));
            unitConverter.SetConversionFunction<Length>(LengthUnit.Mile, Length.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.Millimeter, q => q.ToUnit(LengthUnit.Millimeter));
            unitConverter.SetConversionFunction<Length>(LengthUnit.Millimeter, Length.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.Nanometer, q => q.ToUnit(LengthUnit.Nanometer));
            unitConverter.SetConversionFunction<Length>(LengthUnit.Nanometer, Length.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.NauticalMile, q => q.ToUnit(LengthUnit.NauticalMile));
            unitConverter.SetConversionFunction<Length>(LengthUnit.NauticalMile, Length.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.Parsec, q => q.ToUnit(LengthUnit.Parsec));
            unitConverter.SetConversionFunction<Length>(LengthUnit.Parsec, Length.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.PrinterPica, q => q.ToUnit(LengthUnit.PrinterPica));
            unitConverter.SetConversionFunction<Length>(LengthUnit.PrinterPica, Length.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.PrinterPoint, q => q.ToUnit(LengthUnit.PrinterPoint));
            unitConverter.SetConversionFunction<Length>(LengthUnit.PrinterPoint, Length.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.Shackle, q => q.ToUnit(LengthUnit.Shackle));
            unitConverter.SetConversionFunction<Length>(LengthUnit.Shackle, Length.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.SolarRadius, q => q.ToUnit(LengthUnit.SolarRadius));
            unitConverter.SetConversionFunction<Length>(LengthUnit.SolarRadius, Length.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.Twip, q => q.ToUnit(LengthUnit.Twip));
            unitConverter.SetConversionFunction<Length>(LengthUnit.Twip, Length.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.UsSurveyFoot, q => q.ToUnit(LengthUnit.UsSurveyFoot));
            unitConverter.SetConversionFunction<Length>(LengthUnit.UsSurveyFoot, Length.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.Yard, q => q.ToUnit(LengthUnit.Yard));
            unitConverter.SetConversionFunction<Length>(LengthUnit.Yard, Length.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Level>(Level.BaseUnit, Level.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Level>(Level.BaseUnit, LevelUnit.Neper, q => q.ToUnit(LevelUnit.Neper));
            unitConverter.SetConversionFunction<Level>(LevelUnit.Neper, Level.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearDensity>(LinearDensity.BaseUnit, LinearDensityUnit.GramPerMeter, q => q.ToUnit(LinearDensityUnit.GramPerMeter));
            unitConverter.SetConversionFunction<LinearDensity>(LinearDensityUnit.GramPerMeter, LinearDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearDensity>(LinearDensity.BaseUnit, LinearDensity.BaseUnit, q => q);
            unitConverter.SetConversionFunction<LinearDensity>(LinearDensity.BaseUnit, LinearDensityUnit.PoundPerFoot, q => q.ToUnit(LinearDensityUnit.PoundPerFoot));
            unitConverter.SetConversionFunction<LinearDensity>(LinearDensityUnit.PoundPerFoot, LinearDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Luminosity>(Luminosity.BaseUnit, LuminosityUnit.Decawatt, q => q.ToUnit(LuminosityUnit.Decawatt));
            unitConverter.SetConversionFunction<Luminosity>(LuminosityUnit.Decawatt, Luminosity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Luminosity>(Luminosity.BaseUnit, LuminosityUnit.Deciwatt, q => q.ToUnit(LuminosityUnit.Deciwatt));
            unitConverter.SetConversionFunction<Luminosity>(LuminosityUnit.Deciwatt, Luminosity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Luminosity>(Luminosity.BaseUnit, LuminosityUnit.Femtowatt, q => q.ToUnit(LuminosityUnit.Femtowatt));
            unitConverter.SetConversionFunction<Luminosity>(LuminosityUnit.Femtowatt, Luminosity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Luminosity>(Luminosity.BaseUnit, LuminosityUnit.Gigawatt, q => q.ToUnit(LuminosityUnit.Gigawatt));
            unitConverter.SetConversionFunction<Luminosity>(LuminosityUnit.Gigawatt, Luminosity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Luminosity>(Luminosity.BaseUnit, LuminosityUnit.Kilowatt, q => q.ToUnit(LuminosityUnit.Kilowatt));
            unitConverter.SetConversionFunction<Luminosity>(LuminosityUnit.Kilowatt, Luminosity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Luminosity>(Luminosity.BaseUnit, LuminosityUnit.Megawatt, q => q.ToUnit(LuminosityUnit.Megawatt));
            unitConverter.SetConversionFunction<Luminosity>(LuminosityUnit.Megawatt, Luminosity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Luminosity>(Luminosity.BaseUnit, LuminosityUnit.Microwatt, q => q.ToUnit(LuminosityUnit.Microwatt));
            unitConverter.SetConversionFunction<Luminosity>(LuminosityUnit.Microwatt, Luminosity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Luminosity>(Luminosity.BaseUnit, LuminosityUnit.Milliwatt, q => q.ToUnit(LuminosityUnit.Milliwatt));
            unitConverter.SetConversionFunction<Luminosity>(LuminosityUnit.Milliwatt, Luminosity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Luminosity>(Luminosity.BaseUnit, LuminosityUnit.Nanowatt, q => q.ToUnit(LuminosityUnit.Nanowatt));
            unitConverter.SetConversionFunction<Luminosity>(LuminosityUnit.Nanowatt, Luminosity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Luminosity>(Luminosity.BaseUnit, LuminosityUnit.Petawatt, q => q.ToUnit(LuminosityUnit.Petawatt));
            unitConverter.SetConversionFunction<Luminosity>(LuminosityUnit.Petawatt, Luminosity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Luminosity>(Luminosity.BaseUnit, LuminosityUnit.Picowatt, q => q.ToUnit(LuminosityUnit.Picowatt));
            unitConverter.SetConversionFunction<Luminosity>(LuminosityUnit.Picowatt, Luminosity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Luminosity>(Luminosity.BaseUnit, LuminosityUnit.SolarLuminosity, q => q.ToUnit(LuminosityUnit.SolarLuminosity));
            unitConverter.SetConversionFunction<Luminosity>(LuminosityUnit.SolarLuminosity, Luminosity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Luminosity>(Luminosity.BaseUnit, LuminosityUnit.Terawatt, q => q.ToUnit(LuminosityUnit.Terawatt));
            unitConverter.SetConversionFunction<Luminosity>(LuminosityUnit.Terawatt, Luminosity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Luminosity>(Luminosity.BaseUnit, Luminosity.BaseUnit, q => q);
            unitConverter.SetConversionFunction<LuminousFlux>(LuminousFlux.BaseUnit, LuminousFlux.BaseUnit, q => q);
            unitConverter.SetConversionFunction<LuminousIntensity>(LuminousIntensity.BaseUnit, LuminousIntensity.BaseUnit, q => q);
            unitConverter.SetConversionFunction<MagneticField>(MagneticField.BaseUnit, MagneticFieldUnit.Microtesla, q => q.ToUnit(MagneticFieldUnit.Microtesla));
            unitConverter.SetConversionFunction<MagneticField>(MagneticFieldUnit.Microtesla, MagneticField.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MagneticField>(MagneticField.BaseUnit, MagneticFieldUnit.Millitesla, q => q.ToUnit(MagneticFieldUnit.Millitesla));
            unitConverter.SetConversionFunction<MagneticField>(MagneticFieldUnit.Millitesla, MagneticField.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MagneticField>(MagneticField.BaseUnit, MagneticFieldUnit.Nanotesla, q => q.ToUnit(MagneticFieldUnit.Nanotesla));
            unitConverter.SetConversionFunction<MagneticField>(MagneticFieldUnit.Nanotesla, MagneticField.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MagneticField>(MagneticField.BaseUnit, MagneticField.BaseUnit, q => q);
            unitConverter.SetConversionFunction<MagneticFlux>(MagneticFlux.BaseUnit, MagneticFlux.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Magnetization>(Magnetization.BaseUnit, Magnetization.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.Centigram, q => q.ToUnit(MassUnit.Centigram));
            unitConverter.SetConversionFunction<Mass>(MassUnit.Centigram, Mass.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.Decagram, q => q.ToUnit(MassUnit.Decagram));
            unitConverter.SetConversionFunction<Mass>(MassUnit.Decagram, Mass.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.Decigram, q => q.ToUnit(MassUnit.Decigram));
            unitConverter.SetConversionFunction<Mass>(MassUnit.Decigram, Mass.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.EarthMass, q => q.ToUnit(MassUnit.EarthMass));
            unitConverter.SetConversionFunction<Mass>(MassUnit.EarthMass, Mass.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.Grain, q => q.ToUnit(MassUnit.Grain));
            unitConverter.SetConversionFunction<Mass>(MassUnit.Grain, Mass.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.Gram, q => q.ToUnit(MassUnit.Gram));
            unitConverter.SetConversionFunction<Mass>(MassUnit.Gram, Mass.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.Hectogram, q => q.ToUnit(MassUnit.Hectogram));
            unitConverter.SetConversionFunction<Mass>(MassUnit.Hectogram, Mass.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, Mass.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.Kilopound, q => q.ToUnit(MassUnit.Kilopound));
            unitConverter.SetConversionFunction<Mass>(MassUnit.Kilopound, Mass.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.Kilotonne, q => q.ToUnit(MassUnit.Kilotonne));
            unitConverter.SetConversionFunction<Mass>(MassUnit.Kilotonne, Mass.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.LongHundredweight, q => q.ToUnit(MassUnit.LongHundredweight));
            unitConverter.SetConversionFunction<Mass>(MassUnit.LongHundredweight, Mass.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.LongTon, q => q.ToUnit(MassUnit.LongTon));
            unitConverter.SetConversionFunction<Mass>(MassUnit.LongTon, Mass.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.Megapound, q => q.ToUnit(MassUnit.Megapound));
            unitConverter.SetConversionFunction<Mass>(MassUnit.Megapound, Mass.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.Megatonne, q => q.ToUnit(MassUnit.Megatonne));
            unitConverter.SetConversionFunction<Mass>(MassUnit.Megatonne, Mass.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.Microgram, q => q.ToUnit(MassUnit.Microgram));
            unitConverter.SetConversionFunction<Mass>(MassUnit.Microgram, Mass.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.Milligram, q => q.ToUnit(MassUnit.Milligram));
            unitConverter.SetConversionFunction<Mass>(MassUnit.Milligram, Mass.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.Nanogram, q => q.ToUnit(MassUnit.Nanogram));
            unitConverter.SetConversionFunction<Mass>(MassUnit.Nanogram, Mass.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.Ounce, q => q.ToUnit(MassUnit.Ounce));
            unitConverter.SetConversionFunction<Mass>(MassUnit.Ounce, Mass.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.Pound, q => q.ToUnit(MassUnit.Pound));
            unitConverter.SetConversionFunction<Mass>(MassUnit.Pound, Mass.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.ShortHundredweight, q => q.ToUnit(MassUnit.ShortHundredweight));
            unitConverter.SetConversionFunction<Mass>(MassUnit.ShortHundredweight, Mass.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.ShortTon, q => q.ToUnit(MassUnit.ShortTon));
            unitConverter.SetConversionFunction<Mass>(MassUnit.ShortTon, Mass.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.Slug, q => q.ToUnit(MassUnit.Slug));
            unitConverter.SetConversionFunction<Mass>(MassUnit.Slug, Mass.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.SolarMass, q => q.ToUnit(MassUnit.SolarMass));
            unitConverter.SetConversionFunction<Mass>(MassUnit.SolarMass, Mass.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.Stone, q => q.ToUnit(MassUnit.Stone));
            unitConverter.SetConversionFunction<Mass>(MassUnit.Stone, Mass.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.Tonne, q => q.ToUnit(MassUnit.Tonne));
            unitConverter.SetConversionFunction<Mass>(MassUnit.Tonne, Mass.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.CentigramPerDeciliter, q => q.ToUnit(MassConcentrationUnit.CentigramPerDeciliter));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.CentigramPerDeciliter, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.CentigramPerLiter, q => q.ToUnit(MassConcentrationUnit.CentigramPerLiter));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.CentigramPerLiter, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.CentigramPerMilliliter, q => q.ToUnit(MassConcentrationUnit.CentigramPerMilliliter));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.CentigramPerMilliliter, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.DecigramPerDeciliter, q => q.ToUnit(MassConcentrationUnit.DecigramPerDeciliter));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.DecigramPerDeciliter, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.DecigramPerLiter, q => q.ToUnit(MassConcentrationUnit.DecigramPerLiter));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.DecigramPerLiter, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.DecigramPerMilliliter, q => q.ToUnit(MassConcentrationUnit.DecigramPerMilliliter));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.DecigramPerMilliliter, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.GramPerCubicCentimeter, q => q.ToUnit(MassConcentrationUnit.GramPerCubicCentimeter));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.GramPerCubicCentimeter, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.GramPerCubicMeter, q => q.ToUnit(MassConcentrationUnit.GramPerCubicMeter));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.GramPerCubicMeter, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.GramPerCubicMillimeter, q => q.ToUnit(MassConcentrationUnit.GramPerCubicMillimeter));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.GramPerCubicMillimeter, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.GramPerDeciliter, q => q.ToUnit(MassConcentrationUnit.GramPerDeciliter));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.GramPerDeciliter, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.GramPerLiter, q => q.ToUnit(MassConcentrationUnit.GramPerLiter));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.GramPerLiter, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.GramPerMilliliter, q => q.ToUnit(MassConcentrationUnit.GramPerMilliliter));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.GramPerMilliliter, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.KilogramPerCubicCentimeter, q => q.ToUnit(MassConcentrationUnit.KilogramPerCubicCentimeter));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.KilogramPerCubicCentimeter, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentration.BaseUnit, q => q);
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.KilogramPerCubicMillimeter, q => q.ToUnit(MassConcentrationUnit.KilogramPerCubicMillimeter));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.KilogramPerCubicMillimeter, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.KilogramPerLiter, q => q.ToUnit(MassConcentrationUnit.KilogramPerLiter));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.KilogramPerLiter, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.KilopoundPerCubicFoot, q => q.ToUnit(MassConcentrationUnit.KilopoundPerCubicFoot));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.KilopoundPerCubicFoot, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.KilopoundPerCubicInch, q => q.ToUnit(MassConcentrationUnit.KilopoundPerCubicInch));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.KilopoundPerCubicInch, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.MicrogramPerCubicMeter, q => q.ToUnit(MassConcentrationUnit.MicrogramPerCubicMeter));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.MicrogramPerCubicMeter, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.MicrogramPerDeciliter, q => q.ToUnit(MassConcentrationUnit.MicrogramPerDeciliter));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.MicrogramPerDeciliter, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.MicrogramPerLiter, q => q.ToUnit(MassConcentrationUnit.MicrogramPerLiter));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.MicrogramPerLiter, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.MicrogramPerMilliliter, q => q.ToUnit(MassConcentrationUnit.MicrogramPerMilliliter));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.MicrogramPerMilliliter, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.MilligramPerCubicMeter, q => q.ToUnit(MassConcentrationUnit.MilligramPerCubicMeter));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.MilligramPerCubicMeter, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.MilligramPerDeciliter, q => q.ToUnit(MassConcentrationUnit.MilligramPerDeciliter));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.MilligramPerDeciliter, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.MilligramPerLiter, q => q.ToUnit(MassConcentrationUnit.MilligramPerLiter));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.MilligramPerLiter, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.MilligramPerMilliliter, q => q.ToUnit(MassConcentrationUnit.MilligramPerMilliliter));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.MilligramPerMilliliter, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.NanogramPerDeciliter, q => q.ToUnit(MassConcentrationUnit.NanogramPerDeciliter));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.NanogramPerDeciliter, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.NanogramPerLiter, q => q.ToUnit(MassConcentrationUnit.NanogramPerLiter));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.NanogramPerLiter, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.NanogramPerMilliliter, q => q.ToUnit(MassConcentrationUnit.NanogramPerMilliliter));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.NanogramPerMilliliter, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.PicogramPerDeciliter, q => q.ToUnit(MassConcentrationUnit.PicogramPerDeciliter));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.PicogramPerDeciliter, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.PicogramPerLiter, q => q.ToUnit(MassConcentrationUnit.PicogramPerLiter));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.PicogramPerLiter, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.PicogramPerMilliliter, q => q.ToUnit(MassConcentrationUnit.PicogramPerMilliliter));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.PicogramPerMilliliter, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.PoundPerCubicFoot, q => q.ToUnit(MassConcentrationUnit.PoundPerCubicFoot));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.PoundPerCubicFoot, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.PoundPerCubicInch, q => q.ToUnit(MassConcentrationUnit.PoundPerCubicInch));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.PoundPerCubicInch, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.PoundPerImperialGallon, q => q.ToUnit(MassConcentrationUnit.PoundPerImperialGallon));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.PoundPerImperialGallon, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.PoundPerUSGallon, q => q.ToUnit(MassConcentrationUnit.PoundPerUSGallon));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.PoundPerUSGallon, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.SlugPerCubicFoot, q => q.ToUnit(MassConcentrationUnit.SlugPerCubicFoot));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.SlugPerCubicFoot, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.TonnePerCubicCentimeter, q => q.ToUnit(MassConcentrationUnit.TonnePerCubicCentimeter));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.TonnePerCubicCentimeter, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.TonnePerCubicMeter, q => q.ToUnit(MassConcentrationUnit.TonnePerCubicMeter));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.TonnePerCubicMeter, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentration.BaseUnit, MassConcentrationUnit.TonnePerCubicMillimeter, q => q.ToUnit(MassConcentrationUnit.TonnePerCubicMillimeter));
            unitConverter.SetConversionFunction<MassConcentration>(MassConcentrationUnit.TonnePerCubicMillimeter, MassConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.CentigramPerDay, q => q.ToUnit(MassFlowUnit.CentigramPerDay));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.CentigramPerDay, MassFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.CentigramPerSecond, q => q.ToUnit(MassFlowUnit.CentigramPerSecond));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.CentigramPerSecond, MassFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.DecagramPerDay, q => q.ToUnit(MassFlowUnit.DecagramPerDay));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.DecagramPerDay, MassFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.DecagramPerSecond, q => q.ToUnit(MassFlowUnit.DecagramPerSecond));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.DecagramPerSecond, MassFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.DecigramPerDay, q => q.ToUnit(MassFlowUnit.DecigramPerDay));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.DecigramPerDay, MassFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.DecigramPerSecond, q => q.ToUnit(MassFlowUnit.DecigramPerSecond));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.DecigramPerSecond, MassFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.GramPerDay, q => q.ToUnit(MassFlowUnit.GramPerDay));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.GramPerDay, MassFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.GramPerHour, q => q.ToUnit(MassFlowUnit.GramPerHour));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.GramPerHour, MassFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlow.BaseUnit, q => q);
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.HectogramPerDay, q => q.ToUnit(MassFlowUnit.HectogramPerDay));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.HectogramPerDay, MassFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.HectogramPerSecond, q => q.ToUnit(MassFlowUnit.HectogramPerSecond));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.HectogramPerSecond, MassFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.KilogramPerDay, q => q.ToUnit(MassFlowUnit.KilogramPerDay));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.KilogramPerDay, MassFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.KilogramPerHour, q => q.ToUnit(MassFlowUnit.KilogramPerHour));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.KilogramPerHour, MassFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.KilogramPerMinute, q => q.ToUnit(MassFlowUnit.KilogramPerMinute));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.KilogramPerMinute, MassFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.KilogramPerSecond, q => q.ToUnit(MassFlowUnit.KilogramPerSecond));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.KilogramPerSecond, MassFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.MegagramPerDay, q => q.ToUnit(MassFlowUnit.MegagramPerDay));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.MegagramPerDay, MassFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.MegapoundPerDay, q => q.ToUnit(MassFlowUnit.MegapoundPerDay));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.MegapoundPerDay, MassFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.MegapoundPerHour, q => q.ToUnit(MassFlowUnit.MegapoundPerHour));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.MegapoundPerHour, MassFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.MegapoundPerMinute, q => q.ToUnit(MassFlowUnit.MegapoundPerMinute));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.MegapoundPerMinute, MassFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.MegapoundPerSecond, q => q.ToUnit(MassFlowUnit.MegapoundPerSecond));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.MegapoundPerSecond, MassFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.MicrogramPerDay, q => q.ToUnit(MassFlowUnit.MicrogramPerDay));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.MicrogramPerDay, MassFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.MicrogramPerSecond, q => q.ToUnit(MassFlowUnit.MicrogramPerSecond));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.MicrogramPerSecond, MassFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.MilligramPerDay, q => q.ToUnit(MassFlowUnit.MilligramPerDay));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.MilligramPerDay, MassFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.MilligramPerSecond, q => q.ToUnit(MassFlowUnit.MilligramPerSecond));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.MilligramPerSecond, MassFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.NanogramPerDay, q => q.ToUnit(MassFlowUnit.NanogramPerDay));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.NanogramPerDay, MassFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.NanogramPerSecond, q => q.ToUnit(MassFlowUnit.NanogramPerSecond));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.NanogramPerSecond, MassFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.PoundPerDay, q => q.ToUnit(MassFlowUnit.PoundPerDay));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.PoundPerDay, MassFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.PoundPerHour, q => q.ToUnit(MassFlowUnit.PoundPerHour));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.PoundPerHour, MassFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.PoundPerMinute, q => q.ToUnit(MassFlowUnit.PoundPerMinute));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.PoundPerMinute, MassFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.PoundPerSecond, q => q.ToUnit(MassFlowUnit.PoundPerSecond));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.PoundPerSecond, MassFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.ShortTonPerHour, q => q.ToUnit(MassFlowUnit.ShortTonPerHour));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.ShortTonPerHour, MassFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.TonnePerDay, q => q.ToUnit(MassFlowUnit.TonnePerDay));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.TonnePerDay, MassFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.TonnePerHour, q => q.ToUnit(MassFlowUnit.TonnePerHour));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.TonnePerHour, MassFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlux>(MassFlux.BaseUnit, MassFluxUnit.GramPerSecondPerSquareMeter, q => q.ToUnit(MassFluxUnit.GramPerSecondPerSquareMeter));
            unitConverter.SetConversionFunction<MassFlux>(MassFluxUnit.GramPerSecondPerSquareMeter, MassFlux.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlux>(MassFlux.BaseUnit, MassFlux.BaseUnit, q => q);
            unitConverter.SetConversionFunction<MassFraction>(MassFraction.BaseUnit, MassFractionUnit.CentigramPerGram, q => q.ToUnit(MassFractionUnit.CentigramPerGram));
            unitConverter.SetConversionFunction<MassFraction>(MassFractionUnit.CentigramPerGram, MassFraction.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction>(MassFraction.BaseUnit, MassFractionUnit.CentigramPerKilogram, q => q.ToUnit(MassFractionUnit.CentigramPerKilogram));
            unitConverter.SetConversionFunction<MassFraction>(MassFractionUnit.CentigramPerKilogram, MassFraction.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction>(MassFraction.BaseUnit, MassFractionUnit.DecagramPerGram, q => q.ToUnit(MassFractionUnit.DecagramPerGram));
            unitConverter.SetConversionFunction<MassFraction>(MassFractionUnit.DecagramPerGram, MassFraction.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction>(MassFraction.BaseUnit, MassFractionUnit.DecagramPerKilogram, q => q.ToUnit(MassFractionUnit.DecagramPerKilogram));
            unitConverter.SetConversionFunction<MassFraction>(MassFractionUnit.DecagramPerKilogram, MassFraction.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction>(MassFraction.BaseUnit, MassFractionUnit.DecigramPerGram, q => q.ToUnit(MassFractionUnit.DecigramPerGram));
            unitConverter.SetConversionFunction<MassFraction>(MassFractionUnit.DecigramPerGram, MassFraction.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction>(MassFraction.BaseUnit, MassFractionUnit.DecigramPerKilogram, q => q.ToUnit(MassFractionUnit.DecigramPerKilogram));
            unitConverter.SetConversionFunction<MassFraction>(MassFractionUnit.DecigramPerKilogram, MassFraction.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction>(MassFraction.BaseUnit, MassFraction.BaseUnit, q => q);
            unitConverter.SetConversionFunction<MassFraction>(MassFraction.BaseUnit, MassFractionUnit.GramPerGram, q => q.ToUnit(MassFractionUnit.GramPerGram));
            unitConverter.SetConversionFunction<MassFraction>(MassFractionUnit.GramPerGram, MassFraction.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction>(MassFraction.BaseUnit, MassFractionUnit.GramPerKilogram, q => q.ToUnit(MassFractionUnit.GramPerKilogram));
            unitConverter.SetConversionFunction<MassFraction>(MassFractionUnit.GramPerKilogram, MassFraction.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction>(MassFraction.BaseUnit, MassFractionUnit.HectogramPerGram, q => q.ToUnit(MassFractionUnit.HectogramPerGram));
            unitConverter.SetConversionFunction<MassFraction>(MassFractionUnit.HectogramPerGram, MassFraction.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction>(MassFraction.BaseUnit, MassFractionUnit.HectogramPerKilogram, q => q.ToUnit(MassFractionUnit.HectogramPerKilogram));
            unitConverter.SetConversionFunction<MassFraction>(MassFractionUnit.HectogramPerKilogram, MassFraction.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction>(MassFraction.BaseUnit, MassFractionUnit.KilogramPerGram, q => q.ToUnit(MassFractionUnit.KilogramPerGram));
            unitConverter.SetConversionFunction<MassFraction>(MassFractionUnit.KilogramPerGram, MassFraction.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction>(MassFraction.BaseUnit, MassFractionUnit.KilogramPerKilogram, q => q.ToUnit(MassFractionUnit.KilogramPerKilogram));
            unitConverter.SetConversionFunction<MassFraction>(MassFractionUnit.KilogramPerKilogram, MassFraction.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction>(MassFraction.BaseUnit, MassFractionUnit.MicrogramPerGram, q => q.ToUnit(MassFractionUnit.MicrogramPerGram));
            unitConverter.SetConversionFunction<MassFraction>(MassFractionUnit.MicrogramPerGram, MassFraction.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction>(MassFraction.BaseUnit, MassFractionUnit.MicrogramPerKilogram, q => q.ToUnit(MassFractionUnit.MicrogramPerKilogram));
            unitConverter.SetConversionFunction<MassFraction>(MassFractionUnit.MicrogramPerKilogram, MassFraction.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction>(MassFraction.BaseUnit, MassFractionUnit.MilligramPerGram, q => q.ToUnit(MassFractionUnit.MilligramPerGram));
            unitConverter.SetConversionFunction<MassFraction>(MassFractionUnit.MilligramPerGram, MassFraction.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction>(MassFraction.BaseUnit, MassFractionUnit.MilligramPerKilogram, q => q.ToUnit(MassFractionUnit.MilligramPerKilogram));
            unitConverter.SetConversionFunction<MassFraction>(MassFractionUnit.MilligramPerKilogram, MassFraction.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction>(MassFraction.BaseUnit, MassFractionUnit.NanogramPerGram, q => q.ToUnit(MassFractionUnit.NanogramPerGram));
            unitConverter.SetConversionFunction<MassFraction>(MassFractionUnit.NanogramPerGram, MassFraction.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction>(MassFraction.BaseUnit, MassFractionUnit.NanogramPerKilogram, q => q.ToUnit(MassFractionUnit.NanogramPerKilogram));
            unitConverter.SetConversionFunction<MassFraction>(MassFractionUnit.NanogramPerKilogram, MassFraction.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction>(MassFraction.BaseUnit, MassFractionUnit.PartPerBillion, q => q.ToUnit(MassFractionUnit.PartPerBillion));
            unitConverter.SetConversionFunction<MassFraction>(MassFractionUnit.PartPerBillion, MassFraction.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction>(MassFraction.BaseUnit, MassFractionUnit.PartPerMillion, q => q.ToUnit(MassFractionUnit.PartPerMillion));
            unitConverter.SetConversionFunction<MassFraction>(MassFractionUnit.PartPerMillion, MassFraction.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction>(MassFraction.BaseUnit, MassFractionUnit.PartPerThousand, q => q.ToUnit(MassFractionUnit.PartPerThousand));
            unitConverter.SetConversionFunction<MassFraction>(MassFractionUnit.PartPerThousand, MassFraction.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction>(MassFraction.BaseUnit, MassFractionUnit.PartPerTrillion, q => q.ToUnit(MassFractionUnit.PartPerTrillion));
            unitConverter.SetConversionFunction<MassFraction>(MassFractionUnit.PartPerTrillion, MassFraction.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction>(MassFraction.BaseUnit, MassFractionUnit.Percent, q => q.ToUnit(MassFractionUnit.Percent));
            unitConverter.SetConversionFunction<MassFraction>(MassFractionUnit.Percent, MassFraction.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.GramSquareCentimeter, q => q.ToUnit(MassMomentOfInertiaUnit.GramSquareCentimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.GramSquareCentimeter, MassMomentOfInertia.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.GramSquareDecimeter, q => q.ToUnit(MassMomentOfInertiaUnit.GramSquareDecimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.GramSquareDecimeter, MassMomentOfInertia.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.GramSquareMeter, q => q.ToUnit(MassMomentOfInertiaUnit.GramSquareMeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.GramSquareMeter, MassMomentOfInertia.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.GramSquareMillimeter, q => q.ToUnit(MassMomentOfInertiaUnit.GramSquareMillimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.GramSquareMillimeter, MassMomentOfInertia.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.KilogramSquareCentimeter, q => q.ToUnit(MassMomentOfInertiaUnit.KilogramSquareCentimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.KilogramSquareCentimeter, MassMomentOfInertia.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.KilogramSquareDecimeter, q => q.ToUnit(MassMomentOfInertiaUnit.KilogramSquareDecimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.KilogramSquareDecimeter, MassMomentOfInertia.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertia.BaseUnit, q => q);
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.KilogramSquareMillimeter, q => q.ToUnit(MassMomentOfInertiaUnit.KilogramSquareMillimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.KilogramSquareMillimeter, MassMomentOfInertia.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.KilotonneSquareCentimeter, q => q.ToUnit(MassMomentOfInertiaUnit.KilotonneSquareCentimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.KilotonneSquareCentimeter, MassMomentOfInertia.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.KilotonneSquareDecimeter, q => q.ToUnit(MassMomentOfInertiaUnit.KilotonneSquareDecimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.KilotonneSquareDecimeter, MassMomentOfInertia.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.KilotonneSquareMeter, q => q.ToUnit(MassMomentOfInertiaUnit.KilotonneSquareMeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.KilotonneSquareMeter, MassMomentOfInertia.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.KilotonneSquareMilimeter, q => q.ToUnit(MassMomentOfInertiaUnit.KilotonneSquareMilimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.KilotonneSquareMilimeter, MassMomentOfInertia.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.MegatonneSquareCentimeter, q => q.ToUnit(MassMomentOfInertiaUnit.MegatonneSquareCentimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.MegatonneSquareCentimeter, MassMomentOfInertia.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.MegatonneSquareDecimeter, q => q.ToUnit(MassMomentOfInertiaUnit.MegatonneSquareDecimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.MegatonneSquareDecimeter, MassMomentOfInertia.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.MegatonneSquareMeter, q => q.ToUnit(MassMomentOfInertiaUnit.MegatonneSquareMeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.MegatonneSquareMeter, MassMomentOfInertia.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.MegatonneSquareMilimeter, q => q.ToUnit(MassMomentOfInertiaUnit.MegatonneSquareMilimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.MegatonneSquareMilimeter, MassMomentOfInertia.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.MilligramSquareCentimeter, q => q.ToUnit(MassMomentOfInertiaUnit.MilligramSquareCentimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.MilligramSquareCentimeter, MassMomentOfInertia.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.MilligramSquareDecimeter, q => q.ToUnit(MassMomentOfInertiaUnit.MilligramSquareDecimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.MilligramSquareDecimeter, MassMomentOfInertia.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.MilligramSquareMeter, q => q.ToUnit(MassMomentOfInertiaUnit.MilligramSquareMeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.MilligramSquareMeter, MassMomentOfInertia.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.MilligramSquareMillimeter, q => q.ToUnit(MassMomentOfInertiaUnit.MilligramSquareMillimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.MilligramSquareMillimeter, MassMomentOfInertia.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.PoundSquareFoot, q => q.ToUnit(MassMomentOfInertiaUnit.PoundSquareFoot));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.PoundSquareFoot, MassMomentOfInertia.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.PoundSquareInch, q => q.ToUnit(MassMomentOfInertiaUnit.PoundSquareInch));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.PoundSquareInch, MassMomentOfInertia.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.SlugSquareFoot, q => q.ToUnit(MassMomentOfInertiaUnit.SlugSquareFoot));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.SlugSquareFoot, MassMomentOfInertia.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.SlugSquareInch, q => q.ToUnit(MassMomentOfInertiaUnit.SlugSquareInch));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.SlugSquareInch, MassMomentOfInertia.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.TonneSquareCentimeter, q => q.ToUnit(MassMomentOfInertiaUnit.TonneSquareCentimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.TonneSquareCentimeter, MassMomentOfInertia.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.TonneSquareDecimeter, q => q.ToUnit(MassMomentOfInertiaUnit.TonneSquareDecimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.TonneSquareDecimeter, MassMomentOfInertia.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.TonneSquareMeter, q => q.ToUnit(MassMomentOfInertiaUnit.TonneSquareMeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.TonneSquareMeter, MassMomentOfInertia.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.TonneSquareMilimeter, q => q.ToUnit(MassMomentOfInertiaUnit.TonneSquareMilimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.TonneSquareMilimeter, MassMomentOfInertia.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MolarEnergy>(MolarEnergy.BaseUnit, MolarEnergy.BaseUnit, q => q);
            unitConverter.SetConversionFunction<MolarEnergy>(MolarEnergy.BaseUnit, MolarEnergyUnit.KilojoulePerMole, q => q.ToUnit(MolarEnergyUnit.KilojoulePerMole));
            unitConverter.SetConversionFunction<MolarEnergy>(MolarEnergyUnit.KilojoulePerMole, MolarEnergy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MolarEnergy>(MolarEnergy.BaseUnit, MolarEnergyUnit.MegajoulePerMole, q => q.ToUnit(MolarEnergyUnit.MegajoulePerMole));
            unitConverter.SetConversionFunction<MolarEnergy>(MolarEnergyUnit.MegajoulePerMole, MolarEnergy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MolarEntropy>(MolarEntropy.BaseUnit, MolarEntropy.BaseUnit, q => q);
            unitConverter.SetConversionFunction<MolarEntropy>(MolarEntropy.BaseUnit, MolarEntropyUnit.KilojoulePerMoleKelvin, q => q.ToUnit(MolarEntropyUnit.KilojoulePerMoleKelvin));
            unitConverter.SetConversionFunction<MolarEntropy>(MolarEntropyUnit.KilojoulePerMoleKelvin, MolarEntropy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MolarEntropy>(MolarEntropy.BaseUnit, MolarEntropyUnit.MegajoulePerMoleKelvin, q => q.ToUnit(MolarEntropyUnit.MegajoulePerMoleKelvin));
            unitConverter.SetConversionFunction<MolarEntropy>(MolarEntropyUnit.MegajoulePerMoleKelvin, MolarEntropy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Molarity>(Molarity.BaseUnit, MolarityUnit.CentimolesPerLiter, q => q.ToUnit(MolarityUnit.CentimolesPerLiter));
            unitConverter.SetConversionFunction<Molarity>(MolarityUnit.CentimolesPerLiter, Molarity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Molarity>(Molarity.BaseUnit, MolarityUnit.DecimolesPerLiter, q => q.ToUnit(MolarityUnit.DecimolesPerLiter));
            unitConverter.SetConversionFunction<Molarity>(MolarityUnit.DecimolesPerLiter, Molarity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Molarity>(Molarity.BaseUnit, MolarityUnit.MicromolesPerLiter, q => q.ToUnit(MolarityUnit.MicromolesPerLiter));
            unitConverter.SetConversionFunction<Molarity>(MolarityUnit.MicromolesPerLiter, Molarity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Molarity>(Molarity.BaseUnit, MolarityUnit.MillimolesPerLiter, q => q.ToUnit(MolarityUnit.MillimolesPerLiter));
            unitConverter.SetConversionFunction<Molarity>(MolarityUnit.MillimolesPerLiter, Molarity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Molarity>(Molarity.BaseUnit, Molarity.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Molarity>(Molarity.BaseUnit, MolarityUnit.MolesPerLiter, q => q.ToUnit(MolarityUnit.MolesPerLiter));
            unitConverter.SetConversionFunction<Molarity>(MolarityUnit.MolesPerLiter, Molarity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Molarity>(Molarity.BaseUnit, MolarityUnit.NanomolesPerLiter, q => q.ToUnit(MolarityUnit.NanomolesPerLiter));
            unitConverter.SetConversionFunction<Molarity>(MolarityUnit.NanomolesPerLiter, Molarity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Molarity>(Molarity.BaseUnit, MolarityUnit.PicomolesPerLiter, q => q.ToUnit(MolarityUnit.PicomolesPerLiter));
            unitConverter.SetConversionFunction<Molarity>(MolarityUnit.PicomolesPerLiter, Molarity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MolarMass>(MolarMass.BaseUnit, MolarMassUnit.CentigramPerMole, q => q.ToUnit(MolarMassUnit.CentigramPerMole));
            unitConverter.SetConversionFunction<MolarMass>(MolarMassUnit.CentigramPerMole, MolarMass.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MolarMass>(MolarMass.BaseUnit, MolarMassUnit.DecagramPerMole, q => q.ToUnit(MolarMassUnit.DecagramPerMole));
            unitConverter.SetConversionFunction<MolarMass>(MolarMassUnit.DecagramPerMole, MolarMass.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MolarMass>(MolarMass.BaseUnit, MolarMassUnit.DecigramPerMole, q => q.ToUnit(MolarMassUnit.DecigramPerMole));
            unitConverter.SetConversionFunction<MolarMass>(MolarMassUnit.DecigramPerMole, MolarMass.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MolarMass>(MolarMass.BaseUnit, MolarMassUnit.GramPerMole, q => q.ToUnit(MolarMassUnit.GramPerMole));
            unitConverter.SetConversionFunction<MolarMass>(MolarMassUnit.GramPerMole, MolarMass.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MolarMass>(MolarMass.BaseUnit, MolarMassUnit.HectogramPerMole, q => q.ToUnit(MolarMassUnit.HectogramPerMole));
            unitConverter.SetConversionFunction<MolarMass>(MolarMassUnit.HectogramPerMole, MolarMass.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MolarMass>(MolarMass.BaseUnit, MolarMass.BaseUnit, q => q);
            unitConverter.SetConversionFunction<MolarMass>(MolarMass.BaseUnit, MolarMassUnit.KilopoundPerMole, q => q.ToUnit(MolarMassUnit.KilopoundPerMole));
            unitConverter.SetConversionFunction<MolarMass>(MolarMassUnit.KilopoundPerMole, MolarMass.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MolarMass>(MolarMass.BaseUnit, MolarMassUnit.MegapoundPerMole, q => q.ToUnit(MolarMassUnit.MegapoundPerMole));
            unitConverter.SetConversionFunction<MolarMass>(MolarMassUnit.MegapoundPerMole, MolarMass.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MolarMass>(MolarMass.BaseUnit, MolarMassUnit.MicrogramPerMole, q => q.ToUnit(MolarMassUnit.MicrogramPerMole));
            unitConverter.SetConversionFunction<MolarMass>(MolarMassUnit.MicrogramPerMole, MolarMass.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MolarMass>(MolarMass.BaseUnit, MolarMassUnit.MilligramPerMole, q => q.ToUnit(MolarMassUnit.MilligramPerMole));
            unitConverter.SetConversionFunction<MolarMass>(MolarMassUnit.MilligramPerMole, MolarMass.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MolarMass>(MolarMass.BaseUnit, MolarMassUnit.NanogramPerMole, q => q.ToUnit(MolarMassUnit.NanogramPerMole));
            unitConverter.SetConversionFunction<MolarMass>(MolarMassUnit.NanogramPerMole, MolarMass.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MolarMass>(MolarMass.BaseUnit, MolarMassUnit.PoundPerMole, q => q.ToUnit(MolarMassUnit.PoundPerMole));
            unitConverter.SetConversionFunction<MolarMass>(MolarMassUnit.PoundPerMole, MolarMass.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Permeability>(Permeability.BaseUnit, Permeability.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Permittivity>(Permittivity.BaseUnit, Permittivity.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.BoilerHorsepower, q => q.ToUnit(PowerUnit.BoilerHorsepower));
            unitConverter.SetConversionFunction<Power>(PowerUnit.BoilerHorsepower, Power.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.BritishThermalUnitPerHour, q => q.ToUnit(PowerUnit.BritishThermalUnitPerHour));
            unitConverter.SetConversionFunction<Power>(PowerUnit.BritishThermalUnitPerHour, Power.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.Decawatt, q => q.ToUnit(PowerUnit.Decawatt));
            unitConverter.SetConversionFunction<Power>(PowerUnit.Decawatt, Power.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.Deciwatt, q => q.ToUnit(PowerUnit.Deciwatt));
            unitConverter.SetConversionFunction<Power>(PowerUnit.Deciwatt, Power.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.ElectricalHorsepower, q => q.ToUnit(PowerUnit.ElectricalHorsepower));
            unitConverter.SetConversionFunction<Power>(PowerUnit.ElectricalHorsepower, Power.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.Femtowatt, q => q.ToUnit(PowerUnit.Femtowatt));
            unitConverter.SetConversionFunction<Power>(PowerUnit.Femtowatt, Power.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.GigajoulePerHour, q => q.ToUnit(PowerUnit.GigajoulePerHour));
            unitConverter.SetConversionFunction<Power>(PowerUnit.GigajoulePerHour, Power.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.Gigawatt, q => q.ToUnit(PowerUnit.Gigawatt));
            unitConverter.SetConversionFunction<Power>(PowerUnit.Gigawatt, Power.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.HydraulicHorsepower, q => q.ToUnit(PowerUnit.HydraulicHorsepower));
            unitConverter.SetConversionFunction<Power>(PowerUnit.HydraulicHorsepower, Power.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.JoulePerHour, q => q.ToUnit(PowerUnit.JoulePerHour));
            unitConverter.SetConversionFunction<Power>(PowerUnit.JoulePerHour, Power.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.KilobritishThermalUnitPerHour, q => q.ToUnit(PowerUnit.KilobritishThermalUnitPerHour));
            unitConverter.SetConversionFunction<Power>(PowerUnit.KilobritishThermalUnitPerHour, Power.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.KilojoulePerHour, q => q.ToUnit(PowerUnit.KilojoulePerHour));
            unitConverter.SetConversionFunction<Power>(PowerUnit.KilojoulePerHour, Power.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.Kilowatt, q => q.ToUnit(PowerUnit.Kilowatt));
            unitConverter.SetConversionFunction<Power>(PowerUnit.Kilowatt, Power.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.MechanicalHorsepower, q => q.ToUnit(PowerUnit.MechanicalHorsepower));
            unitConverter.SetConversionFunction<Power>(PowerUnit.MechanicalHorsepower, Power.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.MegajoulePerHour, q => q.ToUnit(PowerUnit.MegajoulePerHour));
            unitConverter.SetConversionFunction<Power>(PowerUnit.MegajoulePerHour, Power.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.Megawatt, q => q.ToUnit(PowerUnit.Megawatt));
            unitConverter.SetConversionFunction<Power>(PowerUnit.Megawatt, Power.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.MetricHorsepower, q => q.ToUnit(PowerUnit.MetricHorsepower));
            unitConverter.SetConversionFunction<Power>(PowerUnit.MetricHorsepower, Power.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.Microwatt, q => q.ToUnit(PowerUnit.Microwatt));
            unitConverter.SetConversionFunction<Power>(PowerUnit.Microwatt, Power.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.MillijoulePerHour, q => q.ToUnit(PowerUnit.MillijoulePerHour));
            unitConverter.SetConversionFunction<Power>(PowerUnit.MillijoulePerHour, Power.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.Milliwatt, q => q.ToUnit(PowerUnit.Milliwatt));
            unitConverter.SetConversionFunction<Power>(PowerUnit.Milliwatt, Power.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.Nanowatt, q => q.ToUnit(PowerUnit.Nanowatt));
            unitConverter.SetConversionFunction<Power>(PowerUnit.Nanowatt, Power.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.Petawatt, q => q.ToUnit(PowerUnit.Petawatt));
            unitConverter.SetConversionFunction<Power>(PowerUnit.Petawatt, Power.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.Picowatt, q => q.ToUnit(PowerUnit.Picowatt));
            unitConverter.SetConversionFunction<Power>(PowerUnit.Picowatt, Power.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.Terawatt, q => q.ToUnit(PowerUnit.Terawatt));
            unitConverter.SetConversionFunction<Power>(PowerUnit.Terawatt, Power.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, Power.BaseUnit, q => q);
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.DecawattPerCubicFoot, q => q.ToUnit(PowerDensityUnit.DecawattPerCubicFoot));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.DecawattPerCubicFoot, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.DecawattPerCubicInch, q => q.ToUnit(PowerDensityUnit.DecawattPerCubicInch));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.DecawattPerCubicInch, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.DecawattPerCubicMeter, q => q.ToUnit(PowerDensityUnit.DecawattPerCubicMeter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.DecawattPerCubicMeter, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.DecawattPerLiter, q => q.ToUnit(PowerDensityUnit.DecawattPerLiter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.DecawattPerLiter, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.DeciwattPerCubicFoot, q => q.ToUnit(PowerDensityUnit.DeciwattPerCubicFoot));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.DeciwattPerCubicFoot, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.DeciwattPerCubicInch, q => q.ToUnit(PowerDensityUnit.DeciwattPerCubicInch));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.DeciwattPerCubicInch, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.DeciwattPerCubicMeter, q => q.ToUnit(PowerDensityUnit.DeciwattPerCubicMeter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.DeciwattPerCubicMeter, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.DeciwattPerLiter, q => q.ToUnit(PowerDensityUnit.DeciwattPerLiter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.DeciwattPerLiter, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.GigawattPerCubicFoot, q => q.ToUnit(PowerDensityUnit.GigawattPerCubicFoot));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.GigawattPerCubicFoot, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.GigawattPerCubicInch, q => q.ToUnit(PowerDensityUnit.GigawattPerCubicInch));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.GigawattPerCubicInch, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.GigawattPerCubicMeter, q => q.ToUnit(PowerDensityUnit.GigawattPerCubicMeter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.GigawattPerCubicMeter, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.GigawattPerLiter, q => q.ToUnit(PowerDensityUnit.GigawattPerLiter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.GigawattPerLiter, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.KilowattPerCubicFoot, q => q.ToUnit(PowerDensityUnit.KilowattPerCubicFoot));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.KilowattPerCubicFoot, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.KilowattPerCubicInch, q => q.ToUnit(PowerDensityUnit.KilowattPerCubicInch));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.KilowattPerCubicInch, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.KilowattPerCubicMeter, q => q.ToUnit(PowerDensityUnit.KilowattPerCubicMeter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.KilowattPerCubicMeter, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.KilowattPerLiter, q => q.ToUnit(PowerDensityUnit.KilowattPerLiter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.KilowattPerLiter, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.MegawattPerCubicFoot, q => q.ToUnit(PowerDensityUnit.MegawattPerCubicFoot));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.MegawattPerCubicFoot, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.MegawattPerCubicInch, q => q.ToUnit(PowerDensityUnit.MegawattPerCubicInch));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.MegawattPerCubicInch, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.MegawattPerCubicMeter, q => q.ToUnit(PowerDensityUnit.MegawattPerCubicMeter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.MegawattPerCubicMeter, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.MegawattPerLiter, q => q.ToUnit(PowerDensityUnit.MegawattPerLiter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.MegawattPerLiter, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.MicrowattPerCubicFoot, q => q.ToUnit(PowerDensityUnit.MicrowattPerCubicFoot));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.MicrowattPerCubicFoot, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.MicrowattPerCubicInch, q => q.ToUnit(PowerDensityUnit.MicrowattPerCubicInch));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.MicrowattPerCubicInch, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.MicrowattPerCubicMeter, q => q.ToUnit(PowerDensityUnit.MicrowattPerCubicMeter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.MicrowattPerCubicMeter, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.MicrowattPerLiter, q => q.ToUnit(PowerDensityUnit.MicrowattPerLiter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.MicrowattPerLiter, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.MilliwattPerCubicFoot, q => q.ToUnit(PowerDensityUnit.MilliwattPerCubicFoot));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.MilliwattPerCubicFoot, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.MilliwattPerCubicInch, q => q.ToUnit(PowerDensityUnit.MilliwattPerCubicInch));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.MilliwattPerCubicInch, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.MilliwattPerCubicMeter, q => q.ToUnit(PowerDensityUnit.MilliwattPerCubicMeter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.MilliwattPerCubicMeter, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.MilliwattPerLiter, q => q.ToUnit(PowerDensityUnit.MilliwattPerLiter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.MilliwattPerLiter, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.NanowattPerCubicFoot, q => q.ToUnit(PowerDensityUnit.NanowattPerCubicFoot));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.NanowattPerCubicFoot, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.NanowattPerCubicInch, q => q.ToUnit(PowerDensityUnit.NanowattPerCubicInch));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.NanowattPerCubicInch, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.NanowattPerCubicMeter, q => q.ToUnit(PowerDensityUnit.NanowattPerCubicMeter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.NanowattPerCubicMeter, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.NanowattPerLiter, q => q.ToUnit(PowerDensityUnit.NanowattPerLiter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.NanowattPerLiter, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.PicowattPerCubicFoot, q => q.ToUnit(PowerDensityUnit.PicowattPerCubicFoot));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.PicowattPerCubicFoot, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.PicowattPerCubicInch, q => q.ToUnit(PowerDensityUnit.PicowattPerCubicInch));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.PicowattPerCubicInch, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.PicowattPerCubicMeter, q => q.ToUnit(PowerDensityUnit.PicowattPerCubicMeter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.PicowattPerCubicMeter, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.PicowattPerLiter, q => q.ToUnit(PowerDensityUnit.PicowattPerLiter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.PicowattPerLiter, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.TerawattPerCubicFoot, q => q.ToUnit(PowerDensityUnit.TerawattPerCubicFoot));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.TerawattPerCubicFoot, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.TerawattPerCubicInch, q => q.ToUnit(PowerDensityUnit.TerawattPerCubicInch));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.TerawattPerCubicInch, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.TerawattPerCubicMeter, q => q.ToUnit(PowerDensityUnit.TerawattPerCubicMeter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.TerawattPerCubicMeter, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.TerawattPerLiter, q => q.ToUnit(PowerDensityUnit.TerawattPerLiter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.TerawattPerLiter, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.WattPerCubicFoot, q => q.ToUnit(PowerDensityUnit.WattPerCubicFoot));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.WattPerCubicFoot, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.WattPerCubicInch, q => q.ToUnit(PowerDensityUnit.WattPerCubicInch));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.WattPerCubicInch, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensity.BaseUnit, q => q);
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.WattPerLiter, q => q.ToUnit(PowerDensityUnit.WattPerLiter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.WattPerLiter, PowerDensity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerRatio>(PowerRatio.BaseUnit, PowerRatioUnit.DecibelMilliwatt, q => q.ToUnit(PowerRatioUnit.DecibelMilliwatt));
            unitConverter.SetConversionFunction<PowerRatio>(PowerRatioUnit.DecibelMilliwatt, PowerRatio.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerRatio>(PowerRatio.BaseUnit, PowerRatio.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.Atmosphere, q => q.ToUnit(PressureUnit.Atmosphere));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.Atmosphere, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.Bar, q => q.ToUnit(PressureUnit.Bar));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.Bar, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.Centibar, q => q.ToUnit(PressureUnit.Centibar));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.Centibar, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.Decapascal, q => q.ToUnit(PressureUnit.Decapascal));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.Decapascal, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.Decibar, q => q.ToUnit(PressureUnit.Decibar));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.Decibar, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.DynePerSquareCentimeter, q => q.ToUnit(PressureUnit.DynePerSquareCentimeter));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.DynePerSquareCentimeter, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.FootOfHead, q => q.ToUnit(PressureUnit.FootOfHead));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.FootOfHead, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.Gigapascal, q => q.ToUnit(PressureUnit.Gigapascal));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.Gigapascal, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.Hectopascal, q => q.ToUnit(PressureUnit.Hectopascal));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.Hectopascal, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.InchOfMercury, q => q.ToUnit(PressureUnit.InchOfMercury));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.InchOfMercury, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.InchOfWaterColumn, q => q.ToUnit(PressureUnit.InchOfWaterColumn));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.InchOfWaterColumn, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.Kilobar, q => q.ToUnit(PressureUnit.Kilobar));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.Kilobar, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.KilogramForcePerSquareCentimeter, q => q.ToUnit(PressureUnit.KilogramForcePerSquareCentimeter));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.KilogramForcePerSquareCentimeter, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.KilogramForcePerSquareMeter, q => q.ToUnit(PressureUnit.KilogramForcePerSquareMeter));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.KilogramForcePerSquareMeter, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.KilogramForcePerSquareMillimeter, q => q.ToUnit(PressureUnit.KilogramForcePerSquareMillimeter));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.KilogramForcePerSquareMillimeter, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.KilonewtonPerSquareCentimeter, q => q.ToUnit(PressureUnit.KilonewtonPerSquareCentimeter));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.KilonewtonPerSquareCentimeter, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.KilonewtonPerSquareMeter, q => q.ToUnit(PressureUnit.KilonewtonPerSquareMeter));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.KilonewtonPerSquareMeter, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.KilonewtonPerSquareMillimeter, q => q.ToUnit(PressureUnit.KilonewtonPerSquareMillimeter));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.KilonewtonPerSquareMillimeter, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.Kilopascal, q => q.ToUnit(PressureUnit.Kilopascal));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.Kilopascal, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.KilopoundForcePerSquareFoot, q => q.ToUnit(PressureUnit.KilopoundForcePerSquareFoot));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.KilopoundForcePerSquareFoot, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.KilopoundForcePerSquareInch, q => q.ToUnit(PressureUnit.KilopoundForcePerSquareInch));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.KilopoundForcePerSquareInch, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.Megabar, q => q.ToUnit(PressureUnit.Megabar));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.Megabar, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.MeganewtonPerSquareMeter, q => q.ToUnit(PressureUnit.MeganewtonPerSquareMeter));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.MeganewtonPerSquareMeter, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.Megapascal, q => q.ToUnit(PressureUnit.Megapascal));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.Megapascal, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.MeterOfHead, q => q.ToUnit(PressureUnit.MeterOfHead));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.MeterOfHead, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.Microbar, q => q.ToUnit(PressureUnit.Microbar));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.Microbar, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.Micropascal, q => q.ToUnit(PressureUnit.Micropascal));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.Micropascal, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.Millibar, q => q.ToUnit(PressureUnit.Millibar));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.Millibar, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.MillimeterOfMercury, q => q.ToUnit(PressureUnit.MillimeterOfMercury));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.MillimeterOfMercury, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.Millipascal, q => q.ToUnit(PressureUnit.Millipascal));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.Millipascal, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.NewtonPerSquareCentimeter, q => q.ToUnit(PressureUnit.NewtonPerSquareCentimeter));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.NewtonPerSquareCentimeter, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.NewtonPerSquareMeter, q => q.ToUnit(PressureUnit.NewtonPerSquareMeter));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.NewtonPerSquareMeter, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.NewtonPerSquareMillimeter, q => q.ToUnit(PressureUnit.NewtonPerSquareMillimeter));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.NewtonPerSquareMillimeter, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, Pressure.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.PoundForcePerSquareFoot, q => q.ToUnit(PressureUnit.PoundForcePerSquareFoot));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.PoundForcePerSquareFoot, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.PoundForcePerSquareInch, q => q.ToUnit(PressureUnit.PoundForcePerSquareInch));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.PoundForcePerSquareInch, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.PoundPerInchSecondSquared, q => q.ToUnit(PressureUnit.PoundPerInchSecondSquared));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.PoundPerInchSecondSquared, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.TechnicalAtmosphere, q => q.ToUnit(PressureUnit.TechnicalAtmosphere));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.TechnicalAtmosphere, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.TonneForcePerSquareCentimeter, q => q.ToUnit(PressureUnit.TonneForcePerSquareCentimeter));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.TonneForcePerSquareCentimeter, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.TonneForcePerSquareMeter, q => q.ToUnit(PressureUnit.TonneForcePerSquareMeter));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.TonneForcePerSquareMeter, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.TonneForcePerSquareMillimeter, q => q.ToUnit(PressureUnit.TonneForcePerSquareMillimeter));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.TonneForcePerSquareMillimeter, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.Torr, q => q.ToUnit(PressureUnit.Torr));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.Torr, Pressure.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PressureChangeRate>(PressureChangeRate.BaseUnit, PressureChangeRateUnit.AtmospherePerSecond, q => q.ToUnit(PressureChangeRateUnit.AtmospherePerSecond));
            unitConverter.SetConversionFunction<PressureChangeRate>(PressureChangeRateUnit.AtmospherePerSecond, PressureChangeRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PressureChangeRate>(PressureChangeRate.BaseUnit, PressureChangeRateUnit.KilopascalPerMinute, q => q.ToUnit(PressureChangeRateUnit.KilopascalPerMinute));
            unitConverter.SetConversionFunction<PressureChangeRate>(PressureChangeRateUnit.KilopascalPerMinute, PressureChangeRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PressureChangeRate>(PressureChangeRate.BaseUnit, PressureChangeRateUnit.KilopascalPerSecond, q => q.ToUnit(PressureChangeRateUnit.KilopascalPerSecond));
            unitConverter.SetConversionFunction<PressureChangeRate>(PressureChangeRateUnit.KilopascalPerSecond, PressureChangeRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PressureChangeRate>(PressureChangeRate.BaseUnit, PressureChangeRateUnit.MegapascalPerMinute, q => q.ToUnit(PressureChangeRateUnit.MegapascalPerMinute));
            unitConverter.SetConversionFunction<PressureChangeRate>(PressureChangeRateUnit.MegapascalPerMinute, PressureChangeRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PressureChangeRate>(PressureChangeRate.BaseUnit, PressureChangeRateUnit.MegapascalPerSecond, q => q.ToUnit(PressureChangeRateUnit.MegapascalPerSecond));
            unitConverter.SetConversionFunction<PressureChangeRate>(PressureChangeRateUnit.MegapascalPerSecond, PressureChangeRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PressureChangeRate>(PressureChangeRate.BaseUnit, PressureChangeRateUnit.PascalPerMinute, q => q.ToUnit(PressureChangeRateUnit.PascalPerMinute));
            unitConverter.SetConversionFunction<PressureChangeRate>(PressureChangeRateUnit.PascalPerMinute, PressureChangeRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PressureChangeRate>(PressureChangeRate.BaseUnit, PressureChangeRate.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Ratio>(Ratio.BaseUnit, Ratio.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Ratio>(Ratio.BaseUnit, RatioUnit.PartPerBillion, q => q.ToUnit(RatioUnit.PartPerBillion));
            unitConverter.SetConversionFunction<Ratio>(RatioUnit.PartPerBillion, Ratio.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Ratio>(Ratio.BaseUnit, RatioUnit.PartPerMillion, q => q.ToUnit(RatioUnit.PartPerMillion));
            unitConverter.SetConversionFunction<Ratio>(RatioUnit.PartPerMillion, Ratio.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Ratio>(Ratio.BaseUnit, RatioUnit.PartPerThousand, q => q.ToUnit(RatioUnit.PartPerThousand));
            unitConverter.SetConversionFunction<Ratio>(RatioUnit.PartPerThousand, Ratio.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Ratio>(Ratio.BaseUnit, RatioUnit.PartPerTrillion, q => q.ToUnit(RatioUnit.PartPerTrillion));
            unitConverter.SetConversionFunction<Ratio>(RatioUnit.PartPerTrillion, Ratio.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Ratio>(Ratio.BaseUnit, RatioUnit.Percent, q => q.ToUnit(RatioUnit.Percent));
            unitConverter.SetConversionFunction<Ratio>(RatioUnit.Percent, Ratio.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RatioChangeRate>(RatioChangeRate.BaseUnit, RatioChangeRate.BaseUnit, q => q);
            unitConverter.SetConversionFunction<RatioChangeRate>(RatioChangeRate.BaseUnit, RatioChangeRateUnit.PercentPerSecond, q => q.ToUnit(RatioChangeRateUnit.PercentPerSecond));
            unitConverter.SetConversionFunction<RatioChangeRate>(RatioChangeRateUnit.PercentPerSecond, RatioChangeRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ReactiveEnergy>(ReactiveEnergy.BaseUnit, ReactiveEnergyUnit.KilovoltampereReactiveHour, q => q.ToUnit(ReactiveEnergyUnit.KilovoltampereReactiveHour));
            unitConverter.SetConversionFunction<ReactiveEnergy>(ReactiveEnergyUnit.KilovoltampereReactiveHour, ReactiveEnergy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ReactiveEnergy>(ReactiveEnergy.BaseUnit, ReactiveEnergyUnit.MegavoltampereReactiveHour, q => q.ToUnit(ReactiveEnergyUnit.MegavoltampereReactiveHour));
            unitConverter.SetConversionFunction<ReactiveEnergy>(ReactiveEnergyUnit.MegavoltampereReactiveHour, ReactiveEnergy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ReactiveEnergy>(ReactiveEnergy.BaseUnit, ReactiveEnergy.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ReactivePower>(ReactivePower.BaseUnit, ReactivePowerUnit.GigavoltampereReactive, q => q.ToUnit(ReactivePowerUnit.GigavoltampereReactive));
            unitConverter.SetConversionFunction<ReactivePower>(ReactivePowerUnit.GigavoltampereReactive, ReactivePower.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ReactivePower>(ReactivePower.BaseUnit, ReactivePowerUnit.KilovoltampereReactive, q => q.ToUnit(ReactivePowerUnit.KilovoltampereReactive));
            unitConverter.SetConversionFunction<ReactivePower>(ReactivePowerUnit.KilovoltampereReactive, ReactivePower.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ReactivePower>(ReactivePower.BaseUnit, ReactivePowerUnit.MegavoltampereReactive, q => q.ToUnit(ReactivePowerUnit.MegavoltampereReactive));
            unitConverter.SetConversionFunction<ReactivePower>(ReactivePowerUnit.MegavoltampereReactive, ReactivePower.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ReactivePower>(ReactivePower.BaseUnit, ReactivePower.BaseUnit, q => q);
            unitConverter.SetConversionFunction<RotationalAcceleration>(RotationalAcceleration.BaseUnit, RotationalAccelerationUnit.DegreePerSecondSquared, q => q.ToUnit(RotationalAccelerationUnit.DegreePerSecondSquared));
            unitConverter.SetConversionFunction<RotationalAcceleration>(RotationalAccelerationUnit.DegreePerSecondSquared, RotationalAcceleration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalAcceleration>(RotationalAcceleration.BaseUnit, RotationalAcceleration.BaseUnit, q => q);
            unitConverter.SetConversionFunction<RotationalAcceleration>(RotationalAcceleration.BaseUnit, RotationalAccelerationUnit.RevolutionPerMinutePerSecond, q => q.ToUnit(RotationalAccelerationUnit.RevolutionPerMinutePerSecond));
            unitConverter.SetConversionFunction<RotationalAcceleration>(RotationalAccelerationUnit.RevolutionPerMinutePerSecond, RotationalAcceleration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalAcceleration>(RotationalAcceleration.BaseUnit, RotationalAccelerationUnit.RevolutionPerSecondSquared, q => q.ToUnit(RotationalAccelerationUnit.RevolutionPerSecondSquared));
            unitConverter.SetConversionFunction<RotationalAcceleration>(RotationalAccelerationUnit.RevolutionPerSecondSquared, RotationalAcceleration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeed.BaseUnit, RotationalSpeedUnit.CentiradianPerSecond, q => q.ToUnit(RotationalSpeedUnit.CentiradianPerSecond));
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeedUnit.CentiradianPerSecond, RotationalSpeed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeed.BaseUnit, RotationalSpeedUnit.DeciradianPerSecond, q => q.ToUnit(RotationalSpeedUnit.DeciradianPerSecond));
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeedUnit.DeciradianPerSecond, RotationalSpeed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeed.BaseUnit, RotationalSpeedUnit.DegreePerMinute, q => q.ToUnit(RotationalSpeedUnit.DegreePerMinute));
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeedUnit.DegreePerMinute, RotationalSpeed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeed.BaseUnit, RotationalSpeedUnit.DegreePerSecond, q => q.ToUnit(RotationalSpeedUnit.DegreePerSecond));
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeedUnit.DegreePerSecond, RotationalSpeed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeed.BaseUnit, RotationalSpeedUnit.MicrodegreePerSecond, q => q.ToUnit(RotationalSpeedUnit.MicrodegreePerSecond));
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeedUnit.MicrodegreePerSecond, RotationalSpeed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeed.BaseUnit, RotationalSpeedUnit.MicroradianPerSecond, q => q.ToUnit(RotationalSpeedUnit.MicroradianPerSecond));
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeedUnit.MicroradianPerSecond, RotationalSpeed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeed.BaseUnit, RotationalSpeedUnit.MillidegreePerSecond, q => q.ToUnit(RotationalSpeedUnit.MillidegreePerSecond));
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeedUnit.MillidegreePerSecond, RotationalSpeed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeed.BaseUnit, RotationalSpeedUnit.MilliradianPerSecond, q => q.ToUnit(RotationalSpeedUnit.MilliradianPerSecond));
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeedUnit.MilliradianPerSecond, RotationalSpeed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeed.BaseUnit, RotationalSpeedUnit.NanodegreePerSecond, q => q.ToUnit(RotationalSpeedUnit.NanodegreePerSecond));
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeedUnit.NanodegreePerSecond, RotationalSpeed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeed.BaseUnit, RotationalSpeedUnit.NanoradianPerSecond, q => q.ToUnit(RotationalSpeedUnit.NanoradianPerSecond));
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeedUnit.NanoradianPerSecond, RotationalSpeed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeed.BaseUnit, RotationalSpeed.BaseUnit, q => q);
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeed.BaseUnit, RotationalSpeedUnit.RevolutionPerMinute, q => q.ToUnit(RotationalSpeedUnit.RevolutionPerMinute));
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeedUnit.RevolutionPerMinute, RotationalSpeed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeed.BaseUnit, RotationalSpeedUnit.RevolutionPerSecond, q => q.ToUnit(RotationalSpeedUnit.RevolutionPerSecond));
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeedUnit.RevolutionPerSecond, RotationalSpeed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness>(RotationalStiffness.BaseUnit, RotationalStiffnessUnit.KilonewtonMeterPerRadian, q => q.ToUnit(RotationalStiffnessUnit.KilonewtonMeterPerRadian));
            unitConverter.SetConversionFunction<RotationalStiffness>(RotationalStiffnessUnit.KilonewtonMeterPerRadian, RotationalStiffness.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness>(RotationalStiffness.BaseUnit, RotationalStiffnessUnit.MeganewtonMeterPerRadian, q => q.ToUnit(RotationalStiffnessUnit.MeganewtonMeterPerRadian));
            unitConverter.SetConversionFunction<RotationalStiffness>(RotationalStiffnessUnit.MeganewtonMeterPerRadian, RotationalStiffness.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness>(RotationalStiffness.BaseUnit, RotationalStiffness.BaseUnit, q => q);
            unitConverter.SetConversionFunction<RotationalStiffnessPerLength>(RotationalStiffnessPerLength.BaseUnit, RotationalStiffnessPerLengthUnit.KilonewtonMeterPerRadianPerMeter, q => q.ToUnit(RotationalStiffnessPerLengthUnit.KilonewtonMeterPerRadianPerMeter));
            unitConverter.SetConversionFunction<RotationalStiffnessPerLength>(RotationalStiffnessPerLengthUnit.KilonewtonMeterPerRadianPerMeter, RotationalStiffnessPerLength.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffnessPerLength>(RotationalStiffnessPerLength.BaseUnit, RotationalStiffnessPerLengthUnit.MeganewtonMeterPerRadianPerMeter, q => q.ToUnit(RotationalStiffnessPerLengthUnit.MeganewtonMeterPerRadianPerMeter));
            unitConverter.SetConversionFunction<RotationalStiffnessPerLength>(RotationalStiffnessPerLengthUnit.MeganewtonMeterPerRadianPerMeter, RotationalStiffnessPerLength.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffnessPerLength>(RotationalStiffnessPerLength.BaseUnit, RotationalStiffnessPerLength.BaseUnit, q => q);
            unitConverter.SetConversionFunction<SolidAngle>(SolidAngle.BaseUnit, SolidAngle.BaseUnit, q => q);
            unitConverter.SetConversionFunction<SpecificEnergy>(SpecificEnergy.BaseUnit, SpecificEnergyUnit.BtuPerPound, q => q.ToUnit(SpecificEnergyUnit.BtuPerPound));
            unitConverter.SetConversionFunction<SpecificEnergy>(SpecificEnergyUnit.BtuPerPound, SpecificEnergy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy>(SpecificEnergy.BaseUnit, SpecificEnergyUnit.CaloriePerGram, q => q.ToUnit(SpecificEnergyUnit.CaloriePerGram));
            unitConverter.SetConversionFunction<SpecificEnergy>(SpecificEnergyUnit.CaloriePerGram, SpecificEnergy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy>(SpecificEnergy.BaseUnit, SpecificEnergy.BaseUnit, q => q);
            unitConverter.SetConversionFunction<SpecificEnergy>(SpecificEnergy.BaseUnit, SpecificEnergyUnit.KilocaloriePerGram, q => q.ToUnit(SpecificEnergyUnit.KilocaloriePerGram));
            unitConverter.SetConversionFunction<SpecificEnergy>(SpecificEnergyUnit.KilocaloriePerGram, SpecificEnergy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy>(SpecificEnergy.BaseUnit, SpecificEnergyUnit.KilojoulePerKilogram, q => q.ToUnit(SpecificEnergyUnit.KilojoulePerKilogram));
            unitConverter.SetConversionFunction<SpecificEnergy>(SpecificEnergyUnit.KilojoulePerKilogram, SpecificEnergy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy>(SpecificEnergy.BaseUnit, SpecificEnergyUnit.KilowattHourPerKilogram, q => q.ToUnit(SpecificEnergyUnit.KilowattHourPerKilogram));
            unitConverter.SetConversionFunction<SpecificEnergy>(SpecificEnergyUnit.KilowattHourPerKilogram, SpecificEnergy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy>(SpecificEnergy.BaseUnit, SpecificEnergyUnit.MegajoulePerKilogram, q => q.ToUnit(SpecificEnergyUnit.MegajoulePerKilogram));
            unitConverter.SetConversionFunction<SpecificEnergy>(SpecificEnergyUnit.MegajoulePerKilogram, SpecificEnergy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy>(SpecificEnergy.BaseUnit, SpecificEnergyUnit.MegawattHourPerKilogram, q => q.ToUnit(SpecificEnergyUnit.MegawattHourPerKilogram));
            unitConverter.SetConversionFunction<SpecificEnergy>(SpecificEnergyUnit.MegawattHourPerKilogram, SpecificEnergy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy>(SpecificEnergy.BaseUnit, SpecificEnergyUnit.WattHourPerKilogram, q => q.ToUnit(SpecificEnergyUnit.WattHourPerKilogram));
            unitConverter.SetConversionFunction<SpecificEnergy>(SpecificEnergyUnit.WattHourPerKilogram, SpecificEnergy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEntropy>(SpecificEntropy.BaseUnit, SpecificEntropyUnit.BtuPerPoundFahrenheit, q => q.ToUnit(SpecificEntropyUnit.BtuPerPoundFahrenheit));
            unitConverter.SetConversionFunction<SpecificEntropy>(SpecificEntropyUnit.BtuPerPoundFahrenheit, SpecificEntropy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEntropy>(SpecificEntropy.BaseUnit, SpecificEntropyUnit.CaloriePerGramKelvin, q => q.ToUnit(SpecificEntropyUnit.CaloriePerGramKelvin));
            unitConverter.SetConversionFunction<SpecificEntropy>(SpecificEntropyUnit.CaloriePerGramKelvin, SpecificEntropy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEntropy>(SpecificEntropy.BaseUnit, SpecificEntropyUnit.JoulePerKilogramDegreeCelsius, q => q.ToUnit(SpecificEntropyUnit.JoulePerKilogramDegreeCelsius));
            unitConverter.SetConversionFunction<SpecificEntropy>(SpecificEntropyUnit.JoulePerKilogramDegreeCelsius, SpecificEntropy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEntropy>(SpecificEntropy.BaseUnit, SpecificEntropy.BaseUnit, q => q);
            unitConverter.SetConversionFunction<SpecificEntropy>(SpecificEntropy.BaseUnit, SpecificEntropyUnit.KilocaloriePerGramKelvin, q => q.ToUnit(SpecificEntropyUnit.KilocaloriePerGramKelvin));
            unitConverter.SetConversionFunction<SpecificEntropy>(SpecificEntropyUnit.KilocaloriePerGramKelvin, SpecificEntropy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEntropy>(SpecificEntropy.BaseUnit, SpecificEntropyUnit.KilojoulePerKilogramDegreeCelsius, q => q.ToUnit(SpecificEntropyUnit.KilojoulePerKilogramDegreeCelsius));
            unitConverter.SetConversionFunction<SpecificEntropy>(SpecificEntropyUnit.KilojoulePerKilogramDegreeCelsius, SpecificEntropy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEntropy>(SpecificEntropy.BaseUnit, SpecificEntropyUnit.KilojoulePerKilogramKelvin, q => q.ToUnit(SpecificEntropyUnit.KilojoulePerKilogramKelvin));
            unitConverter.SetConversionFunction<SpecificEntropy>(SpecificEntropyUnit.KilojoulePerKilogramKelvin, SpecificEntropy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEntropy>(SpecificEntropy.BaseUnit, SpecificEntropyUnit.MegajoulePerKilogramDegreeCelsius, q => q.ToUnit(SpecificEntropyUnit.MegajoulePerKilogramDegreeCelsius));
            unitConverter.SetConversionFunction<SpecificEntropy>(SpecificEntropyUnit.MegajoulePerKilogramDegreeCelsius, SpecificEntropy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEntropy>(SpecificEntropy.BaseUnit, SpecificEntropyUnit.MegajoulePerKilogramKelvin, q => q.ToUnit(SpecificEntropyUnit.MegajoulePerKilogramKelvin));
            unitConverter.SetConversionFunction<SpecificEntropy>(SpecificEntropyUnit.MegajoulePerKilogramKelvin, SpecificEntropy.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificVolume>(SpecificVolume.BaseUnit, SpecificVolumeUnit.CubicFootPerPound, q => q.ToUnit(SpecificVolumeUnit.CubicFootPerPound));
            unitConverter.SetConversionFunction<SpecificVolume>(SpecificVolumeUnit.CubicFootPerPound, SpecificVolume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificVolume>(SpecificVolume.BaseUnit, SpecificVolume.BaseUnit, q => q);
            unitConverter.SetConversionFunction<SpecificVolume>(SpecificVolume.BaseUnit, SpecificVolumeUnit.MillicubicMeterPerKilogram, q => q.ToUnit(SpecificVolumeUnit.MillicubicMeterPerKilogram));
            unitConverter.SetConversionFunction<SpecificVolume>(SpecificVolumeUnit.MillicubicMeterPerKilogram, SpecificVolume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeight.BaseUnit, SpecificWeightUnit.KilogramForcePerCubicCentimeter, q => q.ToUnit(SpecificWeightUnit.KilogramForcePerCubicCentimeter));
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeightUnit.KilogramForcePerCubicCentimeter, SpecificWeight.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeight.BaseUnit, SpecificWeightUnit.KilogramForcePerCubicMeter, q => q.ToUnit(SpecificWeightUnit.KilogramForcePerCubicMeter));
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeightUnit.KilogramForcePerCubicMeter, SpecificWeight.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeight.BaseUnit, SpecificWeightUnit.KilogramForcePerCubicMillimeter, q => q.ToUnit(SpecificWeightUnit.KilogramForcePerCubicMillimeter));
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeightUnit.KilogramForcePerCubicMillimeter, SpecificWeight.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeight.BaseUnit, SpecificWeightUnit.KilonewtonPerCubicCentimeter, q => q.ToUnit(SpecificWeightUnit.KilonewtonPerCubicCentimeter));
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeightUnit.KilonewtonPerCubicCentimeter, SpecificWeight.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeight.BaseUnit, SpecificWeightUnit.KilonewtonPerCubicMeter, q => q.ToUnit(SpecificWeightUnit.KilonewtonPerCubicMeter));
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeightUnit.KilonewtonPerCubicMeter, SpecificWeight.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeight.BaseUnit, SpecificWeightUnit.KilonewtonPerCubicMillimeter, q => q.ToUnit(SpecificWeightUnit.KilonewtonPerCubicMillimeter));
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeightUnit.KilonewtonPerCubicMillimeter, SpecificWeight.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeight.BaseUnit, SpecificWeightUnit.KilopoundForcePerCubicFoot, q => q.ToUnit(SpecificWeightUnit.KilopoundForcePerCubicFoot));
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeightUnit.KilopoundForcePerCubicFoot, SpecificWeight.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeight.BaseUnit, SpecificWeightUnit.KilopoundForcePerCubicInch, q => q.ToUnit(SpecificWeightUnit.KilopoundForcePerCubicInch));
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeightUnit.KilopoundForcePerCubicInch, SpecificWeight.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeight.BaseUnit, SpecificWeightUnit.MeganewtonPerCubicMeter, q => q.ToUnit(SpecificWeightUnit.MeganewtonPerCubicMeter));
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeightUnit.MeganewtonPerCubicMeter, SpecificWeight.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeight.BaseUnit, SpecificWeightUnit.NewtonPerCubicCentimeter, q => q.ToUnit(SpecificWeightUnit.NewtonPerCubicCentimeter));
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeightUnit.NewtonPerCubicCentimeter, SpecificWeight.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeight.BaseUnit, SpecificWeight.BaseUnit, q => q);
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeight.BaseUnit, SpecificWeightUnit.NewtonPerCubicMillimeter, q => q.ToUnit(SpecificWeightUnit.NewtonPerCubicMillimeter));
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeightUnit.NewtonPerCubicMillimeter, SpecificWeight.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeight.BaseUnit, SpecificWeightUnit.PoundForcePerCubicFoot, q => q.ToUnit(SpecificWeightUnit.PoundForcePerCubicFoot));
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeightUnit.PoundForcePerCubicFoot, SpecificWeight.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeight.BaseUnit, SpecificWeightUnit.PoundForcePerCubicInch, q => q.ToUnit(SpecificWeightUnit.PoundForcePerCubicInch));
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeightUnit.PoundForcePerCubicInch, SpecificWeight.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeight.BaseUnit, SpecificWeightUnit.TonneForcePerCubicCentimeter, q => q.ToUnit(SpecificWeightUnit.TonneForcePerCubicCentimeter));
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeightUnit.TonneForcePerCubicCentimeter, SpecificWeight.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeight.BaseUnit, SpecificWeightUnit.TonneForcePerCubicMeter, q => q.ToUnit(SpecificWeightUnit.TonneForcePerCubicMeter));
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeightUnit.TonneForcePerCubicMeter, SpecificWeight.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeight.BaseUnit, SpecificWeightUnit.TonneForcePerCubicMillimeter, q => q.ToUnit(SpecificWeightUnit.TonneForcePerCubicMillimeter));
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeightUnit.TonneForcePerCubicMillimeter, SpecificWeight.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.CentimeterPerHour, q => q.ToUnit(SpeedUnit.CentimeterPerHour));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.CentimeterPerHour, Speed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.CentimeterPerMinute, q => q.ToUnit(SpeedUnit.CentimeterPerMinute));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.CentimeterPerMinute, Speed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.CentimeterPerSecond, q => q.ToUnit(SpeedUnit.CentimeterPerSecond));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.CentimeterPerSecond, Speed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.DecimeterPerMinute, q => q.ToUnit(SpeedUnit.DecimeterPerMinute));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.DecimeterPerMinute, Speed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.DecimeterPerSecond, q => q.ToUnit(SpeedUnit.DecimeterPerSecond));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.DecimeterPerSecond, Speed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.FootPerHour, q => q.ToUnit(SpeedUnit.FootPerHour));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.FootPerHour, Speed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.FootPerMinute, q => q.ToUnit(SpeedUnit.FootPerMinute));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.FootPerMinute, Speed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.FootPerSecond, q => q.ToUnit(SpeedUnit.FootPerSecond));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.FootPerSecond, Speed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.InchPerHour, q => q.ToUnit(SpeedUnit.InchPerHour));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.InchPerHour, Speed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.InchPerMinute, q => q.ToUnit(SpeedUnit.InchPerMinute));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.InchPerMinute, Speed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.InchPerSecond, q => q.ToUnit(SpeedUnit.InchPerSecond));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.InchPerSecond, Speed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.KilometerPerHour, q => q.ToUnit(SpeedUnit.KilometerPerHour));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.KilometerPerHour, Speed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.KilometerPerMinute, q => q.ToUnit(SpeedUnit.KilometerPerMinute));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.KilometerPerMinute, Speed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.KilometerPerSecond, q => q.ToUnit(SpeedUnit.KilometerPerSecond));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.KilometerPerSecond, Speed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.Knot, q => q.ToUnit(SpeedUnit.Knot));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.Knot, Speed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.MeterPerHour, q => q.ToUnit(SpeedUnit.MeterPerHour));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.MeterPerHour, Speed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.MeterPerMinute, q => q.ToUnit(SpeedUnit.MeterPerMinute));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.MeterPerMinute, Speed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, Speed.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.MicrometerPerMinute, q => q.ToUnit(SpeedUnit.MicrometerPerMinute));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.MicrometerPerMinute, Speed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.MicrometerPerSecond, q => q.ToUnit(SpeedUnit.MicrometerPerSecond));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.MicrometerPerSecond, Speed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.MilePerHour, q => q.ToUnit(SpeedUnit.MilePerHour));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.MilePerHour, Speed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.MillimeterPerHour, q => q.ToUnit(SpeedUnit.MillimeterPerHour));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.MillimeterPerHour, Speed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.MillimeterPerMinute, q => q.ToUnit(SpeedUnit.MillimeterPerMinute));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.MillimeterPerMinute, Speed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.MillimeterPerSecond, q => q.ToUnit(SpeedUnit.MillimeterPerSecond));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.MillimeterPerSecond, Speed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.NanometerPerMinute, q => q.ToUnit(SpeedUnit.NanometerPerMinute));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.NanometerPerMinute, Speed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.NanometerPerSecond, q => q.ToUnit(SpeedUnit.NanometerPerSecond));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.NanometerPerSecond, Speed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.UsSurveyFootPerHour, q => q.ToUnit(SpeedUnit.UsSurveyFootPerHour));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.UsSurveyFootPerHour, Speed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.UsSurveyFootPerMinute, q => q.ToUnit(SpeedUnit.UsSurveyFootPerMinute));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.UsSurveyFootPerMinute, Speed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.UsSurveyFootPerSecond, q => q.ToUnit(SpeedUnit.UsSurveyFootPerSecond));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.UsSurveyFootPerSecond, Speed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.YardPerHour, q => q.ToUnit(SpeedUnit.YardPerHour));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.YardPerHour, Speed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.YardPerMinute, q => q.ToUnit(SpeedUnit.YardPerMinute));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.YardPerMinute, Speed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.YardPerSecond, q => q.ToUnit(SpeedUnit.YardPerSecond));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.YardPerSecond, Speed.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Temperature>(Temperature.BaseUnit, TemperatureUnit.DegreeCelsius, q => q.ToUnit(TemperatureUnit.DegreeCelsius));
            unitConverter.SetConversionFunction<Temperature>(TemperatureUnit.DegreeCelsius, Temperature.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Temperature>(Temperature.BaseUnit, TemperatureUnit.DegreeDelisle, q => q.ToUnit(TemperatureUnit.DegreeDelisle));
            unitConverter.SetConversionFunction<Temperature>(TemperatureUnit.DegreeDelisle, Temperature.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Temperature>(Temperature.BaseUnit, TemperatureUnit.DegreeFahrenheit, q => q.ToUnit(TemperatureUnit.DegreeFahrenheit));
            unitConverter.SetConversionFunction<Temperature>(TemperatureUnit.DegreeFahrenheit, Temperature.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Temperature>(Temperature.BaseUnit, TemperatureUnit.DegreeNewton, q => q.ToUnit(TemperatureUnit.DegreeNewton));
            unitConverter.SetConversionFunction<Temperature>(TemperatureUnit.DegreeNewton, Temperature.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Temperature>(Temperature.BaseUnit, TemperatureUnit.DegreeRankine, q => q.ToUnit(TemperatureUnit.DegreeRankine));
            unitConverter.SetConversionFunction<Temperature>(TemperatureUnit.DegreeRankine, Temperature.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Temperature>(Temperature.BaseUnit, TemperatureUnit.DegreeReaumur, q => q.ToUnit(TemperatureUnit.DegreeReaumur));
            unitConverter.SetConversionFunction<Temperature>(TemperatureUnit.DegreeReaumur, Temperature.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Temperature>(Temperature.BaseUnit, TemperatureUnit.DegreeRoemer, q => q.ToUnit(TemperatureUnit.DegreeRoemer));
            unitConverter.SetConversionFunction<Temperature>(TemperatureUnit.DegreeRoemer, Temperature.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Temperature>(Temperature.BaseUnit, Temperature.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Temperature>(Temperature.BaseUnit, TemperatureUnit.SolarTemperature, q => q.ToUnit(TemperatureUnit.SolarTemperature));
            unitConverter.SetConversionFunction<Temperature>(TemperatureUnit.SolarTemperature, Temperature.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRate.BaseUnit, TemperatureChangeRateUnit.CentidegreeCelsiusPerSecond, q => q.ToUnit(TemperatureChangeRateUnit.CentidegreeCelsiusPerSecond));
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRateUnit.CentidegreeCelsiusPerSecond, TemperatureChangeRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRate.BaseUnit, TemperatureChangeRateUnit.DecadegreeCelsiusPerSecond, q => q.ToUnit(TemperatureChangeRateUnit.DecadegreeCelsiusPerSecond));
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRateUnit.DecadegreeCelsiusPerSecond, TemperatureChangeRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRate.BaseUnit, TemperatureChangeRateUnit.DecidegreeCelsiusPerSecond, q => q.ToUnit(TemperatureChangeRateUnit.DecidegreeCelsiusPerSecond));
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRateUnit.DecidegreeCelsiusPerSecond, TemperatureChangeRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRate.BaseUnit, TemperatureChangeRateUnit.DegreeCelsiusPerMinute, q => q.ToUnit(TemperatureChangeRateUnit.DegreeCelsiusPerMinute));
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRateUnit.DegreeCelsiusPerMinute, TemperatureChangeRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRate.BaseUnit, TemperatureChangeRate.BaseUnit, q => q);
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRate.BaseUnit, TemperatureChangeRateUnit.HectodegreeCelsiusPerSecond, q => q.ToUnit(TemperatureChangeRateUnit.HectodegreeCelsiusPerSecond));
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRateUnit.HectodegreeCelsiusPerSecond, TemperatureChangeRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRate.BaseUnit, TemperatureChangeRateUnit.KilodegreeCelsiusPerSecond, q => q.ToUnit(TemperatureChangeRateUnit.KilodegreeCelsiusPerSecond));
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRateUnit.KilodegreeCelsiusPerSecond, TemperatureChangeRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRate.BaseUnit, TemperatureChangeRateUnit.MicrodegreeCelsiusPerSecond, q => q.ToUnit(TemperatureChangeRateUnit.MicrodegreeCelsiusPerSecond));
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRateUnit.MicrodegreeCelsiusPerSecond, TemperatureChangeRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRate.BaseUnit, TemperatureChangeRateUnit.MillidegreeCelsiusPerSecond, q => q.ToUnit(TemperatureChangeRateUnit.MillidegreeCelsiusPerSecond));
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRateUnit.MillidegreeCelsiusPerSecond, TemperatureChangeRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRate.BaseUnit, TemperatureChangeRateUnit.NanodegreeCelsiusPerSecond, q => q.ToUnit(TemperatureChangeRateUnit.NanodegreeCelsiusPerSecond));
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRateUnit.NanodegreeCelsiusPerSecond, TemperatureChangeRate.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureDelta>(TemperatureDelta.BaseUnit, TemperatureDeltaUnit.DegreeCelsius, q => q.ToUnit(TemperatureDeltaUnit.DegreeCelsius));
            unitConverter.SetConversionFunction<TemperatureDelta>(TemperatureDeltaUnit.DegreeCelsius, TemperatureDelta.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureDelta>(TemperatureDelta.BaseUnit, TemperatureDeltaUnit.DegreeDelisle, q => q.ToUnit(TemperatureDeltaUnit.DegreeDelisle));
            unitConverter.SetConversionFunction<TemperatureDelta>(TemperatureDeltaUnit.DegreeDelisle, TemperatureDelta.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureDelta>(TemperatureDelta.BaseUnit, TemperatureDeltaUnit.DegreeFahrenheit, q => q.ToUnit(TemperatureDeltaUnit.DegreeFahrenheit));
            unitConverter.SetConversionFunction<TemperatureDelta>(TemperatureDeltaUnit.DegreeFahrenheit, TemperatureDelta.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureDelta>(TemperatureDelta.BaseUnit, TemperatureDeltaUnit.DegreeNewton, q => q.ToUnit(TemperatureDeltaUnit.DegreeNewton));
            unitConverter.SetConversionFunction<TemperatureDelta>(TemperatureDeltaUnit.DegreeNewton, TemperatureDelta.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureDelta>(TemperatureDelta.BaseUnit, TemperatureDeltaUnit.DegreeRankine, q => q.ToUnit(TemperatureDeltaUnit.DegreeRankine));
            unitConverter.SetConversionFunction<TemperatureDelta>(TemperatureDeltaUnit.DegreeRankine, TemperatureDelta.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureDelta>(TemperatureDelta.BaseUnit, TemperatureDeltaUnit.DegreeReaumur, q => q.ToUnit(TemperatureDeltaUnit.DegreeReaumur));
            unitConverter.SetConversionFunction<TemperatureDelta>(TemperatureDeltaUnit.DegreeReaumur, TemperatureDelta.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureDelta>(TemperatureDelta.BaseUnit, TemperatureDeltaUnit.DegreeRoemer, q => q.ToUnit(TemperatureDeltaUnit.DegreeRoemer));
            unitConverter.SetConversionFunction<TemperatureDelta>(TemperatureDeltaUnit.DegreeRoemer, TemperatureDelta.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureDelta>(TemperatureDelta.BaseUnit, TemperatureDelta.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ThermalConductivity>(ThermalConductivity.BaseUnit, ThermalConductivityUnit.BtuPerHourFootFahrenheit, q => q.ToUnit(ThermalConductivityUnit.BtuPerHourFootFahrenheit));
            unitConverter.SetConversionFunction<ThermalConductivity>(ThermalConductivityUnit.BtuPerHourFootFahrenheit, ThermalConductivity.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ThermalConductivity>(ThermalConductivity.BaseUnit, ThermalConductivity.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ThermalResistance>(ThermalResistance.BaseUnit, ThermalResistanceUnit.HourSquareFeetDegreeFahrenheitPerBtu, q => q.ToUnit(ThermalResistanceUnit.HourSquareFeetDegreeFahrenheitPerBtu));
            unitConverter.SetConversionFunction<ThermalResistance>(ThermalResistanceUnit.HourSquareFeetDegreeFahrenheitPerBtu, ThermalResistance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ThermalResistance>(ThermalResistance.BaseUnit, ThermalResistanceUnit.SquareCentimeterHourDegreeCelsiusPerKilocalorie, q => q.ToUnit(ThermalResistanceUnit.SquareCentimeterHourDegreeCelsiusPerKilocalorie));
            unitConverter.SetConversionFunction<ThermalResistance>(ThermalResistanceUnit.SquareCentimeterHourDegreeCelsiusPerKilocalorie, ThermalResistance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ThermalResistance>(ThermalResistance.BaseUnit, ThermalResistanceUnit.SquareCentimeterKelvinPerWatt, q => q.ToUnit(ThermalResistanceUnit.SquareCentimeterKelvinPerWatt));
            unitConverter.SetConversionFunction<ThermalResistance>(ThermalResistanceUnit.SquareCentimeterKelvinPerWatt, ThermalResistance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ThermalResistance>(ThermalResistance.BaseUnit, ThermalResistanceUnit.SquareMeterDegreeCelsiusPerWatt, q => q.ToUnit(ThermalResistanceUnit.SquareMeterDegreeCelsiusPerWatt));
            unitConverter.SetConversionFunction<ThermalResistance>(ThermalResistanceUnit.SquareMeterDegreeCelsiusPerWatt, ThermalResistance.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ThermalResistance>(ThermalResistance.BaseUnit, ThermalResistance.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.KilogramForceCentimeter, q => q.ToUnit(TorqueUnit.KilogramForceCentimeter));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.KilogramForceCentimeter, Torque.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.KilogramForceMeter, q => q.ToUnit(TorqueUnit.KilogramForceMeter));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.KilogramForceMeter, Torque.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.KilogramForceMillimeter, q => q.ToUnit(TorqueUnit.KilogramForceMillimeter));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.KilogramForceMillimeter, Torque.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.KilonewtonCentimeter, q => q.ToUnit(TorqueUnit.KilonewtonCentimeter));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.KilonewtonCentimeter, Torque.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.KilonewtonMeter, q => q.ToUnit(TorqueUnit.KilonewtonMeter));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.KilonewtonMeter, Torque.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.KilonewtonMillimeter, q => q.ToUnit(TorqueUnit.KilonewtonMillimeter));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.KilonewtonMillimeter, Torque.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.KilopoundForceFoot, q => q.ToUnit(TorqueUnit.KilopoundForceFoot));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.KilopoundForceFoot, Torque.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.KilopoundForceInch, q => q.ToUnit(TorqueUnit.KilopoundForceInch));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.KilopoundForceInch, Torque.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.MeganewtonCentimeter, q => q.ToUnit(TorqueUnit.MeganewtonCentimeter));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.MeganewtonCentimeter, Torque.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.MeganewtonMeter, q => q.ToUnit(TorqueUnit.MeganewtonMeter));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.MeganewtonMeter, Torque.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.MeganewtonMillimeter, q => q.ToUnit(TorqueUnit.MeganewtonMillimeter));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.MeganewtonMillimeter, Torque.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.MegapoundForceFoot, q => q.ToUnit(TorqueUnit.MegapoundForceFoot));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.MegapoundForceFoot, Torque.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.MegapoundForceInch, q => q.ToUnit(TorqueUnit.MegapoundForceInch));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.MegapoundForceInch, Torque.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.NewtonCentimeter, q => q.ToUnit(TorqueUnit.NewtonCentimeter));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.NewtonCentimeter, Torque.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, Torque.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.NewtonMillimeter, q => q.ToUnit(TorqueUnit.NewtonMillimeter));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.NewtonMillimeter, Torque.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.PoundForceFoot, q => q.ToUnit(TorqueUnit.PoundForceFoot));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.PoundForceFoot, Torque.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.PoundForceInch, q => q.ToUnit(TorqueUnit.PoundForceInch));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.PoundForceInch, Torque.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.TonneForceCentimeter, q => q.ToUnit(TorqueUnit.TonneForceCentimeter));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.TonneForceCentimeter, Torque.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.TonneForceMeter, q => q.ToUnit(TorqueUnit.TonneForceMeter));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.TonneForceMeter, Torque.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.TonneForceMillimeter, q => q.ToUnit(TorqueUnit.TonneForceMillimeter));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.TonneForceMillimeter, Torque.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLength.BaseUnit, TorquePerLengthUnit.KilogramForceCentimeterPerMeter, q => q.ToUnit(TorquePerLengthUnit.KilogramForceCentimeterPerMeter));
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLengthUnit.KilogramForceCentimeterPerMeter, TorquePerLength.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLength.BaseUnit, TorquePerLengthUnit.KilogramForceMeterPerMeter, q => q.ToUnit(TorquePerLengthUnit.KilogramForceMeterPerMeter));
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLengthUnit.KilogramForceMeterPerMeter, TorquePerLength.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLength.BaseUnit, TorquePerLengthUnit.KilogramForceMillimeterPerMeter, q => q.ToUnit(TorquePerLengthUnit.KilogramForceMillimeterPerMeter));
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLengthUnit.KilogramForceMillimeterPerMeter, TorquePerLength.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLength.BaseUnit, TorquePerLengthUnit.KilonewtonCentimeterPerMeter, q => q.ToUnit(TorquePerLengthUnit.KilonewtonCentimeterPerMeter));
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLengthUnit.KilonewtonCentimeterPerMeter, TorquePerLength.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLength.BaseUnit, TorquePerLengthUnit.KilonewtonMeterPerMeter, q => q.ToUnit(TorquePerLengthUnit.KilonewtonMeterPerMeter));
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLengthUnit.KilonewtonMeterPerMeter, TorquePerLength.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLength.BaseUnit, TorquePerLengthUnit.KilonewtonMillimeterPerMeter, q => q.ToUnit(TorquePerLengthUnit.KilonewtonMillimeterPerMeter));
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLengthUnit.KilonewtonMillimeterPerMeter, TorquePerLength.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLength.BaseUnit, TorquePerLengthUnit.KilopoundForceFootPerFoot, q => q.ToUnit(TorquePerLengthUnit.KilopoundForceFootPerFoot));
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLengthUnit.KilopoundForceFootPerFoot, TorquePerLength.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLength.BaseUnit, TorquePerLengthUnit.KilopoundForceInchPerFoot, q => q.ToUnit(TorquePerLengthUnit.KilopoundForceInchPerFoot));
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLengthUnit.KilopoundForceInchPerFoot, TorquePerLength.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLength.BaseUnit, TorquePerLengthUnit.MeganewtonCentimeterPerMeter, q => q.ToUnit(TorquePerLengthUnit.MeganewtonCentimeterPerMeter));
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLengthUnit.MeganewtonCentimeterPerMeter, TorquePerLength.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLength.BaseUnit, TorquePerLengthUnit.MeganewtonMeterPerMeter, q => q.ToUnit(TorquePerLengthUnit.MeganewtonMeterPerMeter));
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLengthUnit.MeganewtonMeterPerMeter, TorquePerLength.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLength.BaseUnit, TorquePerLengthUnit.MeganewtonMillimeterPerMeter, q => q.ToUnit(TorquePerLengthUnit.MeganewtonMillimeterPerMeter));
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLengthUnit.MeganewtonMillimeterPerMeter, TorquePerLength.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLength.BaseUnit, TorquePerLengthUnit.MegapoundForceFootPerFoot, q => q.ToUnit(TorquePerLengthUnit.MegapoundForceFootPerFoot));
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLengthUnit.MegapoundForceFootPerFoot, TorquePerLength.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLength.BaseUnit, TorquePerLengthUnit.MegapoundForceInchPerFoot, q => q.ToUnit(TorquePerLengthUnit.MegapoundForceInchPerFoot));
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLengthUnit.MegapoundForceInchPerFoot, TorquePerLength.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLength.BaseUnit, TorquePerLengthUnit.NewtonCentimeterPerMeter, q => q.ToUnit(TorquePerLengthUnit.NewtonCentimeterPerMeter));
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLengthUnit.NewtonCentimeterPerMeter, TorquePerLength.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLength.BaseUnit, TorquePerLength.BaseUnit, q => q);
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLength.BaseUnit, TorquePerLengthUnit.NewtonMillimeterPerMeter, q => q.ToUnit(TorquePerLengthUnit.NewtonMillimeterPerMeter));
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLengthUnit.NewtonMillimeterPerMeter, TorquePerLength.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLength.BaseUnit, TorquePerLengthUnit.PoundForceFootPerFoot, q => q.ToUnit(TorquePerLengthUnit.PoundForceFootPerFoot));
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLengthUnit.PoundForceFootPerFoot, TorquePerLength.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLength.BaseUnit, TorquePerLengthUnit.PoundForceInchPerFoot, q => q.ToUnit(TorquePerLengthUnit.PoundForceInchPerFoot));
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLengthUnit.PoundForceInchPerFoot, TorquePerLength.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLength.BaseUnit, TorquePerLengthUnit.TonneForceCentimeterPerMeter, q => q.ToUnit(TorquePerLengthUnit.TonneForceCentimeterPerMeter));
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLengthUnit.TonneForceCentimeterPerMeter, TorquePerLength.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLength.BaseUnit, TorquePerLengthUnit.TonneForceMeterPerMeter, q => q.ToUnit(TorquePerLengthUnit.TonneForceMeterPerMeter));
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLengthUnit.TonneForceMeterPerMeter, TorquePerLength.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLength.BaseUnit, TorquePerLengthUnit.TonneForceMillimeterPerMeter, q => q.ToUnit(TorquePerLengthUnit.TonneForceMillimeterPerMeter));
            unitConverter.SetConversionFunction<TorquePerLength>(TorquePerLengthUnit.TonneForceMillimeterPerMeter, TorquePerLength.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VitaminA>(VitaminA.BaseUnit, VitaminA.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.AcreFoot, q => q.ToUnit(VolumeUnit.AcreFoot));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.AcreFoot, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.AuTablespoon, q => q.ToUnit(VolumeUnit.AuTablespoon));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.AuTablespoon, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.Centiliter, q => q.ToUnit(VolumeUnit.Centiliter));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.Centiliter, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.CubicCentimeter, q => q.ToUnit(VolumeUnit.CubicCentimeter));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.CubicCentimeter, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.CubicDecimeter, q => q.ToUnit(VolumeUnit.CubicDecimeter));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.CubicDecimeter, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.CubicFoot, q => q.ToUnit(VolumeUnit.CubicFoot));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.CubicFoot, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.CubicHectometer, q => q.ToUnit(VolumeUnit.CubicHectometer));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.CubicHectometer, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.CubicInch, q => q.ToUnit(VolumeUnit.CubicInch));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.CubicInch, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.CubicKilometer, q => q.ToUnit(VolumeUnit.CubicKilometer));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.CubicKilometer, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, Volume.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.CubicMicrometer, q => q.ToUnit(VolumeUnit.CubicMicrometer));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.CubicMicrometer, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.CubicMile, q => q.ToUnit(VolumeUnit.CubicMile));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.CubicMile, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.CubicMillimeter, q => q.ToUnit(VolumeUnit.CubicMillimeter));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.CubicMillimeter, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.CubicYard, q => q.ToUnit(VolumeUnit.CubicYard));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.CubicYard, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.Deciliter, q => q.ToUnit(VolumeUnit.Deciliter));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.Deciliter, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.HectocubicFoot, q => q.ToUnit(VolumeUnit.HectocubicFoot));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.HectocubicFoot, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.HectocubicMeter, q => q.ToUnit(VolumeUnit.HectocubicMeter));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.HectocubicMeter, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.Hectoliter, q => q.ToUnit(VolumeUnit.Hectoliter));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.Hectoliter, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.ImperialBeerBarrel, q => q.ToUnit(VolumeUnit.ImperialBeerBarrel));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.ImperialBeerBarrel, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.ImperialGallon, q => q.ToUnit(VolumeUnit.ImperialGallon));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.ImperialGallon, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.ImperialOunce, q => q.ToUnit(VolumeUnit.ImperialOunce));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.ImperialOunce, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.ImperialPint, q => q.ToUnit(VolumeUnit.ImperialPint));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.ImperialPint, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.KilocubicFoot, q => q.ToUnit(VolumeUnit.KilocubicFoot));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.KilocubicFoot, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.KilocubicMeter, q => q.ToUnit(VolumeUnit.KilocubicMeter));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.KilocubicMeter, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.KiloimperialGallon, q => q.ToUnit(VolumeUnit.KiloimperialGallon));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.KiloimperialGallon, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.Kiloliter, q => q.ToUnit(VolumeUnit.Kiloliter));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.Kiloliter, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.KilousGallon, q => q.ToUnit(VolumeUnit.KilousGallon));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.KilousGallon, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.Liter, q => q.ToUnit(VolumeUnit.Liter));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.Liter, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.MegacubicFoot, q => q.ToUnit(VolumeUnit.MegacubicFoot));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.MegacubicFoot, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.MegaimperialGallon, q => q.ToUnit(VolumeUnit.MegaimperialGallon));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.MegaimperialGallon, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.Megaliter, q => q.ToUnit(VolumeUnit.Megaliter));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.Megaliter, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.MegausGallon, q => q.ToUnit(VolumeUnit.MegausGallon));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.MegausGallon, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.MetricCup, q => q.ToUnit(VolumeUnit.MetricCup));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.MetricCup, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.MetricTeaspoon, q => q.ToUnit(VolumeUnit.MetricTeaspoon));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.MetricTeaspoon, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.Microliter, q => q.ToUnit(VolumeUnit.Microliter));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.Microliter, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.Milliliter, q => q.ToUnit(VolumeUnit.Milliliter));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.Milliliter, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.OilBarrel, q => q.ToUnit(VolumeUnit.OilBarrel));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.OilBarrel, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.UkTablespoon, q => q.ToUnit(VolumeUnit.UkTablespoon));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.UkTablespoon, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.UsBeerBarrel, q => q.ToUnit(VolumeUnit.UsBeerBarrel));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.UsBeerBarrel, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.UsCustomaryCup, q => q.ToUnit(VolumeUnit.UsCustomaryCup));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.UsCustomaryCup, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.UsGallon, q => q.ToUnit(VolumeUnit.UsGallon));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.UsGallon, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.UsLegalCup, q => q.ToUnit(VolumeUnit.UsLegalCup));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.UsLegalCup, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.UsOunce, q => q.ToUnit(VolumeUnit.UsOunce));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.UsOunce, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.UsPint, q => q.ToUnit(VolumeUnit.UsPint));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.UsPint, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.UsQuart, q => q.ToUnit(VolumeUnit.UsQuart));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.UsQuart, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.UsTablespoon, q => q.ToUnit(VolumeUnit.UsTablespoon));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.UsTablespoon, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.UsTeaspoon, q => q.ToUnit(VolumeUnit.UsTeaspoon));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.UsTeaspoon, Volume.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentration.BaseUnit, VolumeConcentrationUnit.CentilitersPerLiter, q => q.ToUnit(VolumeConcentrationUnit.CentilitersPerLiter));
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentrationUnit.CentilitersPerLiter, VolumeConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentration.BaseUnit, VolumeConcentrationUnit.CentilitersPerMililiter, q => q.ToUnit(VolumeConcentrationUnit.CentilitersPerMililiter));
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentrationUnit.CentilitersPerMililiter, VolumeConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentration.BaseUnit, VolumeConcentrationUnit.DecilitersPerLiter, q => q.ToUnit(VolumeConcentrationUnit.DecilitersPerLiter));
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentrationUnit.DecilitersPerLiter, VolumeConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentration.BaseUnit, VolumeConcentrationUnit.DecilitersPerMililiter, q => q.ToUnit(VolumeConcentrationUnit.DecilitersPerMililiter));
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentrationUnit.DecilitersPerMililiter, VolumeConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentration.BaseUnit, VolumeConcentration.BaseUnit, q => q);
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentration.BaseUnit, VolumeConcentrationUnit.LitersPerLiter, q => q.ToUnit(VolumeConcentrationUnit.LitersPerLiter));
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentrationUnit.LitersPerLiter, VolumeConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentration.BaseUnit, VolumeConcentrationUnit.LitersPerMililiter, q => q.ToUnit(VolumeConcentrationUnit.LitersPerMililiter));
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentrationUnit.LitersPerMililiter, VolumeConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentration.BaseUnit, VolumeConcentrationUnit.MicrolitersPerLiter, q => q.ToUnit(VolumeConcentrationUnit.MicrolitersPerLiter));
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentrationUnit.MicrolitersPerLiter, VolumeConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentration.BaseUnit, VolumeConcentrationUnit.MicrolitersPerMililiter, q => q.ToUnit(VolumeConcentrationUnit.MicrolitersPerMililiter));
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentrationUnit.MicrolitersPerMililiter, VolumeConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentration.BaseUnit, VolumeConcentrationUnit.MillilitersPerLiter, q => q.ToUnit(VolumeConcentrationUnit.MillilitersPerLiter));
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentrationUnit.MillilitersPerLiter, VolumeConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentration.BaseUnit, VolumeConcentrationUnit.MillilitersPerMililiter, q => q.ToUnit(VolumeConcentrationUnit.MillilitersPerMililiter));
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentrationUnit.MillilitersPerMililiter, VolumeConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentration.BaseUnit, VolumeConcentrationUnit.NanolitersPerLiter, q => q.ToUnit(VolumeConcentrationUnit.NanolitersPerLiter));
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentrationUnit.NanolitersPerLiter, VolumeConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentration.BaseUnit, VolumeConcentrationUnit.NanolitersPerMililiter, q => q.ToUnit(VolumeConcentrationUnit.NanolitersPerMililiter));
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentrationUnit.NanolitersPerMililiter, VolumeConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentration.BaseUnit, VolumeConcentrationUnit.PartPerBillion, q => q.ToUnit(VolumeConcentrationUnit.PartPerBillion));
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentrationUnit.PartPerBillion, VolumeConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentration.BaseUnit, VolumeConcentrationUnit.PartPerMillion, q => q.ToUnit(VolumeConcentrationUnit.PartPerMillion));
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentrationUnit.PartPerMillion, VolumeConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentration.BaseUnit, VolumeConcentrationUnit.PartPerThousand, q => q.ToUnit(VolumeConcentrationUnit.PartPerThousand));
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentrationUnit.PartPerThousand, VolumeConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentration.BaseUnit, VolumeConcentrationUnit.PartPerTrillion, q => q.ToUnit(VolumeConcentrationUnit.PartPerTrillion));
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentrationUnit.PartPerTrillion, VolumeConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentration.BaseUnit, VolumeConcentrationUnit.Percent, q => q.ToUnit(VolumeConcentrationUnit.Percent));
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentrationUnit.Percent, VolumeConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentration.BaseUnit, VolumeConcentrationUnit.PicolitersPerLiter, q => q.ToUnit(VolumeConcentrationUnit.PicolitersPerLiter));
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentrationUnit.PicolitersPerLiter, VolumeConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentration.BaseUnit, VolumeConcentrationUnit.PicolitersPerMililiter, q => q.ToUnit(VolumeConcentrationUnit.PicolitersPerMililiter));
            unitConverter.SetConversionFunction<VolumeConcentration>(VolumeConcentrationUnit.PicolitersPerMililiter, VolumeConcentration.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.AcreFootPerDay, q => q.ToUnit(VolumeFlowUnit.AcreFootPerDay));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.AcreFootPerDay, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.AcreFootPerHour, q => q.ToUnit(VolumeFlowUnit.AcreFootPerHour));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.AcreFootPerHour, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.AcreFootPerMinute, q => q.ToUnit(VolumeFlowUnit.AcreFootPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.AcreFootPerMinute, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.AcreFootPerSecond, q => q.ToUnit(VolumeFlowUnit.AcreFootPerSecond));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.AcreFootPerSecond, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.CentiliterPerDay, q => q.ToUnit(VolumeFlowUnit.CentiliterPerDay));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.CentiliterPerDay, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.CentiliterPerMinute, q => q.ToUnit(VolumeFlowUnit.CentiliterPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.CentiliterPerMinute, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.CubicDecimeterPerMinute, q => q.ToUnit(VolumeFlowUnit.CubicDecimeterPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.CubicDecimeterPerMinute, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.CubicFootPerHour, q => q.ToUnit(VolumeFlowUnit.CubicFootPerHour));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.CubicFootPerHour, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.CubicFootPerMinute, q => q.ToUnit(VolumeFlowUnit.CubicFootPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.CubicFootPerMinute, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.CubicFootPerSecond, q => q.ToUnit(VolumeFlowUnit.CubicFootPerSecond));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.CubicFootPerSecond, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.CubicMeterPerDay, q => q.ToUnit(VolumeFlowUnit.CubicMeterPerDay));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.CubicMeterPerDay, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.CubicMeterPerHour, q => q.ToUnit(VolumeFlowUnit.CubicMeterPerHour));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.CubicMeterPerHour, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.CubicMeterPerMinute, q => q.ToUnit(VolumeFlowUnit.CubicMeterPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.CubicMeterPerMinute, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlow.BaseUnit, q => q);
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.CubicMillimeterPerSecond, q => q.ToUnit(VolumeFlowUnit.CubicMillimeterPerSecond));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.CubicMillimeterPerSecond, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.CubicYardPerDay, q => q.ToUnit(VolumeFlowUnit.CubicYardPerDay));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.CubicYardPerDay, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.CubicYardPerHour, q => q.ToUnit(VolumeFlowUnit.CubicYardPerHour));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.CubicYardPerHour, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.CubicYardPerMinute, q => q.ToUnit(VolumeFlowUnit.CubicYardPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.CubicYardPerMinute, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.CubicYardPerSecond, q => q.ToUnit(VolumeFlowUnit.CubicYardPerSecond));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.CubicYardPerSecond, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.DeciliterPerDay, q => q.ToUnit(VolumeFlowUnit.DeciliterPerDay));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.DeciliterPerDay, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.DeciliterPerMinute, q => q.ToUnit(VolumeFlowUnit.DeciliterPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.DeciliterPerMinute, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.KiloliterPerDay, q => q.ToUnit(VolumeFlowUnit.KiloliterPerDay));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.KiloliterPerDay, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.KiloliterPerMinute, q => q.ToUnit(VolumeFlowUnit.KiloliterPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.KiloliterPerMinute, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.KilousGallonPerMinute, q => q.ToUnit(VolumeFlowUnit.KilousGallonPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.KilousGallonPerMinute, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.LiterPerDay, q => q.ToUnit(VolumeFlowUnit.LiterPerDay));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.LiterPerDay, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.LiterPerHour, q => q.ToUnit(VolumeFlowUnit.LiterPerHour));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.LiterPerHour, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.LiterPerMinute, q => q.ToUnit(VolumeFlowUnit.LiterPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.LiterPerMinute, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.LiterPerSecond, q => q.ToUnit(VolumeFlowUnit.LiterPerSecond));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.LiterPerSecond, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.MegaliterPerDay, q => q.ToUnit(VolumeFlowUnit.MegaliterPerDay));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.MegaliterPerDay, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.MegaukGallonPerSecond, q => q.ToUnit(VolumeFlowUnit.MegaukGallonPerSecond));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.MegaukGallonPerSecond, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.MicroliterPerDay, q => q.ToUnit(VolumeFlowUnit.MicroliterPerDay));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.MicroliterPerDay, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.MicroliterPerMinute, q => q.ToUnit(VolumeFlowUnit.MicroliterPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.MicroliterPerMinute, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.MilliliterPerDay, q => q.ToUnit(VolumeFlowUnit.MilliliterPerDay));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.MilliliterPerDay, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.MilliliterPerMinute, q => q.ToUnit(VolumeFlowUnit.MilliliterPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.MilliliterPerMinute, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.MillionUsGallonsPerDay, q => q.ToUnit(VolumeFlowUnit.MillionUsGallonsPerDay));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.MillionUsGallonsPerDay, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.NanoliterPerDay, q => q.ToUnit(VolumeFlowUnit.NanoliterPerDay));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.NanoliterPerDay, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.NanoliterPerMinute, q => q.ToUnit(VolumeFlowUnit.NanoliterPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.NanoliterPerMinute, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.OilBarrelPerDay, q => q.ToUnit(VolumeFlowUnit.OilBarrelPerDay));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.OilBarrelPerDay, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.OilBarrelPerHour, q => q.ToUnit(VolumeFlowUnit.OilBarrelPerHour));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.OilBarrelPerHour, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.OilBarrelPerMinute, q => q.ToUnit(VolumeFlowUnit.OilBarrelPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.OilBarrelPerMinute, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.OilBarrelPerSecond, q => q.ToUnit(VolumeFlowUnit.OilBarrelPerSecond));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.OilBarrelPerSecond, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.UkGallonPerDay, q => q.ToUnit(VolumeFlowUnit.UkGallonPerDay));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.UkGallonPerDay, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.UkGallonPerHour, q => q.ToUnit(VolumeFlowUnit.UkGallonPerHour));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.UkGallonPerHour, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.UkGallonPerMinute, q => q.ToUnit(VolumeFlowUnit.UkGallonPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.UkGallonPerMinute, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.UkGallonPerSecond, q => q.ToUnit(VolumeFlowUnit.UkGallonPerSecond));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.UkGallonPerSecond, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.UsGallonPerDay, q => q.ToUnit(VolumeFlowUnit.UsGallonPerDay));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.UsGallonPerDay, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.UsGallonPerHour, q => q.ToUnit(VolumeFlowUnit.UsGallonPerHour));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.UsGallonPerHour, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.UsGallonPerMinute, q => q.ToUnit(VolumeFlowUnit.UsGallonPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.UsGallonPerMinute, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.UsGallonPerSecond, q => q.ToUnit(VolumeFlowUnit.UsGallonPerSecond));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.UsGallonPerSecond, VolumeFlow.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumePerLength>(VolumePerLength.BaseUnit, VolumePerLength.BaseUnit, q => q);
            unitConverter.SetConversionFunction<VolumePerLength>(VolumePerLength.BaseUnit, VolumePerLengthUnit.LiterPerMeter, q => q.ToUnit(VolumePerLengthUnit.LiterPerMeter));
            unitConverter.SetConversionFunction<VolumePerLength>(VolumePerLengthUnit.LiterPerMeter, VolumePerLength.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumePerLength>(VolumePerLength.BaseUnit, VolumePerLengthUnit.OilBarrelPerFoot, q => q.ToUnit(VolumePerLengthUnit.OilBarrelPerFoot));
            unitConverter.SetConversionFunction<VolumePerLength>(VolumePerLengthUnit.OilBarrelPerFoot, VolumePerLength.BaseUnit, q => q.ToBaseUnit());
        }
    }
}
